
(:patch
 (:name "dyci2generator-audio")
 (:doc "")
 (:info
  (:created "2018/06/17 2:59:29")
  (:modified "2021/01/19 13:41:10")
  (:by "om-sharp")
  (:version 1.02))
 (:window (:size (991 1021)) (:position (449 25)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name "DYCI2GENERATOR")
   (:x 119)
   (:y 673)
   (:w 278)
   (:h 57)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(100 300)"
         "(300 500)"
         "(500 700)"
         "(700 900)"
         "(900 1100)"
         "(1100 1300)"
         "(1300 1500)"
         "(1500 1700)"
         "(1700 1900)"
         "(1900 2100)"
         "(2100 2300)"
         "(2300 2500)"
         "(2500 2700)"
         "(2700 2900)"
         "(2900 3100)"
         "(3100 3300)"
         "(3300 3500)"
         "(3500 3700)"
         "(3700 3900)"
         "(3900 4100)"
         "(4100 4300)"
         "(4300 4500)"
         "(4500 4700)"
         "(4700 4900)"))
       (:labls
        (:list
         "A"
         "D"
         "B"
         "C"
         "C"
         "C"
         "C"
         "A"
         "D"
         "B"
         "B"
         "D"
         "B"
         "A"
         "B"
         "D"
         "A"
         "D"
         "D"
         "D"
         "C"
         "A"
         "B"
         "B"
         "A"))))))
   (:id 0))
  (:box
   (:library "om-dyci2")
   (:type :function)
   (:reference (:symbol "DYCI2QUERY" "DYCI2"))
   (:group-id nil)
   (:name "dyci2query")
   (:x 489)
   (:y 756)
   (:w 97)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "QUERY")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 146)
   (:y 276)
   (:w 242)
   (:h 64)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "markers")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "markers") (:reactive nil)))
   (:window (:size (939 221)) (:position (471 294)))
   (:edition-params (:show-timeline nil))
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:n-samples nil)
       (:n-channels nil)
       (:sample-rate nil)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname nil)))))
   (:id 2))
  (:box
   (:type :function)
   (:reference arithm-ser)
   (:group-id nil)
   (:name "arithm-ser")
   (:x 355)
   (:y 30)
   (:w 96)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 0)
     (:reactive nil))
    (:input (:type :standard) (:name "END") (:value 5) (:reactive nil))
    (:input
     (:type :standard)
     (:name "STEP")
     (:value 0.2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 436)
   (:y 0)
   (:w 36)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 200)
   (:id 4))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 388)
   (:y 0)
   (:w 42)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5000)
   (:id 5))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 345)
   (:y 0)
   (:w 36)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100)
   (:id 6))
  (:box
   (:type :function)
   (:reference file-chooser)
   (:group-id nil)
   (:name "file-chooser")
   (:x 100)
   (:y 177)
   (:w 103)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :locked)
   (:lambda nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :value)
   (:reference null)
   (:group-id nil)
   (:name "value box")
   (:x 20)
   (:y 211)
   (:w 372)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 8))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 448)
   (:y 92)
   (:w 99)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list "A" "B" "C" "D"))
   (:id 9))
  (:box
   (:type :function)
   (:reference nth-random)
   (:group-id nil)
   (:name "nth-random")
   (:x 446)
   (:y 124)
   (:w 103)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :special)
   (:reference repeat-n)
   (:group-id nil)
   (:name "repeat-n")
   (:x 475)
   (:y 162)
   (:w 91)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "self")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "num")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "collected results") (:reactive nil)))
   (:id 11))
  (:comment
   (:x 452)
   (:y 73)
   (:w 90)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "dummy labels")
   (:id 12))
  (:box
   (:type :function)
   (:reference length)
   (:group-id nil)
   (:name "length")
   (:x 569)
   (:y 75)
   (:w 72)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 594)
   (:y 118)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 25)
   (:id 14))
  (:comment
   (:x 335)
   (:y 66)
   (:w 55)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "markers")
   (:id 15))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 165)
   (:y 625)
   (:w 77)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 423)
   (:y 808)
   (:w 77)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :function)
   (:reference read-from-string)
   (:group-id nil)
   (:name "read-from-string")
   (:x 328)
   (:y 761)
   (:w 131)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:inputs
    (:input
     (:type :standard)
     (:name "STRING")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "remix")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (528 694)) (:position (389 112)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "SEGMENTS") (:doc "")))
       (:group-id nil)
       (:name "SEGMENTS")
       (:x 154)
       (:y 59)
       (:w 81)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 268)
       (:y 569)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "SOUND") (:doc "")))
       (:group-id nil)
       (:name "SOUND")
       (:x 91)
       (:y 206)
       (:w 61)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "CROSSFADE") (:doc "")))
       (:group-id nil)
       (:name "CROSSFADE")
       (:x 320)
       (:y 144)
       (:w 85)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 134)
       (:y 380)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 166)
       (:y 116)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 5))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 273)
       (:y 332)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference split)
       (:group-id nil)
       (:name "split")
       (:x 170)
       (:y 169)
       (:w 61)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference sound-cut)
       (:group-id nil)
       (:name "sound-cut")
       (:x 153)
       (:y 264)
       (:w 94)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "S")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "BEG")
         (:value 0.0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 1.0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference sound-seq)
       (:group-id nil)
       (:name "sound-seq")
       (:x 194)
       (:y 430)
       (:w 96)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda :lambda)
       (:inputs
        (:input
         (:type :standard)
         (:name "S1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "S2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "crossfade")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference reduce)
       (:group-id nil)
       (:name "reduce")
       (:x 257)
       (:y 474)
       (:w 74)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 242)
       (:y 225)
       (:w 64)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :function)
       (:reference om-)
       (:group-id nil)
       (:name "om-")
       (:x 168)
       (:y 224)
       (:w 61)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :function)
       (:reference sound-fade)
       (:group-id nil)
       (:name "sound-fade")
       (:x 291)
       (:y 517)
       (:w 100)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "S")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "IN")
         (:value 0.1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "OUT")
         (:value 0.1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 9 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 6 :out 1)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 7 :out 1)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 8 :in 2)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 1 :in 0))))))
   (:group-id nil)
   (:name "remix")
   (:x 566)
   (:y 858)
   (:w 69)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEGMENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CROSSFADE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 298)
   (:y 899)
   (:w 603)
   (:h 85)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size (966 385)) (:position (42 68)))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:n-samples nil)
       (:n-channels nil)
       (:sample-rate nil)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname nil)))))
   (:id 20))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name nil)
   (:x 667)
   (:y 549)
   (:w 70)
   (:h 129)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :text-list)
     (:reactive t)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "output-mode") (:reactive nil)))
   (:window (:size (453 118)) (:position (105 137)))
   (:edition-params (:output-mode :text-list) (:read-mode :list))
   (:value
    (:object
     (:class textbuffer)
     (:slots ((:contents (:list "A" "B" "C" "D" "A" "B" "C" "D"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 21))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 605)
   (:y 711)
   (:w 77)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 614)
   (:y 796)
   (:w 36)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 10)
   (:id 23))
  (:box
   (:type :function)
   (:reference string-upcase)
   (:group-id nil)
   (:name "string-upcase")
   (:x 514)
   (:y 658)
   (:w 113)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:inputs
    (:input
     (:type :standard)
     (:name "STRING")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 449)
   (:y 195)
   (:w 54)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 25))
  (:box
   (:type :function)
   (:reference mat-trans)
   (:group-id nil)
   (:name "mat-trans")
   (:x 425)
   (:y 228)
   (:w 93)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MATRIX")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:type :function)
   (:reference cdr)
   (:group-id nil)
   (:name "cdr")
   (:x 225)
   (:y 470)
   (:w 55)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "X")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 27))
  (:box
   (:type :function)
   (:reference butlast)
   (:group-id nil)
   (:name "butlast")
   (:x 145)
   (:y 471)
   (:w 75)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 28))
  (:box
   (:type :function)
   (:reference mat-trans)
   (:group-id nil)
   (:name "mat-trans")
   (:x 168)
   (:y 548)
   (:w 92)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MATRIX")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 29))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 175)
   (:y 511)
   (:w 83)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 30))
  (:box
   (:type :function)
   (:reference mat-trans)
   (:group-id nil)
   (:name "mat-trans")
   (:x 272)
   (:y 376)
   (:w 92)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MATRIX")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 31))
  (:box
   (:type :function)
   (:reference split)
   (:group-id nil)
   (:name "split")
   (:x 255)
   (:y 412)
   (:w 126)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 32))
  (:comment
   (:x 216)
   (:y 417)
   (:w 43)
   (:h 25)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14) (:style :italic)))
     (:t-or-nil t)))
   (:align nil)
   (:text "times")
   (:id 33))
  (:comment
   (:x 392)
   (:y 418)
   (:w 45)
   (:h 25)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14) (:style :italic)))
     (:t-or-nil t)))
   (:align nil)
   (:text "labels")
   (:id 34))
  (:comment
   (:x 263)
   (:y 807)
   (:w 134)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font-or-nil (:font nil) (:t-or-nil nil)))
   (:align nil)
   (:text "get-segments (t1 t2)")
   (:id 35))
  (:box
   (:type :function)
   (:reference write-to-string)
   (:group-id nil)
   (:name "write-to-string")
   (:x 89)
   (:y 586)
   (:w 119)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:inputs
    (:input
     (:type :standard)
     (:name "OBJECT")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 36)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 17 :in 1)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 19 :in 1))
   (:attributes (:color nil :style nil :modif (0 -0.45))))
  (:connection (:from (:box 2 :out 1)) (:to (:box 31 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 25 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 2)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 2 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 25 :in 1)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 11 :in 1)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 0 :in 1)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 19 :in 0)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 17 :in 0)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 20 :in 0)))
  (:connection (:from (:box 21 :out 1)) (:to (:box 22 :in 1)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 19 :in 2)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 22 :in 0)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 26 :in 0)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 2 :in 1)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 30 :in 1)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 30 :in 0)))
  (:connection
   (:from (:box 29 :out 0))
   (:to (:box 16 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 30 :out 0)) (:to (:box 29 :in 0)))
  (:connection (:from (:box 31 :out 0)) (:to (:box 32 :in 0)))
  (:connection (:from (:box 32 :out 0)) (:to (:box 28 :in 0)))
  (:connection (:from (:box 32 :out 0)) (:to (:box 27 :in 0)))
  (:connection (:from (:box 32 :out 1)) (:to (:box 0 :in 2)))
  (:connection (:from (:box 36 :out 0)) (:to (:box 16 :in 0)))))