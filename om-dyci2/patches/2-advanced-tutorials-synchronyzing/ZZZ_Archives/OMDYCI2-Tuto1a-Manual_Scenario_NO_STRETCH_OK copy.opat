
(:patch
 (:name "OMDYCI2-Tuto1a-Manual_Scenario_NO_STRETCH_OK copy")
 (:doc "")
 (:info
  (:created "2018/10/12 13:57:27")
  (:modified "2021/09/08 14:01:36")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1360 723)) (:position (-1135 33)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 454)
   (:y 557)
   (:w 38)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.38799214363098145D0
       0.4924229383468628D0
       0.5947297811508179D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 20)
   (:id 0))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 26)
   (:y 483)
   (:w 104)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 10 6 3 1))
   (:id 1))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 393)
   (:y 129)
   (:w 152)
   (:h 31)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "SaxAlto_Fox")
   (:id 2))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 93)
   (:y 519)
   (:w 109)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5803922))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "OutputTuto1")
   (:id 3))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 540)
   (:y 494)
   (:w 275)
   (:h 50)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     "(-1 11 -1 -1 -1)"
     "(-1 11 -1 -1 -1)"
     "(-1 11 -1 -1 -1)"
     "(-1 11 -1 -1 -1)"
     "(-1 1 -1 -1 -1)"
     "(-1 1 -1 -1 -1)"
     "(-1 1 -1 -1 -1)"
     "(-1 1 -1 -1 -1)"
     "(-1 2 -1 -1 -1)"
     "(-1 2 -1 -1 -1)"
     "(-1 2 -1 -1 -1)"
     "(-1 2 -1 -1 -1)"
     "(-1 3 -1 -1 -1)"
     "(-1 3 -1 -1 -1)"
     "(-1 3 -1 -1 -1)"
     "(-1 3 -1 -1 -1)"))
   (:id 4))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 631)
   (:y 249)
   (:w 207)
   (:h 57)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 11 11 11 11 1 1 1 1 2 2 2 2 3 3 3 3))
   (:id 5))
  (:comment
   (:x 617)
   (:y 188)
   (:w 276)
   (:h 59)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "3) Define a query (scenario).
Here we define a scenario concerning the third dimension (pitch) only")
   (:id 6))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 130)
   (:w 109)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 2 0 0 0))
   (:id 7))
  (:comment
   (:x 20)
   (:y 0)
   (:w 575)
   (:h 30)
   (:fgcolor nil)
   (:bgcolor
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.48235294))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 18) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "OM-DYCI2 - Advanced tutorial 1: Manual definition of scenarios")
   (:id 8))
  (:comment
   (:x 432)
   (:y 537)
   (:w 112)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Crossfade (ms)")
   (:id 9))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "function_process_label")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (588 652)) (:position (156 358)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (e list_activation_labels) "
       "  (let ("
       "        (div_dur (nth 0 list_activation_labels))"
       "        (mod_12 (nth 1 list_activation_labels))"
       "        (div_intens  (nth 2 list_activation_labels))"
       "        (vc (nth 3 list_activation_labels))"
       "        (nmf (nth 4 list_activation_labels))"
       "        (query_dur (nth 0 e))"
       "        (query_pitch (nth 1 e))"
       "        (query_intens  (nth 2 e))"
       "        (query_vc (nth 3 e))"
       "        (query_nmf (nth 4 e))"
       "        )"
       "    (write-to-string"
       "     (list "
       "      ;duration label"
       "      (if (and (> div_dur 0) (> query_dur -1))"
       "          (round (/ query_dur div_dur)) "
       "        -1)"
       "      ;pitch label"
       "     (if (and (> mod_12 0) (> query_pitch -1))"
       "         (if (= mod_12 2) "
       "             (if (= (round query_pitch) 0) -1 (mod (round query_pitch)12))"
       "           (round query_pitch))"
       "       -1)"
       "      ;intensity label"
       "      (if (and (> div_intens 0)  (> query_intens -1))"
       "          (round (/ query_intens div_intens)) "
       "        -1)"
       "      ;voice casting label"
       "      (if (and (> vc 0)  (> query_vc -1)) "
       "          (round (/ query_vc vc)) "
       "        -1)"
       "      ;nmf label"
       "      (if (and (> nmf 0)  (> query_nmf -1)) "
       "          (round (/ query_nmf nmf)) "
       "        -1)"
       "      )"
       "     )"
       "    ))"))))
   (:group-id nil)
   (:name "function_process_label")
   (:x 98)
   (:y 172)
   (:w 161)
   (:h 32)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.36772552132606507D0
       0.6007713079452515D0
       0.018747687339782715D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input (:type :standard) (:name "E") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST_ACTIVATION_LABELS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :special)
   (:reference iterate)
   (:group-id nil)
   (:name "iterate")
   (:x 439)
   (:y 878)
   (:w 58)
   (:h 42)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.7176188230514526D0
       0.4443734288215637D0
       0.4433680772781372D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "action")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 11))
  (:comment
   (:x 18)
   (:y 35)
   (:w 492)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "/!\\ om7-beta/preferences/files and folders/ if output file exists --> auto-rename")
   (:id 12))
  (:comment
   (:x 300)
   (:y 858)
   (:w 135)
   (:h 64)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "OR 6b) if 3b)
CONNECT \"Iterate\" TO THE BOX ABOVE AND EVALUATE")
   (:id 13))
  (:comment
   (:x 664)
   (:y 642)
   (:w 320)
   (:h 64)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Yellow boxes: generation parameters
Blue boxes: other parameters (titles, crossfades ,etc.)
Green boxes: for advanced users
Red boxes: run (selection then « v »)")
   (:id 14))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "analysis-audio-corpus-files")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (611 423)) (:position (1826 140)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 359)
       (:y 167)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 435)
       (:y 167)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
       (:group-id nil)
       (:name "input 3")
       (:x 321)
       (:y 96)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 2") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 2")
       (:x 321)
       (:y 281)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 3") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "output 3")
       (:x 356)
       (:y 281)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 4") (:index 3) (:doc "")))
       (:group-id nil)
       (:name "output 4")
       (:x 391)
       (:y 281)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 4) (:name "input 3") (:doc "")))
       (:group-id nil)
       (:name "input 3")
       (:x 505)
       (:y 72)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference (:symbol "OM-DIRECTORY" "OM-API"))
       (:group-id nil)
       (:name "om-directory")
       (:x 295)
       (:y 176)
       (:w 105)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "PATH")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "type")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 411)
       (:y 140)
       (:w 100)
       (:h 30)
       (:color
        (:color-or-nil
         (:color
          (:color
           0.030046656727790833D0
           0.24989540874958038D0
           0.4119427800178528D0
           0.5019608))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "seg_desc")
       (:id 8))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-local-dyci2-path")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (folder corpus_subfolder) "
           "  (namestring "
           "   (merge-pathnames "
           "    (string+ folder \"Corpus/\" corpus_subfolder \"/\") "
           "    ;(om::om-user-home)"
           "    )))"
           "  "))))
       (:group-id nil)
       (:name "make-local-dyci2-path")
       (:x 243)
       (:y 146)
       (:w 155)
       (:h 29)
       (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "FOLDER")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CORPUS_SUBFOLDER")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "loop-process-dataset")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (866 635)) (:position (168 207)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 1)
             (:name "lab_files")
             (:doc "")))
           (:group-id nil)
           (:name "lab_files")
           (:x 212)
           (:y 2)
           (:w 66)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :optional)
             (:name "internal input value")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "sound") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "sound")
           (:x 229)
           (:y 509)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "mem") (:index 2) (:doc "")))
           (:group-id nil)
           (:name "mem")
           (:x 489)
           (:y 512)
           (:w 49)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "list_activation_labels")
             (:doc "")))
           (:group-id nil)
           (:name "list_activation_labels")
           (:x 545)
           (:y 6)
           (:w 141)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :optional)
             (:name "internal input value")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "labels") (:index 3) (:doc "")))
           (:group-id nil)
           (:name "labels")
           (:x 594)
           (:y 507)
           (:w 53)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 3)
             (:name "extension_audio_files")
             (:doc "")))
           (:group-id nil)
           (:name "extension_audio_files")
           (:x 717)
           (:y 2)
           (:w 147)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :optional)
             (:name "internal input value")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "function_process_label")
             (:doc "")))
           (:group-id nil)
           (:name "function_process_label")
           (:x 956)
           (:y 38)
           (:w 155)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :optional)
             (:name "internal input value")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :object)
           (:reference textbuffer)
           (:group-id nil)
           (:name "TEXTBUFFER")
           (:x 284)
           (:y 115)
           (:w 148)
           (:h 82)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font
            (:font (:face "Calibri") (:size 12) (:style :italic)))
           (:align :center)
           (:display :mini-view)
           (:showname t)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTENTS")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "CONTENTS") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params (:read-mode :lines-cols))
           (:value
            (:object
             (:class textbuffer)
             (:slots ((:contents nil)))
             (:add-slots ((:input-mode :lines-cols)))))
           (:id 7))
          (:box
           (:type :object)
           (:reference sound)
           (:group-id nil)
           (:name nil)
           (:x 113)
           (:y 320)
           (:w 297)
           (:h 56)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font
            (:font (:face "Calibri") (:size 12) (:style :italic)))
           (:align :center)
           (:display :hidden)
           (:showname nil)
           (:show-markers t)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value :choose-file)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "markers")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "access-from-file")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "file-pathname")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "sample-rate")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "n-channels")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "n-samples")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "markers") (:reactive nil))
            (:output (:name "access-from-file") (:reactive nil))
            (:output (:name "file-pathname") (:reactive nil))
            (:output (:name "sample-rate") (:reactive nil))
            (:output (:name "n-channels") (:reactive nil))
            (:output (:name "n-samples") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params)
           (:value
            (:object
             (:class sound)
             (:slots
              ((:onset 0)
               (:duration 0)
               (:n-samples nil)
               (:n-channels nil)
               (:sample-rate nil)
               (:smpl-type :float)
               (:sample-size 16)))
             (:add-slots
              ((:markers nil)
               (:gain 1.0)
               (:access-from-file nil)
               (:file-pathname nil)))))
           (:id 8))
          (:box
           (:type :function)
           (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
           (:group-id nil)
           (:name "om-make-pathname")
           (:x 93)
           (:y 205)
           (:w 145)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :key)
             (:name "directory")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "name")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "type")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference pathname-name)
           (:group-id nil)
           (:name "pathname-name")
           (:x 97)
           (:y 119)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "P")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:comment
           (:x 21)
           (:y 324)
           (:w 63)
           (:h 50)
           (:fgcolor nil)
           (:bgcolor nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:text "le même nom mais en .wav")
           (:id 11))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "make-markers")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (lines processed_labels)"
               "  (loop for i from 0 to (- (length lines) 1)"
               "        collect"
               "         (list"
               "          (sec->ms (first (nth i lines)))"
               "          ;(first (nth i lines))"
               "          (write-to-string (nth i processed_labels))"
               "          )         "
               "         )"
               "  )"
               ""
               ";(lambda (lines list_activation_labels)"
               ";  (loop for line in lines collect"
               ";        (list"
               ";         (sec->ms (first line))"
               ";         (number-to-string (round (fourth line)))"
               ";         )"
               ";        ))"))))
           (:group-id nil)
           (:name "make-markers")
           (:x 200)
           (:y 267)
           (:w 115)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "LINES")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PROCESSED_LABELS")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 357)
           (:y 461)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 13))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 235)
           (:y 400)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 14))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "make-memory")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (lines n processed_labels) "
               "  (loop for line in lines "
               "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
               "        ;collect (write-to-string (list n (first line) (second line)))"
               "        into mem-segments"
               "        finally return (list mem-segments processed_labels))"
               ")"
               "                                 "
               "#|"
               "(lambda (lines n  list_activation_labels) "
               "  (loop for line in lines "
               "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
               "        into mem-segments"
               "        ;collect (write-to-string (round (/ (fourth line) div_intens)))"
               "        ;collect (write-to-string (list (round (/ (fourth line) div_intens))))"
               "        collect (write-to-string"
               "                 (list "
               "                 ; duree"
               "                  (if (> div_dur 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) div_dur)) -1)"
               "                 ;pitch"
               "                  (if (= mod_12 1) "
               "                      (if (= (round (third line)) 0) -1 (mod (round (third line))12))"
               "                    (if (< mod_12 0) -1 (round (third line)))"
               "                    )"
               "                 ;inten"
               "                  (if (> div_intens 0) (round (/ (fourth line) div_intens)) -1)"
               "                 ;voice casting"
               "                  (if (> vc 0) (round (/ (fifth line) vc)) -1)"
               "                 ;nmf"
               "                  (if (> nmf 0) (round (/ (sixth line) nmf)) -1)"
               "                 ))"
               "        into labels"
               "        finally return (list mem-segments labels)))"
               "|#"
               "                                 "))))
           (:group-id nil)
           (:name "make-memory")
           (:x 461)
           (:y 281)
           (:w 200)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "LINES")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "N")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PROCESSED_LABELS")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 485)
           (:y 387)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 16))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 375)
           (:y 51)
           (:w 71)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 502)
           (:y 57)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 18))
          (:comment
           (:x 556)
           (:y 102)
           (:w 47)
           (:h 22)
           (:fgcolor nil)
           (:bgcolor nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:text "#sound")
           (:id 19))
          (:box
           (:type :function)
           (:reference split)
           (:group-id nil)
           (:name "split")
           (:x 554)
           (:y 335)
           (:w 59)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "out") (:reactive nil))
            (:output (:name "out1") (:reactive nil)))
           (:id 20))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 592)
           (:y 388)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 21))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 486)
           (:y 468)
           (:w 54)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 22))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 593)
           (:y 462)
           (:w 54)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 23))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "select-labels")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (lines list_activation_labels)"
               "  (loop for line in lines "
               "        collect (append "
               "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
               "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
               "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
               "                 ;(list (- (second line) (first line)))"
               "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
               "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
               "                       collect (nth (+ i 1) line)"
               "                       )"
               "                 )"
               "        into labels"
               "        finally return labels"
               "        )"
               "  )"
               ""))))
           (:group-id nil)
           (:name "select-labels")
           (:x 767)
           (:y 243)
           (:w 115)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "LINES")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LIST_ACTIVATION_LABELS")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 24))
          (:box
           (:type :function)
           (:reference mapcar)
           (:group-id nil)
           (:name "mapcar")
           (:x 753)
           (:y 294)
           (:w 78)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FUNCTION")
             (:value box)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LIST")
             (:value name)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 25))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "value box")
           (:x 279)
           (:y 288)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value t)
           (:id 26))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 213)
           (:y 54)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 27))
          (:box
           (:type :special)
           (:reference loop-for)
           (:group-id nil)
           (:name "for")
           (:x 508)
           (:y 92)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "from")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "to")
             (:value 10)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 28)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 27 :in 0)))
          (:connection (:from (:box 0 :out 0)) (:to (:box 17 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 24 :in 1)))
          (:connection
           (:from (:box 5 :out 0))
           (:to (:box 9 :in 2))
           (:attributes (:color nil :style nil :modif (0 1/3))))
          (:connection (:from (:box 6 :out 0)) (:to (:box 25 :in 0)))
          (:connection
           (:from (:box 7 :out 1))
           (:to (:box 12 :in 0))
           (:attributes (:color nil :style nil :modif (0 11/92))))
          (:connection
           (:from (:box 7 :out 1))
           (:to (:box 15 :in 0))
           (:attributes (:color nil :style nil :modif (0 11/94))))
          (:connection (:from (:box 7 :out 1)) (:to (:box 24 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 1)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 14 :out 1)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 20 :in 0)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 16 :out 1)) (:to (:box 22 :in 0)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 28 :in 1)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 28 :in 0)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 16 :in 0)))
          (:connection (:from (:box 20 :out 1)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 13 :in 2)))
          (:connection (:from (:box 21 :out 1)) (:to (:box 23 :in 0)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 23 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 25 :in 1)))
          (:connection (:from (:box 25 :out 0)) (:to (:box 12 :in 1)))
          (:connection (:from (:box 25 :out 0)) (:to (:box 15 :in 2)))
          (:connection (:from (:box 26 :out 0)) (:to (:box 8 :in 2)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 9 :in 0)))
          (:connection
           (:from (:box 28 :out 0))
           (:to (:box 15 :in 1))))))
       (:group-id nil)
       (:name "loop-process-dataset")
       (:x 321)
       (:y 217)
       (:w 150)
       (:h 39)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "lab_files")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "list_activation_labels")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "extension_audio_files")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "function_process_label")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "sound") (:reactive nil))
        (:output (:name "mem") (:reactive nil))
        (:output (:name "labels") (:reactive nil)))
       (:id 10))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 411)
       (:y 176)
       (:w 48)
       (:h 30)
       (:color
        (:color-or-nil
         (:color
          (:color
           0.030046656727790833D0
           0.24989540874958038D0
           0.4119427800178528D0
           0.5019608))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "wav")
       (:id 11)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 10 :in 1))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 10 :in 3))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 9 :in 1))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 0)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 3 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 10 :out 1))
       (:to (:box 4 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 10 :out 2))
       (:to (:box 5 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 10 :in 2))
       (:attributes (:color nil :style nil :modif (0 5/19)))))))
   (:group-id nil)
   (:name "analysis-audio-corpus-files")
   (:x 322)
   (:y 256)
   (:w 180)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 3")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 3")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "output 2") (:reactive nil))
    (:output (:name "output 3") (:reactive nil))
    (:output (:name "output 4") (:reactive nil)))
   (:id 15))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-manual-scenario")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (368 427)) (:position (105 138)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 91)
       (:y 285)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 50)
       (:y 97)
       (:w 181)
       (:h 32)
       (:color
        (:color-or-nil
         (:color
          (:color
           0.8902462720870972D0
           0.6694902181625366D0
           0.2833995819091797D0
           0.43137255))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1 2 3 4 5 6 7 8 9 10 11 12 0))
       (:id 1))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 108)
       (:y 133)
       (:w 65)
       (:h 42)
       (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 74)
       (:y 213)
       (:w 62)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 182)
       (:y 152)
       (:w 49)
       (:h 31)
       (:color
        (:color-or-nil
         (:color
          (:color
           0.8902462720870972D0
           0.6694902181625366D0
           0.2833995819091797D0
           0.43137255))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 30)
       (:id 4))
      (:box
       (:type :function)
       (:reference make-list)
       (:group-id nil)
       (:name "make-list")
       (:x 83)
       (:y 246)
       (:w 89)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SIZE")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "initial-element")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:comment
       (:x 50)
       (:y 50)
       (:w 218)
       (:h 50)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font-or-nil
         (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
         (:t-or-nil t)))
       (:align nil)
       (:text
        "OR 3b) Loop queries: set the parameters and link to the desired dimension (here pitch)")
       (:id 6))
      (:comment
       (:x 181)
       (:y 132)
       (:w 48)
       (:h 22)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font-or-nil
         (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
         (:t-or-nil t)))
       (:align nil)
       (:text "Length")
       (:id 7)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 0)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 3 :in 0))
       (:attributes (:color nil :style nil :modif (0 -13/48))))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 5 :in 1))
       (:attributes (:color nil :style nil :modif (0 0))))
      (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 1)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 0 :in 0))
       (:attributes
        (:color
         (:color 0.2 0.4 0.5 1.0)
         :style
         :curved
         :modif
         nil))))))
   (:group-id nil)
   (:name "loop-manual-scenario")
   (:x 837)
   (:y 367)
   (:w 153)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 16))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "build-scenario")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (723 417)) (:position (126 161)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 87)
       (:y 82)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 50)
       (:y 127)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
       (:group-id nil)
       (:name "input 3")
       (:x 171)
       (:y 50)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 4) (:name "input 4") (:doc "")))
       (:group-id nil)
       (:name "input 4")
       (:x 191)
       (:y 50)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 5) (:name "input 5") (:doc "")))
       (:group-id nil)
       (:name "input 5")
       (:x 151)
       (:y 50)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 50)
       (:y 232)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 6) (:name "input 4") (:doc "")))
       (:group-id nil)
       (:name "input 4")
       (:x 343)
       (:y 66)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 7) (:name "input 4") (:doc "")))
       (:group-id nil)
       (:name "input 4")
       (:x 244)
       (:y 55)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 151)
       (:y 100)
       (:w 102)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "gather-dimensions-query")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (list_activation_labels list_dimensions) "
           "  (let* ("
           "         (l_dimensions (loop for l in list_dimensions collect (length l)))"
           "         (l_max (list-max l_dimensions))"
           "         )"
           "    (loop for i from 0 to (- l_max 1)"
           "          collect (loop for j from 0 to (- (length list_activation_labels) 1)"
           "                        collect (if "
           "                                    (and "
           "                                     (> (nth j list_activation_labels) 0)"
           "                                     (> (nth j l_dimensions) 0)"
           "                                     (<= i (- (nth j l_dimensions) 1))"
           "                                     )"
           "                                    (nth i (nth j list_dimensions))"
           "                                  -1)"
           "                        )"
           "          into labels"
           "          finally return labels"
           "          )"
           "    )"
           ")"))))
       (:group-id nil)
       (:name "gather-dimensions-query")
       (:x 87)
       (:y 132)
       (:w 200)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST_ACTIVATION_LABELS")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST_DIMENSIONS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 50)
       (:y 177)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value box)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value name)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 9 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 10 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 8 :in 1))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 8 :in 2))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 8 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 8 :in 4)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 3)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 1)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 5 :in 0))
       (:attributes
        (:color
         (:color 0.2 0.4 0.5 1.0)
         :style
         :curved
         :modif
         nil))))))
   (:group-id nil)
   (:name "build-scenario")
   (:x 622)
   (:y 442)
   (:w 113)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 3")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 4")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 5")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 4")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 4")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 17))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "send-param-scenario")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (331 330)) (:position (147 184)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 57)
       (:y 49)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "Length") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "Length")
       (:x 10)
       (:y 168)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "(Length)") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "(Length)")
       (:x 82)
       (:y 192)
       (:w 67)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 50)
       (:y 100)
       (:w 71)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 82)
       (:y 137)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 3 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 0)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 2 :in 0))
       (:attributes
        (:color
         (:color 0.2 0.4 0.5 1.0)
         :style
         :curved
         :modif
         nil))))))
   (:group-id nil)
   (:name "send-param-scenario")
   (:x 526)
   (:y 567)
   (:w 151)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "Length") (:reactive nil))
    (:output (:name "(Length)") (:reactive nil)))
   (:id 18))
  (:comment
   (:x 824)
   (:y 318)
   (:w 218)
   (:h 50)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "OR 3b) Loop queries: set the parameters and link to the desired dimension (here pitch, input 3)")
   (:id 19))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 384)
   (:y 306)
   (:w 231)
   (:h 102)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border (:number-or-nil (:number 4.0) (:t-or-nil t)))
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align :center)
   (:display :text)
   (:showname t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(1 376 2796)"
         "(1 2796 3068)"
         "(1 3068 3268)"
         "(1 3268 3514)"
         "(1 3514 3726)"
         "(1 3726 3982)"
         "(1 3982 4198)"
         "(1 4198 4430)"
         "(1 4430 4652)"
         "(1 4652 5532)"
         "(1 5532 5744)"
         "(1 5744 5982)"
         "(1 5982 6254)"
         "(1 6254 6462)"
         "(1 6462 6860)"
         "(1 6860 7312)"
         "(1 7312 7530)"
         "(1 7530 7746)"
         "(1 7746 7984)"
         "(1 7984 8334)"
         "(1 8334 8554)"
         "(1 8554 8792)"
         "(1 8792 10250)"
         "(1 10250 10458)"
         "(1 10458 10924)"
         "(1 10924 11280)"
         "(1 11280 11496)"
         "(1 11496 11704)"
         "(1 11704 11916)"
         "(1 11916 12134)"
         "(1 12134 12348)"
         "(1 12348 12914)"
         "(1 12914 13310)"
         "(1 13310 13546)"
         "(1 13546 13758)"
         "(1 13758 14238)"
         "(1 14238 14526)"
         "(1 14526 14802)"
         "(1 14802 15078)"
         "(1 15078 15394)"
         "(1 15394 15656)"
         "(1 15656 16140)"
         "(1 16140 16344)"
         "(1 16344 16820)"
         "(1 16820 17714)"
         "(1 17714 17998)"
         "(1 17998 18462)"
         "(1 18462 19214)"
         "(1 19214 19550)"
         "(1 19550 20510)"
         "(1 20510 21100)"
         "(1 21100 21340)"
         "(1 21340 21556)"
         "(1 21556 21770)"
         "(1 21770 21990)"
         "(1 21990 22218)"
         "(1 22218 22454)"
         "(1 22454 22774)"
         "(1 22774 23008)"
         "(1 23008 23466)"
         "(1 23466 24136)"
         "(1 24136 24820)"
         "(1 24820 25428)"
         "(1 25428 26414)"
         "(1 26414 26664)"
         "(1 26664 27102)"
         "(1 27102 27438)"
         "(1 27438 27654)"
         "(1 27654 28142)"
         "(1 28142 28640)"
         "(1 28640 28978)"
         "(1 28978 29210)"
         "(1 29210 29486)"
         "(1 29486 29714)"
         "(1 29714 29962)"
         "(1 29962 30188)"
         "(1 30188 30422)"
         "(1 30422 30624)"
         "(1 30624 30848)"
         "(1 30848 31054)"
         "(1 31054 31282)"
         "(1 31282 31494)"
         "(1 31494 31926)"
         "(1 31926 32162)"
         "(1 32162 32388)"
         "(1 32388 32862)"
         "(1 32862 33094)"
         "(1 33094 33734)"
         "(1 33734 34094)"
         "(1 34094 34310)"
         "(1 34310 34626)"
         "(1 34626 34986)"
         "(1 34986 35332)"
         "(1 35332 35662)"
         "(1 35662 35898)"
         "(1 35898 36140)"
         "(1 36140 36348)"
         "(1 36348 36864)"
         "(1 36864 37074)"
         "(1 37074 37350)"
         "(1 37350 37880)"
         "(1 37880 38314)"
         "(1 38314 38624)"
         "(1 38624 39770)"
         "(1 39770 40360)"
         "(1 40360 41174)"
         "(1 41174 41522)"
         "(1 41522 41968)"
         "(1 41968 43254)"
         "(1 43254 43548)"
         "(1 43548 43926)"
         "(1 43926 44230)"
         "(1 44230 44464)"
         "(1 44464 44704)"
         "(1 44704 44924)"
         "(1 44924 45602)"
         "(1 45602 45848)"
         "(1 45848 46184)"
         "(1 46184 46520)"
         "(1 46520 46772)"
         "(1 46772 47094)"
         "(1 47094 47300)"
         "(1 47300 47608)"
         "(1 47608 47814)"
         "(1 47814 48188)"
         "(1 48188 48426)"
         "(1 48426 48662)"
         "(1 48662 49188)"
         "(1 49188 49388)"
         "(1 49388 49748)"
         "(1 49748 50072)"
         "(1 50072 50404)"
         "(1 50404 50658)"
         "(1 50658 50958)"
         "(1 50958 51330)"
         "(1 51330 51564)"
         "(1 51564 51872)"
         "(1 51872 52188)"
         "(1 52188 52534)"
         "(1 52534 52832)"
         "(1 52832 53332)"
         "(1 53332 53582)"
         "(1 53582 54956)"
         "(1 54956 55298)"
         "(1 55298 55540)"
         "(1 55540 55886)"
         "(1 55886 56340)"
         "(1 56340 57188)"
         "(1 57188 57392)"
         "(1 57392 57778)"
         "(1 57778 58568)"
         "(1 58568 58794)"
         "(1 58794 59004)"
         "(1 59004 59480)"
         "(1 59480 59684)"
         "(1 59684 59940)"
         "(1 59940 60146)"
         "(1 60146 60416)"
         "(1 60416 60864)"
         "(1 60864 61326)"
         "(1 61326 61950)"
         "(1 61950 62308)"
         "(1 62308 62738)"
         "(1 62738 63100)"
         "(1 63100 63424)"
         "(1 63424 64070)"
         "(1 64070 64300)"
         "(1 64300 64646)"
         "(1 64646 64832)"
         "(1 64832 65104)"
         "(1 65104 65294)"
         "(1 65294 65510)"
         "(1 65510 65780)"
         "(1 65780 65974)"
         "(1 65974 66354)"
         "(1 66354 66564)"
         "(1 66564 66994)"
         "(1 66994 67228)"
         "(1 67228 67434)"
         "(1 67434 67650)"
         "(1 67650 67886)"
         "(1 67886 68332)"
         "(1 68332 68628)"
         "(1 68628 68858)"
         "(1 68858 69102)"
         "(1 69102 69322)"
         "(1 69322 69654)"
         "(1 69654 69894)"
         "(1 69894 70108)"
         "(1 70108 70338)"
         "(1 70338 70616)"
         "(1 70616 70886)"
         "(1 70886 71124)"
         "(1 71124 71534)"
         "(1 71534 71790)"
         "(1 71790 71992)"
         "(1 71992 72426)"
         "(1 72426 72788)"
         "(1 72788 73012)"
         "(1 73012 73248)"
         "(1 73248 73476)"
         "(1 73476 73788)"
         "(1 73788 73994)"
         "(1 73994 74242)"
         "(1 74242 74488)"
         "(1 74488 74714)"
         "(1 74714 75128)"
         "(1 75128 75396)"
         "(1 75396 75578)"
         "(1 75578 75946)"
         "(1 75946 76190)"
         "(1 76190 76410)"
         "(1 76410 76706)"
         "(1 76706 76922)"
         "(1 76922 77386)"
         "(1 77386 77594)"
         "(1 77594 77820)"
         "(1 77820 78262)"
         "(1 78262 78552)"
         "(1 78552 79120)"
         "(1 79120 79648)"
         "(1 79648 79848)"
         "(1 79848 80336)"
         "(1 80336 80520)"
         "(1 80520 80758)"
         "(1 80758 80972)"
         "(1 80972 81238)"
         "(1 81238 81416)"
         "(1 81416 81660)"
         "(1 81660 81868)"
         "(1 81868 82336)"
         "(1 82336 82538)"
         "(1 82538 82806)"
         "(1 82806 83006)"
         "(1 83006 83212)"
         "(1 83212 84100)"
         "(1 84100 84538)"
         "(1 84538 85010)"
         "(1 85010 85900)"
         "(1 85900 86442)"
         "(1 86442 86802)"
         "(1 86802 87222)"
         "(1 87222 87906)"
         "(1 87906 88576)"
         "(1 88576 88788)"
         "(1 88788 89042)"
         "(1 89042 89482)"
         "(1 89482 89916)"
         "(1 89916 90270)"
         "(1 90270 90626)"
         "(1 90626 91458)"
         "(1 91458 91820)"
         "(1 91820 92264)"
         "(1 92264 92584)"
         "(1 92584 92830)"
         "(1 92830 93280)"
         "(1 93280 93720)"
         "(1 93720 93952)"
         "(1 93952 94640)"
         "(1 94640 95052)"
         "(1 95052 95674)"
         "(1 95674 96150)"
         "(1 96150 96388)"
         "(1 96388 97012)"
         "(1 97012 97308)"
         "(1 97308 97546)"
         "(1 97546 98208)"
         "(1 98208 98416)"
         "(1 98416 98794)"
         "(1 98794 99142)"
         "(1 99142 99478)"
         "(1 99478 99836)"
         "(1 99836 100678)"
         "(1 100678 101028)"
         "(1 101028 101506)"
         "(1 101506 101738)"
         "(1 101738 102372)"
         "(1 102372 102636)"
         "(1 102636 103638)"
         "(1 103638 104082)"
         "(1 104082 104652)"
         "(1 104652 105112)"
         "(1 105112 106122)"
         "(1 106122 107180)"
         "(1 107180 107380)"
         "(1 107380 107714)"
         "(1 107714 108068)"
         "(1 108068 108390)"
         "(1 108390 108634)"
         "(1 108634 109460)"
         "(1 109460 109852)"
         "(1 109852 110056)"
         "(1 110056 110306)"
         "(1 110306 110544)"
         "(1 110544 110872)"
         "(1 110872 111308)"
         "(1 111308 111556)"
         "(1 111556 112132)"
         "(1 112132 112310)"
         "(1 112310 113014)"
         "(1 113014 113234)"
         "(1 113234 113596)"
         "(1 113596 114072)"
         "(1 114072 115000)"
         "(1 115000 116872)"
         "(1 116872 117142)"
         "(1 117142 117340)"
         "(1 117340 117558)"
         "(1 117558 117780)"
         "(1 117780 118008)"
         "(1 118008 118600)"
         "(1 118600 119120)"
         "(1 119120 120050)"
         "(1 120050 120364)"
         "(1 120364 120588)"
         "(1 120588 121030)"
         "(1 121030 121458)"
         "(1 121458 123304)"
         "(1 123304 123514)"
         "(1 123514 123752)"
         "(1 123752 124076)"
         "(1 124076 124318)"
         "(1 124318 124744)"
         "(1 124744 125232)"
         "(1 125232 125660)"
         "(1 125660 125866)"
         "(1 125866 126432)"
         "(1 126432 126962)"
         "(1 126962 127858)"
         "(1 127858 128092)"
         "(1 128092 128312)"
         "(1 128312 128676)"
         "(1 128676 129146)"
         "(1 129146 129474)"
         "(1 129474 129932)"
         "(1 129932 130344)"
         "(1 130344 130646)"
         "(1 130646 131044)"
         "(1 131044 131790)"
         "(1 131790 132066)"
         "(1 132066 132552)"
         "(1 132552 132866)"
         "(1 132866 133226)"
         "(1 133226 133550)"
         "(1 133550 133852)"
         "(1 133852 134096)"
         "(1 134096 134308)"
         "(1 134308 134528)"
         "(1 134528 134768)"
         "(1 134768 134992)"
         "(1 134992 135200)"
         "(1 135200 135660)"
         "(1 135660 135886)"
         "(1 135886 136254)"
         "(1 136254 136508)"
         "(1 136508 136822)"
         "(1 136822 137352)"
         "(1 137352 137706)"
         "(1 137706 137926)"
         "(1 137926 138160)"
         "(1 138160 138914)"
         "(1 138914 139366)"
         "(1 139366 139690)"
         "(1 139690 139908)"
         "(1 139908 140386)"
         "(1 140386 140586)"
         "(1 140586 140818)"
         "(1 140818 141176)"
         "(1 141176 141404)"
         "(1 141404 141640)"
         "(1 141640 141990)"
         "(1 141990 142252)"
         "(1 142252 142766)"
         "(1 142766 143214)"
         "(1 143214 143420)"
         "(1 143420 143740)"
         "(1 143740 144192)"
         "(1 144192 144442)"
         "(1 144442 144692)"
         "(1 144692 144896)"
         "(1 144896 145108)"
         "(1 145108 145548)"
         "(1 145548 145762)"
         "(1 145762 145990)"
         "(1 145990 146206)"
         "(1 146206 146446)"
         "(1 146446 146690)"
         "(1 146690 146900)"
         "(1 146900 147146)"
         "(1 147146 147344)"
         "(1 147344 147582)"
         "(1 147582 148038)"
         "(1 148038 148356)"
         "(1 148356 148686)"
         "(1 148686 148892)"
         "(1 148892 149250)"
         "(1 149250 149482)"
         "(1 149482 149696)"
         "(1 149696 149934)"
         "(1 149934 150164)"
         "(1 150164 150472)"
         "(1 150472 150718)"
         "(1 150718 150900)"
         "(1 150900 151126)"
         "(1 151126 151350)"
         "(1 151350 151624)"
         "(1 151624 151854)"
         "(1 151854 152094)"
         "(1 152094 152392)"
         "(1 152392 152750)"
         "(1 152750 152950)"
         "(1 152950 154090)"
         "(1 154090 154522)"
         "(1 154522 154850)"
         "(1 154850 155086)"
         "(1 155086 155304)"
         "(1 155304 155530)"
         "(1 155530 155760)"
         "(1 155760 155984)"
         "(1 155984 156536)"
         "(1 156536 156738)"
         "(1 156738 157364)"
         "(1 157364 157924)"
         "(1 157924 158120)"
         "(1 158120 158458)"
         "(1 158458 158700)"
         "(1 158700 158928)"
         "(1 158928 159282)"
         "(1 159282 160212)"
         "(1 160212 160518)"
         "(1 160518 160768)"
         "(1 160768 161210)"
         "(1 161210 161542)"
         "(1 161542 161788)"
         "(1 161788 162134)"
         "(1 162134 162614)"
         "(1 162614 162932)"
         "(1 162932 163168)"
         "(1 163168 163388)"
         "(1 163388 163610)"
         "(1 163610 163930)"
         "(1 163930 164170)"
         "(1 164170 164366)"
         "(1 164366 164696)"
         "(1 164696 165244)"
         "(1 165244 166050)"
         "(1 166050 166358)"
         "(1 166358 166596)"
         "(1 166596 166820)"
         "(1 166820 167252)"
         "(1 167252 167698)"
         "(1 167698 167962)"
         "(1 167962 168256)"
         "(1 168256 168514)"
         "(1 168514 168736)"
         "(1 168736 168960)"
         "(1 168960 169336)"
         "(1 169336 169726)"
         "(1 169726 170148)"
         "(1 170148 170396)"
         "(1 170396 170592)"
         "(1 170592 170840)"
         "(1 170840 171042)"
         "(1 171042 171802)"
         "(1 171802 172168)"
         "(1 172168 172540)"
         "(1 172540 172902)"
         "(1 172902 173104)"
         "(1 173104 173324)"
         "(1 173324 174046)"
         "(1 174046 174674)"
         "(1 174674 174952)"
         "(1 174952 175182)"
         "(1 175182 175676)"
         "(1 175676 176034)"
         "(1 176034 176414)"
         "(1 176414 176738)"
         "(1 176738 177586)"
         "(1 177586 177904)"
         "(1 177904 178676)"
         "(1 178676 178950)"
         "(1 178950 179432)"
         "(1 179432 179828)"
         "(1 179828 180054)"
         "(1 180054 180746)"
         "(1 180746 181218)"
         "(1 181218 181810)"
         "(1 181810 182296)"
         "(1 182296 182514)"
         "(1 182514 182834)"
         "(1 182834 183140)"
         "(1 183140 183418)"
         "(1 183418 183650)"
         "(1 183650 184292)"
         "(1 184292 184466)"
         "(1 184466 184868)"
         "(1 184868 185260)"
         "(1 185260 185578)"
         "(1 185578 185910)"
         "(1 185910 186746)"
         "(1 186746 187102)"
         "(1 187102 187546)"
         "(1 187546 187826)"
         "(1 187826 188432)"
         "(1 188432 188684)"
         "(1 188684 189474)"
         "(1 189474 189672)"
         "(1 189672 190118)"
         "(1 190118 190746)"
         "(1 190746 191184)"
         "(1 191184 192286)"
         "(1 192286 193424)"
         "(1 193424 193832)"
         "(1 193832 194124)"
         "(1 194124 194432)"
         "(1 194432 194682)"
         "(1 194682 195426)"
         "(1 195426 195878)"
         "(1 195878 196472)"
         "(1 196472 197032)"
         "(1 197032 197344)"
         "(1 197344 197612)"
         "(1 197612 198162)"
         "(1 198162 198436)"
         "(1 198436 199026)"
         "(1 199026 199414)"
         "(1 199414 200104)"
         "(2 232 662)"
         "(2 662 1072)"
         "(2 1072 1262)"
         "(2 1262 1520)"
         "(2 1520 1806)"
         "(2 1806 2092)"
         "(2 2092 2366)"
         "(2 2366 2640)"
         "(2 2640 2904)"
         "(2 2904 3188)"
         "(2 3188 3454)"
         "(2 3454 3744)"
         "(2 3744 4028)"
         "(2 4028 4288)"
         "(2 4288 4556)"
         "(2 4556 4828)"
         "(2 4828 5602)"
         "(2 5602 5866)"
         "(2 5866 6144)"
         "(2 6144 6430)"
         "(2 6430 6708)"
         "(2 6708 6994)"
         "(2 6994 7268)"
         "(2 7268 7556)"
         "(2 7556 7826)"
         "(2 7826 8104)"
         "(2 8104 8386)"
         "(2 8386 8634)"
         "(2 8634 8916)"
         "(2 8916 9200)"
         "(2 9200 9486)"
         "(2 9486 10000)"
         "(2 10000 10266)"
         "(2 10266 10532)"
         "(2 10532 10814)"
         "(2 10814 11078)"
         "(2 11078 11352)"
         "(2 11352 11616)"
         "(2 11616 11882)"
         "(2 11882 12144)"
         "(2 12144 12400)"
         "(2 12400 12672)"
         "(2 12672 12960)"
         "(2 12960 13268)"
         "(2 13268 13528)"
         "(2 13528 13804)"
         "(2 13804 14170)"
         "(2 14170 14480)"
         "(2 14480 14866)"
         "(2 14866 15158)"
         "(2 15158 15546)"
         "(2 15546 15828)"
         "(2 15828 16202)"
         "(2 16202 16612)"
         "(2 16612 17442)"
         "(2 17442 17636)"
         "(2 17636 18096)"
         "(2 18096 18508)"
         "(2 18508 19872)"
         "(2 19872 20336)"
         "(2 20336 20618)"
         "(2 20618 20864)"
         "(2 20864 21150)"
         "(2 21150 21840)"
         "(2 21840 22270)"
         "(2 22270 22556)"
         "(2 22556 22814)"
         "(2 22814 23086)"
         "(2 23086 23442)"
         "(2 23442 23682)"
         "(2 23682 23946)"
         "(2 23946 24196)"
         "(2 24196 24582)"
         "(2 24582 24854)"
         "(2 24854 25292)"
         "(2 25292 25688)"
         "(2 25688 25926)"
         "(2 25926 26350)"
         "(2 26350 26612)"
         "(2 26612 27068)"
         "(2 27068 27332)"
         "(2 27332 27868)"
         "(2 27868 28286)"
         "(2 28286 28576)"
         "(2 28576 28864)"
         "(2 28864 29254)"
         "(2 29254 29910)"
         "(2 29910 30846)"
         "(2 30846 31266)"
         "(2 31266 31628)"
         "(2 31628 32098)"
         "(2 32098 32332)"
         "(2 32332 32874)"
         "(2 32874 33128)"
         "(2 33128 33640)"
         "(2 33640 33910)"
         "(2 33910 34182)"
         "(2 34182 34586)"
         "(2 34586 34870)"
         "(2 34870 35134)"
         "(2 35134 35556)"
         "(2 35556 35980)"
         "(2 35980 36400)"
         "(2 36400 36674)"
         "(2 36674 37104)"
         "(2 37104 37522)"
         "(2 37522 38074)"
         "(2 38074 38306)"
         "(2 38306 38624)"
         "(2 38624 39018)"
         "(2 39018 39266)"
         "(2 39266 39682)"
         "(2 39682 40212)"
         "(2 40212 40646)"
         "(2 40646 40974)"
         "(2 40974 41258)"
         "(2 41258 41594)"
         "(2 41594 41878)"
         "(2 41878 42278)"
         "(2 42278 42538)"
         "(2 42538 43804)"
         "(2 43804 44090)"
         "(2 44090 44334)"
         "(2 44334 44862)"
         "(2 44862 45140)"
         "(2 45140 45674)"
         "(2 45674 45982)"
         "(2 45982 46248)"
         "(2 46248 46520)"
         "(2 46520 46792)"
         "(2 46792 47072)"
         "(2 47072 47388)"
         "(2 47388 47662)"
         "(2 47662 48156)"
         "(2 48156 48452)"
         "(2 48452 48858)"
         "(2 48858 49094)"
         "(2 49094 49374)"
         "(2 49374 49634)"
         "(2 49634 49930)"
         "(2 49930 50346)"
         "(2 50346 50624)"
         "(2 50624 51034)"
         "(2 51034 51278)"
         "(2 51278 51548)"
         "(2 51548 51860)"
         "(2 51860 52282)"
         "(2 52282 52664)"
         "(2 52664 52964)"
         "(2 52964 53224)"
         "(2 53224 53544)"
         "(2 53544 53770)"
         "(2 53770 54000)"
         "(2 54000 54860)"
         "(2 54860 55274)"
         "(2 55274 55686)"
         "(2 55686 55896)"
         "(2 55896 56338)"
         "(2 56338 56768)"
         "(2 56768 57026)"
         "(2 57026 57288)"
         "(2 57288 57498)"
         "(2 57498 57950)"
         "(2 57950 58232)"
         "(2 58232 58478)"
         "(2 58478 58896)"
         "(2 58896 59266)"
         "(2 59266 59672)"
         "(2 59672 59900)"
         "(2 59900 60168)"
         "(2 60168 60358)"
         "(2 60358 60688)"
         "(2 60688 61012)"
         "(2 61012 61590)"
         "(2 61590 61802)"
         "(2 61802 62138)"
         "(2 62138 62498)"
         "(2 62498 62706)"
         "(2 62706 63050)"
         "(2 63050 63400)"
         "(2 63400 63662)"
         "(2 63662 64666)"
         "(2 64666 65066)"
         "(2 65066 65314)"
         "(2 65314 65604)"
         "(2 65604 65880)"
         "(2 65880 66156)"
         "(2 66156 66440)"
         "(2 66440 66832)"
         "(2 66832 67104)"
         "(2 67104 67692)"
         "(2 67692 68138)"
         "(2 68138 68552)"
         "(2 68552 68914)"
         "(2 68914 69210)"
         "(2 69210 69618)"
         "(2 69618 69912)"
         "(2 69912 70296)"
         "(2 70296 70668)"
         "(2 70668 70964)"
         "(2 70964 71388)"
         "(2 71388 71654)"
         "(2 71654 71914)"
         "(2 71914 72410)"
         "(2 72410 73028)"
         "(2 73028 73284)"
         "(2 73284 73536)"
         "(2 73536 73792)"
         "(2 73792 74056)"
         "(2 74056 74318)"
         "(2 74318 74612)"
         "(2 74612 74864)"
         "(2 74864 75420)"
         "(2 75420 75682)"
         "(2 75682 75940)"
         "(2 75940 76220)"
         "(2 76220 76496)"
         "(2 76496 76790)"
         "(2 76790 77076)"
         "(2 77076 77324)"
         "(2 77324 78004)"
         "(2 78004 78458)"
         "(2 78458 78828)"
         "(2 78828 79242)"
         "(2 79242 79650)"
         "(2 79650 79930)"
         "(2 79930 80220)"
         "(2 80220 80710)"
         "(2 80710 81008)"
         "(2 81008 81260)"
         "(2 81260 81680)"
         "(2 81680 81968)"
         "(2 81968 82226)"
         "(2 82226 82470)"
         "(2 82470 82924)"
         "(2 82924 83146)"
         "(2 83146 83556)"
         "(2 83556 83974)"
         "(2 83974 84400)"
         "(2 84400 84698)"
         "(2 84698 84950)"
         "(2 84950 85244)"
         "(2 85244 85672)"
         "(2 85672 85994)"
         "(2 85994 86352)"
         "(2 86352 86726)"
         "(2 86726 86970)"
         "(2 86970 87278)"
         "(2 87278 88416)"
         "(2 88416 88818)"
         "(2 88818 89204)"
         "(2 89204 89438)"
         "(2 89438 89728)"
         "(2 89728 89884)"
         "(2 89884 90178)"
         "(2 90178 90536)"
         "(2 90536 94066)"
         "(2 94066 94458)"
         "(2 94458 94874)"
         "(2 94874 95094)"
         "(2 95094 95368)"
         "(2 95368 95636)"
         "(2 95636 95894)"
         "(2 95894 96176)"
         "(2 96176 96464)"
         "(2 96464 96738)"
         "(2 96738 97028)"
         "(2 97028 97290)"
         "(2 97290 97596)"
         "(2 97596 97852)"
         "(2 97852 98114)"
         "(2 98114 98398)"
         "(2 98398 98684)"
         "(2 98684 98932)"
         "(2 98932 99436)"
         "(2 99436 99688)"
         "(2 99688 99958)"
         "(2 99958 100244)"
         "(2 100244 100536)"
         "(2 100536 100794)"
         "(2 100794 101072)"
         "(2 101072 101354)"
         "(2 101354 101628)"
         "(2 101628 101870)"
         "(2 101870 102162)"
         "(2 102162 102424)"
         "(2 102424 102690)"
         "(2 102690 102976)"
         "(2 102976 103240)"
         "(2 103240 103800)"
         "(2 103800 104044)"
         "(2 104044 104326)"
         "(2 104326 104574)"
         "(2 104574 104854)"
         "(2 104854 105152)"
         "(2 105152 105428)"
         "(2 105428 105686)"
         "(2 105686 105950)"
         "(2 105950 106226)"
         "(2 106226 106496)"
         "(2 106496 106750)"
         "(2 106750 107060)"
         "(2 107060 107322)"
         "(2 107322 107588)"
         "(2 107588 107960)"
         "(2 107960 108664)"
         "(2 108664 108960)"
         "(2 108960 109334)"
         "(2 109334 109628)"
         "(2 109628 109864)"
         "(2 109864 110270)"
         "(2 110270 110572)"
         "(2 110572 110848)"
         "(2 110848 111232)"
         "(2 111232 111890)"
         "(2 111890 112164)"
         "(2 112164 113976)"
         "(2 113976 114420)"
         "(2 114420 114800)"
         "(2 114800 115002)"
         "(2 115002 115234)"
         "(2 115234 115526)"
         "(2 115526 115798)"
         "(2 115798 116124)"
         "(2 116124 116362)"
         "(2 116362 116666)"
         "(2 116666 116920)"
         "(2 116920 117220)"
         "(2 117220 117486)"
         "(2 117486 117778)"
         "(2 117778 118038)"
         "(2 118038 118324)"
         "(2 118324 118566)"
         "(2 118566 118846)"
         "(2 118846 119374)"
         "(2 119374 119640)"
         "(2 119640 119888)"
         "(2 119888 120158)"
         "(2 120158 120438)"
         "(2 120438 120706)"
         "(2 120706 120998)"
         "(2 120998 121240)"
         "(2 121240 121502)"
         "(2 121502 121800)"
         "(2 121800 122056)"
         "(2 122056 122320)"
         "(2 122320 122606)"
         "(2 122606 122872)"
         "(2 122872 123138)"
         "(2 123138 123396)"
         "(2 123396 123702)"
         "(2 123702 123960)"
         "(2 123960 124214)"
         "(2 124214 124478)"
         "(2 124478 124762)"
         "(2 124762 125020)"
         "(2 125020 125308)"
         "(2 125308 125554)"
         "(2 125554 125846)"
         "(2 125846 126092)"
         "(2 126092 126374)"
         "(2 126374 126650)"
         "(2 126650 126950)"
         "(2 126950 127200)"
         "(2 127200 127466)"
         "(2 127466 127862)"
         "(2 127862 128164)"
         "(2 128164 128566)"
         "(2 128566 128888)"
         "(2 128888 129236)"
         "(2 129236 129506)"
         "(2 129506 129920)"
         "(2 129920 130322)"
         "(2 130322 130702)"
         "(2 130702 131142)"
         "(2 131142 131440)"
         "(2 131440 131826)"
         "(2 131826 132224)"
         "(2 132224 137320)"
         "(2 137320 137656)"
         "(2 137656 137872)"
         "(2 137872 138180)"
         "(2 138180 138544)"
         "(2 138544 138938)"
         "(2 138938 139228)"
         "(2 139228 139446)"
         "(2 139446 140426)"
         "(2 140426 140826)"
         "(2 140826 141112)"
         "(2 141112 141674)"
         "(2 141674 142082)"
         "(2 142082 142510)"
         "(2 142510 142712)"
         "(2 142712 143038)"
         "(2 143038 143314)"
         "(2 143314 143598)"
         "(2 143598 143980)"
         "(2 143980 144220)"
         "(2 144220 144482)"
         "(2 144482 145508)"
         "(2 145508 145954)"
         "(2 145954 146160)"
         "(2 146160 146538)"
         "(2 146538 146762)"
         "(2 146762 147080)"
         "(2 147080 147402)"
         "(2 147402 149640)"
         "(2 149640 149916)"
         "(2 149916 150358)"
         "(2 150358 150630)"
         "(2 150630 151036)"
         "(2 151036 151388)"
         "(2 151388 151972)"
         "(2 151972 152440)"
         "(2 152440 153058)"
         "(2 153058 153514)"
         "(2 153514 156492)"
         "(2 156492 156924)"
         "(2 156924 158632)"
         "(2 158632 158916)"
         "(2 158916 159182)"
         "(2 159182 159454)"
         "(2 159454 159738)"
         "(2 159738 160172)"
         "(2 160172 160456)"
         "(2 160456 160720)"
         "(2 160720 161926)"
         "(2 161926 162520)"
         "(2 162520 162808)"
         "(2 162808 163178)"
         "(2 163178 163372)"
         "(2 163372 163810)"
         "(2 163810 165412)"
         "(2 165412 165762)"
         "(2 165762 165982)"
         "(2 165982 166568)"
         "(2 166568 166978)"
         "(2 166978 167222)"
         "(2 167222 167636)"
         "(2 167636 167922)"
         "(2 167922 169270)"
         "(2 169270 169488)"
         "(2 169488 169802)"
         "(2 169802 170336)"
         "(2 170336 170834)"
         "(2 170834 171312)"
         "(2 171312 171596)"
         "(2 171596 178442)"
         "(2 178442 178852)"
         "(2 178852 179132)"
         "(2 179132 180574)"
         "(2 180574 181020)"
         "(2 181020 181274)"
         "(2 181274 181552)"
         "(2 181552 181810)"
         "(2 181810 182092)"
         "(2 182092 182342)"
         "(2 182342 182616)"
         "(2 182616 182878)"
         "(2 182878 183166)"
         "(2 183166 183416)"
         "(2 183416 183690)"
         "(2 183690 183960)"
         "(2 183960 184246)"
         "(2 184246 184472)"
         "(2 184472 184892)"
         "(2 184892 185174)"
         "(2 185174 185490)"
         "(2 185490 185732)"
         "(2 185732 186030)"
         "(2 186030 186470)"
         "(2 186470 187042)"
         "(2 187042 187714)"
         "(2 187714 187966)"
         "(2 187966 189322)"
         "(2 189322 189748)"
         "(2 189748 189994)"
         "(2 189994 190262)"
         "(2 190262 190522)"
         "(2 190522 190842)"
         "(2 190842 191110)"
         "(2 191110 191364)"
         "(2 191364 191636)"
         "(2 191636 191950)"
         "(2 191950 192492)"
         "(2 192492 193000)"
         "(2 193000 193356)"
         "(2 193356 193694)"
         "(2 193694 194076)"))
       (:labls
        (:list
         "(-1 -1 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 0 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 6 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 5 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 2 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 4 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 3 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 10 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 -1 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 11 -1 -1 -1)"
         "(-1 9 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 1 -1 -1 -1)"
         "(-1 8 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"
         "(-1 7 -1 -1 -1)"))))))
   (:id 20))
  (:comment
   (:x 540)
   (:y 478)
   (:w 112)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Full scenario")
   (:id 21))
  (:comment
   (:x 510)
   (:y 404)
   (:w 105)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font
      (:font (:face "Helvetica") (:size 12) (:style :bold :italic)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Audio generator")
   (:id 22))
  (:comment
   (:x 4)
   (:y 74)
   (:w 284)
   (:h 59)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "1) Select the active dimensions, here (duration pitch intensity VC NMF),
and set parameters to process the labels")
   (:id 23))
  (:comment
   (:x 392)
   (:y 74)
   (:w 244)
   (:h 59)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "2) Select an \"audio corpus\" (audio files + corresponding markers and labels in text annotations files)")
   (:id 24))
  (:comment
   (:x 0)
   (:y 442)
   (:w 221)
   (:h 42)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "4) Set maximum continuities for the output audio files (Loop)")
   (:id 25))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "this_patch_parent_directory")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omselfin) (:index 0) (:name "BOX") (:doc "")))
       (:group-id nil)
       (:name "BOX")
       (:x 127)
       (:y 58)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out
         (:type omout)
         (:name "this_patch_parent_directory")
         (:index 1)
         (:doc "")))
       (:group-id nil)
       (:name "this_patch_parent_directory")
       (:x 60)
       (:y 247)
       (:w 182)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :function)
       (:reference mypathname)
       (:group-id nil)
       (:name "mypathname")
       (:x 97)
       (:y 136)
       (:w 107)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OMPERSISTANTOBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference container)
       (:group-id nil)
       (:name "container")
       (:x 107)
       (:y 103)
       (:w 87)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OMBOX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference directory-namestring)
       (:group-id nil)
       (:name "directory-namestring")
       (:x 77)
       (:y 193)
       (:w 147)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 1 :in 0))))))
   (:group-id nil)
   (:name "this_patch_parent_directory")
   (:x 258)
   (:y 154)
   (:w 186)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs
    (:output (:name "this_patch_parent_directory") (:reactive nil)))
   (:id 26))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative :up "abstractions"))
      (:device nil)
      (:host nil)
      (:name "output_folder")
      (:type "opat"))))
   (:group-id nil)
   (:name "output_folder")
   (:x 202)
   (:y 555)
   (:w 145)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "mem_dir")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "scen_dir")
     (:value "Manual_scenarios")
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "head_title")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "root_dir")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "parameters_names")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "parameters_values")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 27))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 32)
   (:y 209)
   (:w 174)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list "dur" "pitch_mode" "energy"))
   (:id 28))
  (:box
   (:type :value)
   (:reference null)
   (:group-id nil)
   (:name "value box")
   (:x 837)
   (:y 428)
   (:w 153)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 29))
  (:comment
   (:x 300)
   (:y 723)
   (:w 203)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "6) EVALUATE")
   (:id 30))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 735)
   (:y 751)
   (:w 285)
   (:h 51)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive t)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:n-samples nil)
       (:n-channels nil)
       (:sample-rate nil)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname nil)))))
   (:id 31))
  (:box
   (:type :interface)
   (:reference list-selection)
   (:group-id nil)
   (:name "list-selection")
   (:x 299)
   (:y 742)
   (:w 369)
   (:h 64)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:multiple-selection nil)
   (:cell-height 12)
   (:cell-font
    (:font (:face "Lucida Grande") (:size 11) (:style :plain)))
   (:output-mode :value)
   (:inputs
    (:input (:type :key) (:name "items") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value nil)
   (:items
    (:list
     (:pathname
      (:directory
       (:absolute
        "Users"
        "nika"
        "Documents"
        "GitHub"
        "om-dyci2"
        "om-dyci2"
        "patches"
        "2-advanced-tutorials-synchronyzing"
        "Results"
        "OutputTuto1_(dur=0)(pitch_mode=2)(energy=0)_[Manual_scenarios][All_files]"))
      (:device nil)
      (:host nil)
      (:name "Scen[L(12)C(12)]_L(\"12\")_C(12)-Gen1_C10")
      (:type "wav"))
     (:pathname
      (:directory
       (:absolute
        "Users"
        "nika"
        "Documents"
        "GitHub"
        "om-dyci2"
        "om-dyci2"
        "patches"
        "2-advanced-tutorials-synchronyzing"
        "Results"
        "OutputTuto1_(dur=0)(pitch_mode=2)(energy=0)_[Manual_scenarios][All_files]"))
      (:device nil)
      (:host nil)
      (:name "Scen[L(12)C(12)]_L(\"12\")_C(12)-Gen1_C6")
      (:type "wav"))
     (:pathname
      (:directory
       (:absolute
        "Users"
        "nika"
        "Documents"
        "GitHub"
        "om-dyci2"
        "om-dyci2"
        "patches"
        "2-advanced-tutorials-synchronyzing"
        "Results"
        "OutputTuto1_(dur=0)(pitch_mode=2)(energy=0)_[Manual_scenarios][All_files]"))
      (:device nil)
      (:host nil)
      (:name "Scen[L(12)C(12)]_L(\"12\")_C(12)-Gen2_C3")
      (:type "wav"))
     (:pathname
      (:directory
       (:absolute
        "Users"
        "nika"
        "Documents"
        "GitHub"
        "om-dyci2"
        "om-dyci2"
        "patches"
        "2-advanced-tutorials-synchronyzing"
        "Results"
        "OutputTuto1_(dur=0)(pitch_mode=2)(energy=0)_[Manual_scenarios][All_files]"))
      (:device nil)
      (:host nil)
      (:name "Scen[L(12)C(12)]_L(\"12\")_C(12)-Gen3_C1")
      (:type "wav"))))
   (:selection (:list 3))
   (:id 32))
  (:comment
   (:x 299)
   (:y 806)
   (:w 203)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "7) CMD + CLICK ON THE PATHS")
   (:id 33))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 473)
   (:y 704)
   (:w 54)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 34))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop_interpretations_scenario_sync")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1360 723)) (:position (-1360 23)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "SCENARIO") (:doc "")))
       (:group-id nil)
       (:name "SCENARIO")
       (:x 65)
       (:y 12)
       (:w 88)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "LENGTH") (:doc "")))
       (:group-id nil)
       (:name "LENGTH")
       (:x 304)
       (:y 20)
       (:w 71)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "SCEN-MAX-CONT")
         (:doc "")))
       (:group-id nil)
       (:name "SCEN-MAX-CONT")
       (:x 150)
       (:y 11)
       (:w 125)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "VOICE-MAX-CONT-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "VOICE-MAX-CONT-LIST")
       (:x 384)
       (:y 17)
       (:w 168)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 5)
         (:name "VOICE_GENERATOR")
         (:doc "")))
       (:group-id nil)
       (:name "VOICE_GENERATOR")
       (:x 561)
       (:y 59)
       (:w 142)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 6) (:name "SOUND_DB") (:doc "")))
       (:group-id nil)
       (:name "SOUND_DB")
       (:x 603)
       (:y 128)
       (:w 89)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 7) (:name "XFADE") (:doc "")))
       (:group-id nil)
       (:name "XFADE")
       (:x 556)
       (:y 153)
       (:w 62)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 8) (:name "RES_DIR") (:doc "")))
       (:group-id nil)
       (:name "RES_DIR")
       (:x 517)
       (:y 20)
       (:w 74)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 637)
       (:y 682)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 8))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 284)
       (:y 94)
       (:w 111)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 314)
       (:y 130)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
       (:group-id nil)
       (:name "om-print-format")
       (:x 204)
       (:y 335)
       (:w 120)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FORMAT-STRING")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "args")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "prompt")
         (:value "DYCI2")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 107)
       (:y 299)
       (:w 123)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "NEW SCENARIO: ~A")
       (:id 12))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 233)
       (:y 299)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :function)
       (:reference remove)
       (:group-id nil)
       (:name "remove")
       (:x 61)
       (:y 255)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock :eval-once)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :function)
       (:reference car)
       (:group-id nil)
       (:name "car")
       (:x 440)
       (:y 128)
       (:w 55)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :function)
       (:reference cdr)
       (:group-id nil)
       (:name "cdr")
       (:x 495)
       (:y 129)
       (:w 55)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 442)
       (:y 160)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "generate_interpretations_of_scenario_sync_master")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1253 812)) (:position (870 223)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "len_scen") (:doc "")))
           (:group-id nil)
           (:name "len_scen")
           (:x 652)
           (:y 155)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 38)
           (:y 753)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "scen_max_cont")
             (:doc "")))
           (:group-id nil)
           (:name "scen_max_cont")
           (:x 736)
           (:y 159)
           (:w 127)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 3)
             (:name "voice_max_cont_list")
             (:doc "")))
           (:group-id nil)
           (:name "voice_max_cont_list")
           (:x 448)
           (:y 73)
           (:w 130)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "path_output_directory")
             (:doc "")))
           (:group-id nil)
           (:name "path_output_directory")
           (:x 817)
           (:y 260)
           (:w 148)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "xfade") (:doc "")))
           (:group-id nil)
           (:name "xfade")
           (:x 272)
           (:y 292)
           (:w 51)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 6) (:name "scenario") (:doc "")))
           (:group-id nil)
           (:name "scenario")
           (:x 298)
           (:y 167)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 7)
             (:name "voice_generator")
             (:doc "")))
           (:group-id nil)
           (:name "voice_generator")
           (:x 14)
           (:y 50)
           (:w 108)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 8)
             (:name "snd_database")
             (:doc "")))
           (:group-id nil)
           (:name "snd_database")
           (:x 5)
           (:y 304)
           (:w 104)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "list_dur_sync_master")
             (:index 2)
             (:doc "")))
           (:group-id nil)
           (:name "list_dur_sync_master")
           (:x 104)
           (:y 754)
           (:w 135)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 9))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 179)
           (:y 715)
           (:w 105)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 10))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 452)
           (:y 311)
           (:w 71)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock :eval-once)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 11))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 757)
           (:y 349)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 577)
           (:y 349)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 665)
           (:y 349)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:type :function)
           (:reference format)
           (:group-id nil)
           (:name "format")
           (:x 573)
           (:y 278)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "DESTINATION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTROL-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 581)
           (:y 234)
           (:w 73)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "[L~DC~D]")
           (:id 16))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 901)
           (:y 576)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 843)
           (:y 504)
           (:w 102)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "ITERATION #~D")
           (:id 18))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 929)
           (:y 544)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 19))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 313)
           (:y 588)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 246)
           (:y 554)
           (:w 248)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "FILTERED GENERATED SEQUENCE~A")
           (:id 21))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 342)
           (:y 529)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 22))
          (:box
           (:type :abstraction)
           (:reference
            (:patch-from-file
             (:pathname
              (:directory (:relative :up "abstractions"))
              (:device nil)
              (:host nil)
              (:name "path_generated_sequence")
              (:type "opat"))))
           (:group-id nil)
           (:name "path_generated_sequence")
           (:x 631)
           (:y 495)
           (:w 182)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "name_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "len_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "idtf_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "path_output_directory")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "path") (:reactive nil)))
           (:id 23))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 44)
           (:y 615)
           (:w 56)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 24))
          (:box
           (:type :abstraction)
           (:reference
            (:patch-from-file
             (:pathname
              (:directory (:relative :up "abstractions"))
              (:device nil)
              (:host nil)
              (:name "generate_sequence")
              (:type "opat"))))
           (:group-id nil)
           (:name "generate_sequence")
           (:x 39)
           (:y 139)
           (:w 153)
           (:h 52)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock :eval-once)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "generator")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "max_continuity")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "scenario")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output
             (:name "filtered_generated_sequence")
             (:reactive nil))
            (:output (:name "generated_sequence") (:reactive nil)))
           (:id 25))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 502)
           (:y 762)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 26))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 435)
           (:y 728)
           (:w 248)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "OUTPUT REMIX ~A")
           (:id 27))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 531)
           (:y 703)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 28))
          (:box
           (:type :special)
           (:reference loop-for)
           (:group-id nil)
           (:name "for")
           (:x 896)
           (:y 410)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "from")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "to")
             (:value 3)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "by")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 29))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 273)
           (:y 66)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 30))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 800)
           (:y 406)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 31))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 671)
           (:y 407)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 32))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 583)
           (:y 407)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 33))
          (:box
           (:type :abstraction)
           (:reference
            (:patch-from-file
             (:pathname
              (:directory (:relative :up "abstractions"))
              (:device nil)
              (:host nil)
              (:name "remix_supervp_master")
              (:type "opat"))))
           (:group-id nil)
           (:name "remix_supervp_master")
           (:x 38)
           (:y 409)
           (:w 160)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOUNDS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEGMENTS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CROSSFADE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "outfile")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "out") (:reactive nil))
            (:output (:name "list_dur") (:reactive nil)))
           (:id 34))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 110)
           (:y 616)
           (:w 56)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 35)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 14 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/495))))
          (:connection (:from (:box 0 :out 0)) (:to (:box 15 :in 2)))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 12 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/496))))
          (:connection (:from (:box 2 :out 0)) (:to (:box 15 :in 3)))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 11 :in 0))
           (:attributes (:color nil :style nil :modif (0 -3/41))))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 30 :in 0))
           (:attributes (:color nil :style nil :modif (0 -11/60))))
          (:connection (:from (:box 4 :out 0)) (:to (:box 23 :in 5)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 34 :in 2)))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 25 :in 2))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 7 :out 0))
           (:to (:box 25 :in 0))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 34 :in 0)))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 29 :in 1))
           (:attributes
            (:color nil :style nil :modif (0 45973/277033))))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 12 :in 0))
           (:attributes (:color nil :style nil :modif (0 190/429))))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 13 :in 0))
           (:attributes
            (:color nil :style nil :modif (0 26489/59345))))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 14 :in 0))
           (:attributes (:color nil :style nil :modif (0 0.445338))))
          (:connection (:from (:box 12 :out 0)) (:to (:box 31 :in 0)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 33 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 32 :in 0)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 1)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 17 :in 0)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 17 :in 1)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 10 :in 3)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 20 :in 0)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 20 :in 1)))
          (:connection (:from (:box 23 :out 0)) (:to (:box 34 :in 3)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 24 :out 1)) (:to (:box 1 :in 0)))
          (:connection
           (:from (:box 25 :out 0))
           (:to (:box 22 :in 0))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             nil
             :modif
             (0 -43/289))))
          (:connection (:from (:box 25 :out 0)) (:to (:box 34 :in 1)))
          (:connection (:from (:box 26 :out 0)) (:to (:box 10 :in 2)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 26 :in 0)))
          (:connection (:from (:box 28 :out 0)) (:to (:box 26 :in 1)))
          (:connection (:from (:box 29 :out 0)) (:to (:box 19 :in 0)))
          (:connection (:from (:box 29 :out 0)) (:to (:box 23 :in 3)))
          (:connection (:from (:box 30 :out 0)) (:to (:box 23 :in 4)))
          (:connection
           (:from (:box 30 :out 0))
           (:to (:box 25 :in 1))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection (:from (:box 31 :out 0)) (:to (:box 23 :in 2)))
          (:connection (:from (:box 32 :out 0)) (:to (:box 23 :in 1)))
          (:connection (:from (:box 33 :out 0)) (:to (:box 23 :in 0)))
          (:connection (:from (:box 34 :out 0)) (:to (:box 24 :in 0)))
          (:connection (:from (:box 34 :out 1)) (:to (:box 35 :in 0)))
          (:connection (:from (:box 35 :out 0)) (:to (:box 10 :in 4)))
          (:connection
           (:from (:box 35 :out 1))
           (:to (:box 9 :in 0))))))
       (:group-id nil)
       (:name "generate_interpretations_of_scenario_sync_master")
       (:x 357)
       (:y 466)
       (:w 311)
       (:h 62)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "len_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "scen_max_cont")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "voice_max_cont_list")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "path_output_directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "xfade")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "scenario")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "voice_generator")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "snd_database")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "list_dur_sync_master") (:reactive nil)))
       (:id 18))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "generate_interpretations_of_scenario_sync_slave")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1425 885)) (:position (196 646)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "len_scen") (:doc "")))
           (:group-id nil)
           (:name "len_scen")
           (:x 652)
           (:y 155)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 38)
           (:y 753)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "scen_max_cont")
             (:doc "")))
           (:group-id nil)
           (:name "scen_max_cont")
           (:x 736)
           (:y 159)
           (:w 127)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 3)
             (:name "voice_max_cont_list")
             (:doc "")))
           (:group-id nil)
           (:name "voice_max_cont_list")
           (:x 448)
           (:y 73)
           (:w 130)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "path_output_directory")
             (:doc "")))
           (:group-id nil)
           (:name "path_output_directory")
           (:x 817)
           (:y 260)
           (:w 148)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "xfade") (:doc "")))
           (:group-id nil)
           (:name "xfade")
           (:x 272)
           (:y 292)
           (:w 51)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 6) (:name "scenario") (:doc "")))
           (:group-id nil)
           (:name "scenario")
           (:x 298)
           (:y 167)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 7)
             (:name "voice_generator")
             (:doc "")))
           (:group-id nil)
           (:name "voice_generator")
           (:x 14)
           (:y 50)
           (:w 108)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 8)
             (:name "snd_database")
             (:doc "")))
           (:group-id nil)
           (:name "snd_database")
           (:x 5)
           (:y 304)
           (:w 104)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 9)
             (:name "slave_list_dur_sync")
             (:doc "")))
           (:group-id nil)
           (:name "slave_list_dur_sync")
           (:x 939)
           (:y 64)
           (:w 127)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 179)
           (:y 715)
           (:w 105)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 10))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 452)
           (:y 311)
           (:w 71)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock :eval-once)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 11))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 757)
           (:y 349)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 577)
           (:y 349)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 665)
           (:y 349)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:type :function)
           (:reference format)
           (:group-id nil)
           (:name "format")
           (:x 573)
           (:y 278)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "DESTINATION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTROL-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 581)
           (:y 234)
           (:w 73)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "[L~DC~D]")
           (:id 16))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 901)
           (:y 576)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 843)
           (:y 504)
           (:w 102)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "ITERATION #~D")
           (:id 18))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 929)
           (:y 544)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 19))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 313)
           (:y 588)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 246)
           (:y 554)
           (:w 248)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "FILTERED GENERATED SEQUENCE~A")
           (:id 21))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 342)
           (:y 529)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 22))
          (:box
           (:type :abstraction)
           (:reference
            (:patch-from-file
             (:pathname
              (:directory (:relative :up "abstractions"))
              (:device nil)
              (:host nil)
              (:name "path_generated_sequence")
              (:type "opat"))))
           (:group-id nil)
           (:name "path_generated_sequence")
           (:x 631)
           (:y 495)
           (:w 182)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "name_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "len_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "idtf_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "path_output_directory")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "path") (:reactive nil)))
           (:id 23))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 44)
           (:y 615)
           (:w 56)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 24))
          (:box
           (:type :abstraction)
           (:reference
            (:patch-from-file
             (:pathname
              (:directory (:relative :up "abstractions"))
              (:device nil)
              (:host nil)
              (:name "generate_sequence")
              (:type "opat"))))
           (:group-id nil)
           (:name "generate_sequence")
           (:x 39)
           (:y 139)
           (:w 153)
           (:h 52)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock :eval-once)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "generator")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "max_continuity")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "scenario")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output
             (:name "filtered_generated_sequence")
             (:reactive nil))
            (:output (:name "generated_sequence") (:reactive nil)))
           (:id 25))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 502)
           (:y 762)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 26))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 435)
           (:y 728)
           (:w 248)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "OUTPUT REMIX ~A")
           (:id 27))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 531)
           (:y 703)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 28))
          (:box
           (:type :special)
           (:reference loop-for)
           (:group-id nil)
           (:name "for")
           (:x 896)
           (:y 410)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "from")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "to")
             (:value 3)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "by")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 29))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 273)
           (:y 66)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 30))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 800)
           (:y 406)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 31))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 671)
           (:y 407)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 32))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 583)
           (:y 407)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 33))
          (:box
           (:type :abstraction)
           (:reference
            (:patch-from-file
             (:pathname
              (:directory (:relative :up "abstractions"))
              (:device nil)
              (:host nil)
              (:name "remix_supervp_slave")
              (:type "opat"))))
           (:group-id nil)
           (:name "remix_supervp_slave")
           (:x 38)
           (:y 424)
           (:w 151)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOUNDS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEGMENTS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CROSSFADE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "outfile")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LIST_DUR")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 34)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 14 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/495))))
          (:connection (:from (:box 0 :out 0)) (:to (:box 15 :in 2)))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 12 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/496))))
          (:connection (:from (:box 2 :out 0)) (:to (:box 15 :in 3)))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 11 :in 0))
           (:attributes (:color nil :style nil :modif (0 -3/41))))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 30 :in 0))
           (:attributes (:color nil :style nil :modif (0 -11/60))))
          (:connection (:from (:box 4 :out 0)) (:to (:box 23 :in 5)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 34 :in 2)))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 25 :in 2))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 7 :out 0))
           (:to (:box 25 :in 0))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 34 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 34 :in 4)))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 29 :in 1))
           (:attributes
            (:color nil :style nil :modif (0 45973/277033))))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 12 :in 0))
           (:attributes (:color nil :style nil :modif (0 190/429))))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 13 :in 0))
           (:attributes
            (:color nil :style nil :modif (0 26489/59345))))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 14 :in 0))
           (:attributes (:color nil :style nil :modif (0 0.445338))))
          (:connection (:from (:box 12 :out 0)) (:to (:box 31 :in 0)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 33 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 32 :in 0)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 1)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 17 :in 0)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 17 :in 1)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 10 :in 3)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 20 :in 0)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 20 :in 1)))
          (:connection (:from (:box 23 :out 0)) (:to (:box 34 :in 3)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 24 :out 1)) (:to (:box 1 :in 0)))
          (:connection
           (:from (:box 25 :out 0))
           (:to (:box 22 :in 0))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             nil
             :modif
             (0 -43/289))))
          (:connection (:from (:box 25 :out 0)) (:to (:box 34 :in 1)))
          (:connection (:from (:box 26 :out 0)) (:to (:box 10 :in 2)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 26 :in 0)))
          (:connection (:from (:box 28 :out 0)) (:to (:box 26 :in 1)))
          (:connection (:from (:box 29 :out 0)) (:to (:box 19 :in 0)))
          (:connection (:from (:box 29 :out 0)) (:to (:box 23 :in 3)))
          (:connection (:from (:box 30 :out 0)) (:to (:box 23 :in 4)))
          (:connection
           (:from (:box 30 :out 0))
           (:to (:box 25 :in 1))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection (:from (:box 31 :out 0)) (:to (:box 23 :in 2)))
          (:connection (:from (:box 32 :out 0)) (:to (:box 23 :in 1)))
          (:connection (:from (:box 33 :out 0)) (:to (:box 23 :in 0)))
          (:connection
           (:from (:box 34 :out 0))
           (:to (:box 24 :in 0))))))
       (:group-id nil)
       (:name "generate_interpretations_of_scenario_sync_slave")
       (:x 783)
       (:y 465)
       (:w 303)
       (:h 60)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "len_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "scen_max_cont")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "voice_max_cont_list")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "path_output_directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "xfade")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "scenario")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "voice_generator")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "snd_database")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "slave_list_dur_sync")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :function)
       (:reference cons)
       (:group-id nil)
       (:name "cons")
       (:x 646)
       (:y 584)
       (:w 63)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "CAR")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CDR")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 19 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 18 :in 6)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 19 :in 6)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 18 :in 7)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 19 :in 7)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 18 :in 4)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 19 :in 4)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 18 :in 3)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 19 :in 3)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 18 :in 5)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 19 :in 5)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 19 :in 2)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 18 :in 2)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 20 :in 0)))
      (:connection
       (:from (:box 18 :out 1))
       (:to (:box 19 :in 8))
       (:attributes (:color nil :style nil :modif (-113/477 0))))
      (:connection (:from (:box 19 :out 0)) (:to (:box 20 :in 1)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 8 :in 0))))))
   (:group-id nil)
   (:name "loop_interpretations_scenario_sync")
   (:x 386)
   (:y 631)
   (:w 227)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "SCENARIO")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LENGTH")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SCEN-MAX-CONT")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE-MAX-CONT-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE_GENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND_DB")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "XFADE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RES_DIR")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 35))
  (:box
   (:type :value)
   (:reference null)
   (:group-id nil)
   (:name "value box")
   (:x 847)
   (:y 586)
   (:w 153)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 36))
  (:comment
   (:x 843)
   (:y 484)
   (:w 279)
   (:h 106)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "5) Sync mode
nil: no synchronization
t: the events of all the tracks are stretched to match the durations of the events in track 1
(if using this mode, introducing duration classes in step 1, for instance 50ms or 100ms may be preferible)")
   (:id 37))
  (:comment
   (:x 722)
   (:y 33)
   (:w 276)
   (:h 42)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "TODO UPDATE OUTPUT FOLDER
")
   (:id 38))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 972)
   (:y 205)
   (:w 207)
   (:h 57)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     1
     1
     1
     1
     2
     2
     2
     2
     3
     3
     3
     3
     4
     4
     4
     4
     5
     5
     5
     5
     6
     6
     6
     6
     7
     7
     7
     7
     8
     8
     8
     8
     9
     9
     9
     9
     10
     10
     10
     10
     11
     11
     11
     11))
   (:id 39))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 651)
   (:y 93)
   (:w 152)
   (:h 31)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "Singing_voices_dir")
   (:id 40)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 35 :in 6)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 35 :in 3)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 15 :in 2))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 27 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 27 :in 2)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 18 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif (0 7/132))))
  (:connection (:from (:box 4 :out 0)) (:to (:box 35 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 17 :in 2)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 10 :in 1))
   (:attributes (:color nil :style nil :modif (0 -55/1026))))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 15 :in 0))
   (:attributes
    (:color
     (:color 0.2 0.4 0.5 1.0)
     :style
     nil
     :modif
     (0 0.37439233))))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 17 :in 0))
   (:attributes
    (:color
     (:color 0.2 0.4 0.5 1.0)
     :style
     nil
     :modif
     (0 0.43444392))))
  (:connection (:from (:box 7 :out 0)) (:to (:box 27 :in 5)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 15 :in 1))
   (:attributes
    (:color
     (:color 0.2 0.4 0.5 1.0)
     :style
     nil
     :modif
     (0 207731543377/730867557420))))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 17 :in 1))
   (:attributes
    (:color
     (:color 0.2 0.4 0.5 1.0)
     :style
     nil
     :modif
     (0 1341717657/3173979640))))
  (:connection (:from (:box 15 :out 0)) (:to (:box 35 :in 5)))
  (:connection
   (:from (:box 15 :out 1))
   (:to (:box 20 :in 1))
   (:attributes (:color nil :style nil :modif (0 5/32))))
  (:connection
   (:from (:box 15 :out 2))
   (:to (:box 20 :in 2))
   (:attributes (:color nil :style nil :modif (0 -5/32))))
  (:connection (:from (:box 16 :out 0)) (:to (:box 29 :in 0)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 35 :in 1)))
  (:connection (:from (:box 18 :out 1)) (:to (:box 35 :in 2)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 35 :in 4)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 15 :in 3)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 27 :in 3)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 35 :in 7)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 27 :in 4)))
  (:connection (:from (:box 32 :out 0)) (:to (:box 31 :in 0)))
  (:connection (:from (:box 34 :out 0)) (:to (:box 32 :in 0)))
  (:connection (:from (:box 35 :out 0)) (:to (:box 34 :in 0)))))