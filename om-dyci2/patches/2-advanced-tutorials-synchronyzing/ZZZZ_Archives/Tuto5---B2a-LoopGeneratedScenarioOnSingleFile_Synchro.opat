
(:patch
 (:name "Tuto5---B2a-LoopGeneratedScenarioOnSingleFile_Synchro")
 (:doc "")
 (:info
  (:created "2018/10/12 13:57:27")
  (:modified "2021/07/08 15:29:47")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1680 1005)) (:position (0 23)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 141)
   (:y 629)
   (:w 53)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 50)
   (:id 0))
  (:comment
   (:x 141)
   (:y 614)
   (:w 177)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "4) SET LENGTH SCENARIOS")
   (:id 1))
  (:comment
   (:x 174)
   (:y 657)
   (:w 209)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "5) SET MAX CONTINUITY FOR THE SCENARIO")
   (:id 2))
  (:comment
   (:x 1187)
   (:y 105)
   (:w 305)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "3) SET THE SCENARIO GENERATION DIRECTORY
(then loop : 1 file --> 1 scenario)")
   (:id 3))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 670)
   (:y 616)
   (:w 38)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.47843137))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 80)
   (:id 4))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 173)
   (:y 688)
   (:w 201)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 50)
   (:id 5))
  (:comment
   (:x 275)
   (:y 718)
   (:w 275)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "6) SET MAX CONTINUITIES FOR THE VOICES (LOOP REPEATED FOR EACH SCENARIO)")
   (:id 6))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 277)
   (:y 751)
   (:w 356)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 50 10 8 5 3 2))
   (:id 7))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-scenarios-with-stretch_2")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (1110 723)) (:position (0 23)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "QUERY") (:doc "")))
       (:group-id nil)
       (:name "QUERY")
       (:x 0)
       (:y 42)
       (:w 104)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "LENGTH") (:doc "")))
       (:group-id nil)
       (:name "LENGTH")
       (:x 361)
       (:y 15)
       (:w 71)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "CONTINUITY-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "CONTINUITY-LIST")
       (:x 197)
       (:y 18)
       (:w 125)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 445)
       (:y 554)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "VOICE-MAX-CONT-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "VOICE-MAX-CONT-LIST")
       (:x 424)
       (:y 36)
       (:w 157)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "VOICEGENERATOR")
         (:doc "")))
       (:group-id nil)
       (:name "VOICEGENERATOR")
       (:x 561)
       (:y 54)
       (:w 135)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "SOUND_DB") (:doc "")))
       (:group-id nil)
       (:name "SOUND_DB")
       (:x 603)
       (:y 118)
       (:w 89)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "XFADE") (:doc "")))
       (:group-id nil)
       (:name "XFADE")
       (:x 546)
       (:y 131)
       (:w 62)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "RES_DIR") (:doc "")))
       (:group-id nil)
       (:name "RES_DIR")
       (:x 517)
       (:y 15)
       (:w 74)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "list_dur") (:doc "")))
       (:group-id nil)
       (:name "list_dur")
       (:x 849)
       (:y 88)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 337)
       (:y 88)
       (:w 111)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 367)
       (:y 122)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "generate_and_write_variations_with_stretch")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size (1200 836)) (:position (0 23)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "len_scen") (:doc "")))
           (:group-id nil)
           (:name "len_scen")
           (:x 657)
           (:y 206)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 324)
           (:y 740)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "cont_scen")
             (:doc "")))
           (:group-id nil)
           (:name "cont_scen")
           (:x 741)
           (:y 210)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "cont_gen") (:doc "")))
           (:group-id nil)
           (:name "cont_gen")
           (:x 393)
           (:y 41)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "path_output_directory")
             (:doc "")))
           (:group-id nil)
           (:name "path_output_directory")
           (:x 822)
           (:y 311)
           (:w 148)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "xfade") (:doc "")))
           (:group-id nil)
           (:name "xfade")
           (:x 277)
           (:y 353)
           (:w 51)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 6) (:name "query") (:doc "")))
           (:group-id nil)
           (:name "query")
           (:x 305)
           (:y 269)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 7)
             (:name "GENERATOR")
             (:doc "")))
           (:group-id nil)
           (:name "GENERATOR")
           (:x 77)
           (:y 112)
           (:w 98)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 8)
             (:name "snd_database")
             (:doc "")))
           (:group-id nil)
           (:name "snd_database")
           (:x 6)
           (:y 341)
           (:w 104)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 9) (:name "list_dur") (:doc "")))
           (:group-id nil)
           (:name "list_dur")
           (:x 1088)
           (:y 88)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "remix")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size (1263 1005)) (:position (0 23)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "SOUNDS")
                 (:doc "")))
               (:group-id nil)
               (:name "SOUNDS")
               (:x 38)
               (:y 145)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "SEGMENTS")
                 (:doc "")))
               (:group-id nil)
               (:name "SEGMENTS")
               (:x 156)
               (:y 20)
               (:w 89)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "CROSSFADE")
                 (:doc "")))
               (:group-id nil)
               (:name "CROSSFADE")
               (:x 414)
               (:y 68)
               (:w 103)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "list_dur")
                 (:doc "")))
               (:group-id nil)
               (:name "list_dur")
               (:x 771)
               (:y 32)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "out")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "out")
               (:x 289)
               (:y 663)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "outfile")
                 (:doc "")))
               (:group-id nil)
               (:name "outfile")
               (:x 317)
               (:y 475)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 114)
               (:y 638)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 164)
               (:y 78)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 7))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 115)
               (:y 533)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference split)
               (:group-id nil)
               (:name "split")
               (:x 166)
               (:y 160)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "out1") (:reactive nil))
                (:output (:name "out2") (:reactive nil)))
               (:id 9))
              (:box
               (:type :function)
               (:reference om+)
               (:group-id nil)
               (:name "om+")
               (:x 220)
               (:y 280)
               (:w 62)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 156)
               (:y 281)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 11))
              (:box
               (:type :function)
               (:reference nth)
               (:group-id nil)
               (:name "nth")
               (:x 39)
               (:y 267)
               (:w 55)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ORIG-N")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ORIG-LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 12))
              (:box
               (:type :function)
               (:reference read-from-string)
               (:group-id nil)
               (:name "read-from-string")
               (:x 134)
               (:y 125)
               (:w 123)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "STRING")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 13))
              (:box
               (:type :function)
               (:reference 1-)
               (:group-id nil)
               (:name "1-")
               (:x 19)
               (:y 234)
               (:w 49)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 308)
               (:y 243)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 2)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 478)
               (:y 274)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-processing)
               (:group-id nil)
               (:name "supervp-processing")
               (:x 99)
               (:y 389)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SRC")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PROCESSINGS")
                 (:value "")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "BEGIN")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "END")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "FFTSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSTEP-OVERSAMP")
                 (:value 8)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOW-TYPE")
                 (:value "hanning")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SHAPE-INVARIANT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PRESERVE-TRANSIENT")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NORMALIZE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "OUTFILE")
                 (:value "out.aiff")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-timestretch)
               (:group-id nil)
               (:name "supervp-timestretch")
               (:x 297)
               (:y 335)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 565)
               (:y 178)
               (:w 46)
               (:h 32)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "in")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 19))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 296)
               (:y 216)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 20))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 559)
               (:y 151)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 21))
              (:comment
               (:x 593)
               (:y 124)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "duration event")
               (:id 22))
              (:comment
               (:x 498)
               (:y 122)
               (:w 87)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "target duration")
               (:id 23))
              (:comment
               (:x 613)
               (:y 183)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "coef stretch")
               (:id 24))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 771)
               (:y 95)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 25))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 114)
               (:y 314)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 26))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 215)
               (:y 312)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 27))
              (:box
               (:type :function)
               (:reference seq)
               (:group-id nil)
               (:name "seq")
               (:x 325)
               (:y 625)
               (:w 57)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OP")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "op+1") (:reactive nil)))
               (:id 28))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 650)
               (:y 591)
               (:w 78)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 29))
              (:box
               (:type :function)
               (:reference (:symbol "OM-DELETE-FILE" "OM-API"))
               (:group-id nil)
               (:name "om-delete-file")
               (:x 571)
               (:y 544)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NAME")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 30))
              (:box
               (:type :function)
               (:reference nil)
               (:group-id nil)
               (:name "concat-audiofiles")
               (:x 210)
               (:y 585)
               (:w 128)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FILES")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "crossfade")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "out")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 31)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 12 :in 1)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 20 :in 0))
               (:attributes (:color nil :style nil :modif (0 0))))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 31 :in 1)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 25 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 31 :in 2)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 29 :in 1)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 31 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 16 :in 1))
               (:attributes (:color nil :style nil :modif (0 -0.45))))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 16 :in 0))
               (:attributes
                (:color nil :style nil :modif (0 -1683/4277))))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 27 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 26 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 12 :in 0)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 10 :in 1)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 11 :in 1))
               (:attributes (:color nil :style nil :modif (0 -1/20))))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 21 :in 1))
               (:attributes
                (:color nil :style nil :modif (-221/2622 0))))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 17 :in 1)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 20 :in 1)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 18 :in 0))
               (:attributes (:color nil :style nil :modif (0 -1/27))))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 21 :out 0))
               (:to (:box 19 :in 0)))
              (:connection
               (:from (:box 25 :out 0))
               (:to (:box 21 :in 0)))
              (:connection
               (:from (:box 26 :out 0))
               (:to (:box 17 :in 2)))
              (:connection
               (:from (:box 27 :out 0))
               (:to (:box 17 :in 3)))
              (:connection
               (:from (:box 28 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 29 :out 0))
               (:to (:box 28 :in 1)))
              (:connection
               (:from (:box 30 :out 0))
               (:to (:box 29 :in 0)))
              (:connection
               (:from (:box 31 :out 0))
               (:to (:box 28 :in 0))))))
           (:group-id nil)
           (:name "remix")
           (:x 35)
           (:y 445)
           (:w 105)
           (:h 81)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOUNDS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEGMENTS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CROSSFADE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "list_dur")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "outfile")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 156)
           (:y 147)
           (:w 107)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "max_continuity")
           (:id 11))
          (:box
           (:type :special)
           (:reference loop-for)
           (:group-id nil)
           (:name "for")
           (:x 836)
           (:y 458)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "from")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "to")
             (:value 3)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "by")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 12))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 278)
           (:y 117)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 13))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 177)
           (:y 725)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 14))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 457)
           (:y 362)
           (:w 71)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "path_generated_sequence")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size (623 670)) (:position (126 161)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "name_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "name_scen")
               (:x 103)
               (:y 34)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "path")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "path")
               (:x 230)
               (:y 507)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "len_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "len_scen")
               (:x 222)
               (:y 34)
               (:w 74)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "cont_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_scen")
               (:x 315)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "idtf_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "idtf_gen")
               (:x 417)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "cont_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_gen")
               (:x 500)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 6)
                 (:name "path_output_directory")
                 (:doc "")))
               (:group-id nil)
               (:name "path_output_directory")
               (:x 602)
               (:y 37)
               (:w 148)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value
                  "/Users/nika/Desktop/OM7/OM-DYCI2_Tests/Results/")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :function)
               (:reference concatenate)
               (:group-id nil)
               (:name "concatenate")
               (:x 19)
               (:y 389)
               (:w 500)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "RESULT-TYPE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".aiff")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".wav")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 17)
               (:y 301)
               (:w 47)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value string)
               (:id 8))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 83)
               (:y 339)
               (:w 54)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "Scen")
               (:id 9))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 158)
               (:y 339)
               (:w 40)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_L")
               (:id 10))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 226)
               (:y 339)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 11))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 289)
               (:y 333)
               (:w 53)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "-Gen")
               (:id 12))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 363)
               (:y 333)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 13))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 203)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 299)
               (:y 110)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 401)
               (:y 174)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 525)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:type :function)
               (:reference pathname)
               (:group-id nil)
               (:name "pathname")
               (:x 266)
               (:y 445)
               (:w 91)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "P")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 7 :in 3)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 7 :in 1)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 7 :in 2)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 7 :in 4)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 7 :in 6)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 7 :in 8)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 7 :in 10)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 7 :in 5)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 7 :in 7)))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 7 :in 9)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 7 :in 11)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 1 :in 0))))))
           (:group-id nil)
           (:name "path_generated_sequence")
           (:x 599)
           (:y 520)
           (:w 200)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "name_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "len_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "idtf_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "path_output_directory")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "path") (:reactive nil)))
           (:id 16))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 762)
           (:y 400)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 582)
           (:y 400)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 768)
           (:y 458)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 19))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 670)
           (:y 400)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 676)
           (:y 458)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 21))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 588)
           (:y 458)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 22))
          (:box
           (:type :function)
           (:reference format)
           (:group-id nil)
           (:name "format")
           (:x 578)
           (:y 329)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "DESTINATION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTROL-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 23))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 539)
           (:y 285)
           (:w 73)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "[L~DC~D]")
           (:id 24))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 796)
           (:y 627)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 25))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 739)
           (:y 555)
           (:w 102)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "ITERATION #~D")
           (:id 26))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 825)
           (:y 595)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 27))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 318)
           (:y 639)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 28))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 237)
           (:y 607)
           (:w 100)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "OUTPUT ~A")
           (:id 29))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 347)
           (:y 580)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 30))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "filter-output")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (output) "
               "  (if "
               "      (and (> (length output) 0) (nth 0 output)) "
               "      output "
               "    ;(if "
               "     ;   (and (> (length output) 0) (nth 1 output))"
               "        ;(list \"(1 0 200)\" \"(1 301 600)\")"
               "    (loop for i from 0 to 5 collect \"(1 0 100)\")"
               "      ;)"
               "    )"
               "  )"))))
           (:group-id nil)
           (:name "filter-output")
           (:x 156)
           (:y 316)
           (:w 98)
           (:h 28)
           (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "OUTPUT")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 31))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 119)
           (:y 351)
           (:w 78)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 32))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 524)
           (:y 638)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 33))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 457)
           (:y 604)
           (:w 120)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "original output ~A")
           (:id 34))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 553)
           (:y 579)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 35))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2SETPARAM" "DYCI2"))
           (:group-id nil)
           (:name "dyci2setparam")
           (:x 52)
           (:y 239)
           (:w 116)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PARAMETER")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "VALUE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 36))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2QUERY" "DYCI2"))
           (:group-id nil)
           (:name "dyci2query")
           (:x 157)
           (:y 276)
           (:w 96)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "QUERY")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 37))
          (:box
           (:type :function)
           (:reference om+)
           (:group-id nil)
           (:name "om+")
           (:x 833)
           (:y 507)
           (:w 62)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 38)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 20 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/495))))
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 23 :in 2))
           (:attributes (:color nil :style nil :modif (0 -6/91))))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 17 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/496))))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 23 :in 3))
           (:attributes (:color nil :style nil :modif (0 17/87))))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 15 :in 0))
           (:attributes (:color nil :style nil :modif (0 -3/41))))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 13 :in 0))
           (:attributes (:color nil :style nil :modif (0 -11/60))))
          (:connection (:from (:box 4 :out 0)) (:to (:box 16 :in 5)))
          (:connection
           (:from (:box 5 :out 0))
           (:to (:box 10 :in 2))
           (:attributes
            (:color nil :style nil :modif (0 -0.09545457))))
          (:connection (:from (:box 6 :out 0)) (:to (:box 37 :in 1)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 36 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 3)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 36 :in 1)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 38 :in 0)))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 16 :in 4))
           (:attributes (:color nil :style nil :modif (0 -1/4))))
          (:connection (:from (:box 13 :out 0)) (:to (:box 36 :in 2)))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 12 :in 1))
           (:attributes
            (:color nil :style nil :modif (0 45973/277033))))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 17 :in 0))
           (:attributes (:color nil :style nil :modif (0 190/429))))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 18 :in 0))
           (:attributes
            (:color nil :style nil :modif (0 26489/59345))))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 20 :in 0))
           (:attributes (:color nil :style nil :modif (0 0.445338))))
          (:connection (:from (:box 16 :out 0)) (:to (:box 10 :in 4)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 19 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 22 :in 0)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 16 :in 2)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 16 :in 1)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 16 :in 0)))
          (:connection (:from (:box 23 :out 0)) (:to (:box 18 :in 1)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 23 :in 1)))
          (:connection
           (:from (:box 25 :out 0))
           (:to (:box 14 :in 1))
           (:attributes (:color nil :style nil :modif (0 -8/77))))
          (:connection (:from (:box 26 :out 0)) (:to (:box 25 :in 0)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 25 :in 1)))
          (:connection
           (:from (:box 28 :out 0))
           (:to (:box 14 :in 3))
           (:attributes (:color nil :style nil :modif (0 14/65))))
          (:connection (:from (:box 29 :out 0)) (:to (:box 28 :in 0)))
          (:connection (:from (:box 30 :out 0)) (:to (:box 28 :in 1)))
          (:connection (:from (:box 31 :out 0)) (:to (:box 32 :in 1)))
          (:connection (:from (:box 31 :out 0)) (:to (:box 35 :in 0)))
          (:connection
           (:from (:box 32 :out 0))
           (:to (:box 10 :in 1))
           (:attributes (:color nil :style nil :modif (0 -3/16))))
          (:connection (:from (:box 32 :out 0)) (:to (:box 30 :in 0)))
          (:connection
           (:from (:box 33 :out 0))
           (:to (:box 14 :in 2))
           (:attributes (:color nil :style nil :modif (0 1/33))))
          (:connection (:from (:box 34 :out 0)) (:to (:box 33 :in 0)))
          (:connection (:from (:box 35 :out 0)) (:to (:box 33 :in 1)))
          (:connection (:from (:box 36 :out 0)) (:to (:box 37 :in 0)))
          (:connection (:from (:box 37 :out 0)) (:to (:box 31 :in 0)))
          (:connection (:from (:box 38 :out 0)) (:to (:box 16 :in 3)))
          (:connection
           (:from (:box 38 :out 0))
           (:to (:box 27 :in 0))))))
       (:group-id nil)
       (:name "generate_and_write_variations_with_stretch")
       (:x 623)
       (:y 328)
       (:w 273)
       (:h 104)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "len_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_gen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "path_output_directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "xfade")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "query")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GENERATOR")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "snd_database")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "list_dur")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 12 :in 5)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 12 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 12 :in 6)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 12 :in 7)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 12 :in 4)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 12 :in 3)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 12 :in 8)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 3 :in 0))))))
   (:group-id nil)
   (:name "loop-scenarios-with-stretch_2")
   (:x 531)
   (:y 794)
   (:w 200)
   (:h 30)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "QUERY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LENGTH")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTINUITY-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE-MAX-CONT-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICEGENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND_DB")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "XFADE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RES_DIR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_dur")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-process-dataset")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (1180 635)) (:position (618 678)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "lab_files") (:doc "")))
       (:group-id nil)
       (:name "lab_files")
       (:x 327)
       (:y 65)
       (:w 66)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "mem") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "mem")
       (:x 279)
       (:y 467)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "list_activation_labels")
         (:doc "")))
       (:group-id nil)
       (:name "list_activation_labels")
       (:x 411)
       (:y 76)
       (:w 141)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "function_process_labels")
         (:doc "")))
       (:group-id nil)
       (:name "function_process_labels")
       (:x 588)
       (:y 76)
       (:w 161)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name "TEXTBUFFER")
       (:x 219)
       (:y 176)
       (:w 148)
       (:h 82)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params (:read-mode :lines-cols))
       (:value
        (:object
         (:class textbuffer)
         (:slots ((:contents nil)))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 4))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 182)
       (:y 122)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 5))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 172)
       (:y 443)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 6))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 275)
       (:y 362)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 276)
       (:y 423)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 448)
       (:y 304)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value box)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value name)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "select-labels")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines list_activation_labels)"
           "  (loop for line in lines "
           "        collect (append "
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
           "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
           "                 ;(list (- (second line) (first line)))"
           "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
           "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
           "                       collect (nth (+ i 1) line)"
           "                       )"
           "                 )"
           "        into labels"
           "        finally return labels"
           "        )"
           "  )"
           ""))))
       (:group-id nil)
       (:name "select-labels")
       (:x 438)
       (:y 264)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST_ACTIVATION_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 4 :out 1)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 7 :out 1)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1))))))
   (:group-id nil)
   (:name "loop-process-dataset")
   (:x 1229)
   (:y 358)
   (:w 150)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "lab_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_activation_labels")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function_process_labels")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "mem") (:reactive nil)))
   (:id 9))
  (:box
   (:type :function)
   (:reference format)
   (:group-id nil)
   (:name "format")
   (:x 1182)
   (:y 693)
   (:w 125)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "DESTINATION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTROL-STRING")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1034)
   (:y 672)
   (:w 118)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "~a_~a_[~A][~a]")
   (:id 11))
  (:box
   (:type :function)
   (:reference file-namestring)
   (:group-id nil)
   (:name "file-namestring")
   (:x 1434)
   (:y 338)
   (:w 117)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "P")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 1307)
   (:y 301)
   (:w 65)
   (:h 42)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 13))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 1231)
   (:y 304)
   (:w 53)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:type :special)
   (:reference iterate)
   (:group-id nil)
   (:name "iterate")
   (:x 617)
   (:y 872)
   (:w 58)
   (:h 42)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.6266593337059021D0
       0.011445105075836182D0
       0.044897355139255524D0
       0.4))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 15))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 1153)
   (:y 396)
   (:w 226)
   (:h 113)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory (:list "(28 -1 0 -1 -1)"))
       (:labls (:list "(28 -1 0 -1 -1)"))))))
   (:id 16))
  (:box
   (:type :function)
   (:reference format)
   (:group-id nil)
   (:name "format")
   (:x 222)
   (:y 560)
   (:w 80)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "DESTINATION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTROL-STRING")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 198)
   (:y 279)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 0 15 0 0))
   (:id 18))
  (:box
   (:type :function)
   (:reference split)
   (:group-id nil)
   (:name "split")
   (:x 217)
   (:y 497)
   (:w 100)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "out1") (:reactive nil))
    (:output (:name "out2") (:reactive nil))
    (:output (:name "out3") (:reactive nil))
    (:output (:name "out4") (:reactive nil)))
   (:id 19))
  (:comment
   (:x 159)
   (:y 3)
   (:w 894)
   (:h 96)
   (:fgcolor nil)
   (:bgcolor
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.48235294))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 18) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "OM-DYCI2 B2a: LOOPED AUTOMATIC GENERATION OF SCENARIOS ON SINGLE FILES
- 1st track generated with \"memory = file used to generate the scenario\"
& other tracks allowed to use events from the file used to generate the scenario (see patches B1)
- the events are stretched so that all the tracks are syncronized on track 1 (see patch B2b)")
   (:id 20))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1078)
   (:y 644)
   (:w 335)
   (:h 30)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "B2")
   (:id 21))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "function_process_label")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (e list_activation_labels) "
       "  (let ("
       "        (div_dur (nth 0 list_activation_labels))"
       "        (mod_12 (nth 1 list_activation_labels))"
       "        (div_intens  (nth 2 list_activation_labels))"
       "        (vc (nth 3 list_activation_labels))"
       "        (nmf (nth 4 list_activation_labels))"
       "        (query_dur (nth 0 e))"
       "        (query_pitch (nth 1 e))"
       "        (query_intens  (nth 2 e))"
       "        (query_vc (nth 3 e))"
       "        (query_nmf (nth 4 e))"
       "        )"
       "    (write-to-string"
       "     (list "
       "      ;duration label"
       "      (if (and (> div_dur 0) (> query_dur -1))"
       "          (round (/ query_dur div_dur)) "
       "        -1)"
       "      ;pitch label"
       "     (if (and (> mod_12 0) (> query_pitch -1))"
       "         (if (= mod_12 2) "
       "             (if (= (round query_pitch) 0) -1 (mod (round query_pitch)12))"
       "           (round query_pitch))"
       "       -1)"
       "      ;intensity label"
       "      (if (and (> div_intens 0)  (> query_intens -1))"
       "          (round (/ query_intens div_intens)) "
       "        -1)"
       "      ;voice casting label"
       "      (if (and (> vc 0)  (> query_vc -1)) "
       "          (round (/ query_vc vc)) "
       "        -1)"
       "      ;nmf label"
       "      (if (and (> nmf 0)  (> query_nmf -1)) "
       "          (round (/ query_nmf nmf)) "
       "        -1)"
       "      )"
       "     )"
       "    ))"))))
   (:group-id nil)
   (:name "function_process_label")
   (:x 296)
   (:y 287)
   (:w 161)
   (:h 28)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.7890212535858154D0
       0.8168872594833374D0
       0.6561802625656128D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input (:type :standard) (:name "E") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST_ACTIVATION_LABELS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:comment
   (:x 574)
   (:y 125)
   (:w 275)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "2) SET THE VOICE GENERATION CORPUS")
   (:id 23))
  (:box
   (:type :function)
   (:reference (:symbol "OM-DIRECTORY" "OM-API"))
   (:group-id nil)
   (:name "om-directory")
   (:x 630)
   (:y 269)
   (:w 105)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATH")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "type") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 751)
   (:y 224)
   (:w 100)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "seg_desc")
   (:id 25))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "make-local-dyci2-path")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (500 500)) (:position (815 433)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (folder corpus_subfolder) "
       "  (namestring "
       "   (merge-pathnames "
       "    (string+ folder \"Corpus/\" corpus_subfolder \"/\") "
       "    ;(om-user-home)"
       "    )))"
       "  "))))
   (:group-id nil)
   (:name "make-local-dyci2-path")
   (:x 578)
   (:y 231)
   (:w 155)
   (:h 29)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "FOLDER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CORPUS_SUBFOLDER")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-process-dataset")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (913 500)) (:position (105 138)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "lab_files") (:doc "")))
       (:group-id nil)
       (:name "lab_files")
       (:x 212)
       (:y 2)
       (:w 66)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "sound") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "sound")
       (:x 229)
       (:y 509)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "mem") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "mem")
       (:x 489)
       (:y 512)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "list_activation_labels")
         (:doc "")))
       (:group-id nil)
       (:name "list_activation_labels")
       (:x 545)
       (:y 6)
       (:w 141)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "labels") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "labels")
       (:x 594)
       (:y 507)
       (:w 53)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "extension_audio_files")
         (:doc "")))
       (:group-id nil)
       (:name "extension_audio_files")
       (:x 717)
       (:y 2)
       (:w 147)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "function_process_label")
         (:doc "")))
       (:group-id nil)
       (:name "function_process_label")
       (:x 956)
       (:y 38)
       (:w 155)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name "TEXTBUFFER")
       (:x 284)
       (:y 115)
       (:w 148)
       (:h 82)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params (:read-mode :lines-cols))
       (:value
        (:object
         (:class textbuffer)
         (:slots ((:contents nil)))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 7))
      (:box
       (:type :object)
       (:reference sound)
       (:group-id nil)
       (:name nil)
       (:x 114)
       (:y 312)
       (:w 300)
       (:h 71)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value :choose-file)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "markers")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "access-from-file")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "markers") (:reactive nil))
        (:output (:name "access-from-file") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class sound)
         (:slots
          ((:onset 0)
           (:duration 0)
           (:n-samples nil)
           (:n-channels nil)
           (:sample-rate nil)
           (:smpl-type :float)
           (:sample-size 16)))
         (:add-slots
          ((:markers nil)
           (:gain 1.0)
           (:access-from-file nil)
           (:file-pathname nil)))))
       (:id 8))
      (:box
       (:type :function)
       (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
       (:group-id nil)
       (:name "om-make-pathname")
       (:x 93)
       (:y 205)
       (:w 145)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :key)
         (:name "directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "name")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "type")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference pathname-name)
       (:group-id nil)
       (:name "pathname-name")
       (:x 97)
       (:y 119)
       (:w 125)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:comment
       (:x 21)
       (:y 324)
       (:w 63)
       (:h 50)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "le même nom mais en .wav")
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-markers")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines processed_labels)"
           "  (loop for i from 0 to (- (length lines) 1)"
           "        collect"
           "         (list"
           "          (sec->ms (first (nth i lines)))"
           "          ;(first (nth i lines))"
           "          (write-to-string (nth i processed_labels))"
           "          )         "
           "         )"
           "  )"
           ""
           ";(lambda (lines list_activation_labels)"
           ";  (loop for line in lines collect"
           ";        (list"
           ";         (sec->ms (first line))"
           ";         (number-to-string (round (fourth line)))"
           ";         )"
           ";        ))"))))
       (:group-id nil)
       (:name "make-markers")
       (:x 271)
       (:y 279)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 213)
       (:y 54)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 13))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 357)
       (:y 461)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 14))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 235)
       (:y 400)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 15))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-memory")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines n processed_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        ;collect (write-to-string (list n (first line) (second line)))"
           "        into mem-segments"
           "        finally return (list mem-segments processed_labels))"
           ")"
           "                                 "
           "#|"
           "(lambda (lines n  list_activation_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        into mem-segments"
           "        ;collect (write-to-string (round (/ (fourth line) div_intens)))"
           "        ;collect (write-to-string (list (round (/ (fourth line) div_intens))))"
           "        collect (write-to-string"
           "                 (list "
           "                 ; duree"
           "                  (if (> div_dur 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) div_dur)) -1)"
           "                 ;pitch"
           "                  (if (= mod_12 1) "
           "                      (if (= (round (third line)) 0) -1 (mod (round (third line))12))"
           "                    (if (< mod_12 0) -1 (round (third line)))"
           "                    )"
           "                 ;inten"
           "                  (if (> div_intens 0) (round (/ (fourth line) div_intens)) -1)"
           "                 ;voice casting"
           "                  (if (> vc 0) (round (/ (fifth line) vc)) -1)"
           "                 ;nmf"
           "                  (if (> nmf 0) (round (/ (sixth line) nmf)) -1)"
           "                 ))"
           "        into labels"
           "        finally return (list mem-segments labels)))"
           "|#"
           "                                 "))))
       (:group-id nil)
       (:name "make-memory")
       (:x 461)
       (:y 281)
       (:w 200)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 485)
       (:y 387)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 17))
      (:box
       (:type :special)
       (:reference loop-for)
       (:group-id nil)
       (:name "for")
       (:x 508)
       (:y 92)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "from")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "to")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 18))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 375)
       (:y 51)
       (:w 71)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 502)
       (:y 57)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 20))
      (:comment
       (:x 556)
       (:y 102)
       (:w 47)
       (:h 22)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "#sound")
       (:id 21))
      (:box
       (:type :function)
       (:reference split)
       (:group-id nil)
       (:name "split")
       (:x 554)
       (:y 335)
       (:w 59)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 22))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 592)
       (:y 388)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 23))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 486)
       (:y 468)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 593)
       (:y 462)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 25))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "select-labels")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines list_activation_labels)"
           "  (loop for line in lines "
           "        collect (append "
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
           "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
           "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
           "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
           "                       collect (nth (+ i 1) line)"
           "                       )"
           "                 )"
           "        into labels"
           "        finally return labels"
           "        )"
           "  )"
           ""))))
       (:group-id nil)
       (:name "select-labels")
       (:x 767)
       (:y 243)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST_ACTIVATION_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 26))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 753)
       (:y 294)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value box)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value name)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 27))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "value box")
       (:x 399)
       (:y 280)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value t)
       (:id 28)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 0 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 26 :in 1)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 9 :in 2))
       (:attributes (:color nil :style nil :modif (0 1/3))))
      (:connection (:from (:box 6 :out 0)) (:to (:box 27 :in 0)))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/92))))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 16 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/94))))
      (:connection (:from (:box 7 :out 1)) (:to (:box 26 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 15 :out 1)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 22 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 17 :out 1)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 16 :in 1)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 22 :out 1)) (:to (:box 23 :in 0)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 14 :in 2)))
      (:connection (:from (:box 23 :out 1)) (:to (:box 25 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 27 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 16 :in 2)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 8 :in 2))))))
   (:group-id nil)
   (:name "loop-process-dataset")
   (:x 656)
   (:y 357)
   (:w 150)
   (:h 39)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "lab_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_activation_labels")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "extension_audio_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function_process_label")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "sound") (:reactive nil))
    (:output (:name "mem") (:reactive nil))
    (:output (:name "labels") (:reactive nil)))
   (:id 27))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 571)
   (:y 183)
   (:w 155)
   (:h 31)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "4_mem")
   (:id 28))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 753)
   (:y 261)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "wav")
   (:id 29))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 601)
   (:y 398)
   (:w 231)
   (:h 102)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(1 2896 3352)"
         "(1 3352 3570)"
         "(1 3570 8660)"
         "(1 8660 8882)"
         "(1 8882 9700)"
         "(1 9700 10042)"
         "(1 10042 10528)"
         "(1 10528 10886)"
         "(1 10886 11184)"
         "(1 11184 11912)"
         "(1 11912 18300)"
         "(1 18300 18548)"
         "(1 18548 19232)"
         "(1 19232 19512)"
         "(1 19512 19858)"
         "(1 19858 20532)"
         "(1 20532 21082)"
         "(1 21082 21568)"
         "(1 21568 22138)"
         "(1 22138 22596)"
         "(1 22596 22934)"
         "(1 22934 23484)"
         "(1 23484 23810)"
         "(1 23810 24180)"
         "(1 24180 24506)"
         "(1 24506 25696)"
         "(1 25696 26060)"
         "(1 26060 27930)"
         "(1 27930 28130)"
         "(1 28130 28404)"
         "(1 28404 28846)"
         "(1 28846 29412)"
         "(1 29412 29764)"
         "(1 29764 30270)"
         "(1 30270 30750)"
         "(1 30750 31270)"
         "(1 31270 31622)"
         "(1 31622 31964)"
         "(1 31964 32274)"
         "(1 32274 32480)"
         "(1 32480 33032)"
         "(1 33032 33226)"
         "(1 33226 35156)"
         "(1 35156 35562)"
         "(1 35562 35790)"
         "(1 35790 36096)"
         "(1 36096 36890)"
         "(1 36890 37150)"
         "(1 37150 37842)"
         "(1 37842 38196)"
         "(1 38196 38590)"
         "(1 38590 38944)"
         "(1 38944 39322)"
         "(1 39322 40762)"
         "(1 40762 41306)"
         "(1 41306 41670)"
         "(1 41670 41894)"
         "(1 41894 42364)"
         "(1 42364 42632)"
         "(1 42632 43512)"
         "(2 330 1260)"
         "(2 1260 1738)"
         "(2 1738 2022)"
         "(2 2022 2388)"
         "(2 2388 3046)"
         "(2 3046 3316)"
         "(2 3316 3748)"
         "(2 3748 4154)"
         "(2 4154 4564)"
         "(2 4564 4770)"
         "(2 4770 5358)"
         "(2 5358 6508)"
         "(2 6508 9438)"
         "(2 9438 9716)"
         "(2 9716 11144)"
         "(2 11144 11398)"
         "(2 11398 11798)"
         "(2 11798 12734)"
         "(2 12734 14010)"
         "(2 14010 14278)"
         "(2 14278 15036)"
         "(2 15036 15290)"
         "(2 15290 15504)"
         "(2 15504 15932)"
         "(2 15932 16340)"
         "(2 16340 16690)"
         "(2 16690 17102)"
         "(2 17102 17892)"
         "(2 17892 18126)"
         "(2 18126 18434)"
         "(2 18434 18778)"
         "(2 18778 19158)"
         "(2 19158 19616)"
         "(2 19616 20196)"
         "(2 20196 20544)"
         "(2 20544 21092)"
         "(2 21092 21834)"
         "(2 21834 22184)"
         "(2 22184 22538)"
         "(2 22538 22738)"
         "(2 22738 22988)"
         "(2 22988 23462)"
         "(2 23462 23690)"
         "(2 23690 23878)"
         "(2 23878 24282)"
         "(2 24282 24776)"
         "(2 24776 25016)"
         "(2 25016 25314)"
         "(2 25314 25526)"
         "(2 25526 25872)"
         "(2 25872 26212)"
         "(2 26212 27044)"
         "(2 27044 27252)"
         "(2 27252 27500)"
         "(2 27500 27836)"
         "(2 27836 28290)"
         "(2 28290 28758)"
         "(2 28758 29110)"
         "(2 29110 29444)"
         "(2 29444 29702)"
         "(2 29702 30036)"
         "(2 30036 30504)"
         "(2 30504 30844)"
         "(2 30844 31174)"
         "(2 31174 31436)"
         "(2 31436 31874)"
         "(2 31874 32586)"
         "(2 32586 33024)"
         "(2 33024 33692)"
         "(2 33692 34320)"
         "(2 34320 34552)"
         "(2 34552 34768)"
         "(2 34768 35444)"
         "(2 35444 35678)"
         "(2 35678 35952)"
         "(2 35952 36166)"
         "(2 36166 37200)"
         "(2 37200 37654)"
         "(2 37654 37970)"
         "(2 37970 38262)"
         "(2 38262 38652)"
         "(2 38652 39306)"
         "(2 39306 39804)"
         "(2 39804 40410)"
         "(2 40410 40860)"
         "(2 40860 41188)"
         "(2 41188 41538)"
         "(2 41538 41870)"
         "(2 41870 42098)"
         "(2 42098 42298)"
         "(2 42298 42704)"
         "(2 42704 43268)"
         "(2 43268 43556)"
         "(2 43556 44226)"
         "(2 44226 44430)"
         "(2 44430 45010)"
         "(2 45010 45388)"
         "(2 45388 46418)"
         "(2 46418 47072)"
         "(2 47072 47422)"
         "(2 47422 47896)"
         "(2 47896 49918)"
         "(2 49918 50852)"
         "(2 50852 51398)"
         "(2 51398 52040)"
         "(2 52040 52282)"
         "(2 52282 52510)"
         "(2 52510 52718)"
         "(2 52718 53488)"
         "(2 53488 53872)"
         "(2 53872 54090)"
         "(2 54090 54378)"
         "(2 54378 54854)"
         "(2 54854 55360)"
         "(2 55360 55614)"
         "(2 55614 56360)"
         "(2 56360 56608)"
         "(2 56608 57052)"
         "(2 57052 57466)"
         "(2 57466 58452)"
         "(2 58452 59564)"
         "(2 59564 59794)"
         "(2 59794 61362)"
         "(2 61362 61778)"
         "(2 61778 62132)"
         "(2 62132 62538)"
         "(2 62538 63120)"
         "(2 63120 63496)"
         "(2 63496 64078)"
         "(2 64078 64674)"
         "(2 64674 64960)"
         "(2 64960 65156)"
         "(2 65156 65478)"
         "(2 65478 65840)"
         "(2 65840 66436)"
         "(2 66436 66794)"
         "(2 66794 67188)"
         "(2 67188 69186)"
         "(2 69186 69884)"
         "(2 69884 71334)"
         "(2 71334 71662)"
         "(2 71662 73462)"
         "(2 73462 75364)"
         "(2 75364 78344)"
         "(3 2536 2770)"
         "(3 2770 4122)"
         "(3 4122 4372)"
         "(3 4372 5524)"
         "(3 5524 6722)"
         "(3 6722 7920)"
         "(3 7920 8210)"
         "(3 8210 9278)"
         "(3 9278 10250)"
         "(3 10250 10504)"
         "(3 10504 11630)"
         "(3 11630 12986)"
         "(3 12986 14248)"
         "(3 14248 14602)"
         "(3 14602 15494)"
         "(3 15494 15908)"
         "(3 15908 17028)"
         "(3 17028 18396)"
         "(3 18396 18694)"
         "(3 18694 19208)"
         "(3 19208 19722)"
         "(3 19722 20958)"
         "(4 118 648)"
         "(4 648 970)"
         "(4 970 1452)"
         "(4 1452 1850)"
         "(4 1850 2120)"
         "(4 2120 2626)"
         "(4 2626 2860)"
         "(4 2860 3170)"
         "(4 3170 3384)"
         "(4 3384 3632)"
         "(4 3632 4026)"
         "(4 4026 4256)"
         "(4 4256 4452)"
         "(4 4452 4884)"
         "(4 4884 5136)"
         "(4 5136 11694)"
         "(4 11694 11972)"
         "(4 11972 12356)"
         "(4 12356 12630)"
         "(4 12630 13088)"
         "(4 13088 13748)"
         "(4 13748 14348)"
         "(4 14348 14704)"
         "(4 14704 15250)"
         "(4 15250 15512)"
         "(4 15512 15778)"
         "(4 15778 17452)"
         "(4 17452 18292)"
         "(4 18292 18652)"
         "(4 18652 19118)"
         "(4 19118 19330)"
         "(4 19330 19712)"
         "(4 19712 20324)"
         "(4 20324 20578)"
         "(4 20578 21434)"
         "(4 21434 23290)"
         "(4 23290 23660)"
         "(4 23660 24044)"
         "(4 24044 24296)"
         "(4 24296 24758)"
         "(4 24758 25200)"
         "(4 25200 26108)"
         "(4 26108 26670)"
         "(4 26670 27332)"
         "(4 27332 27602)"
         "(4 27602 28680)"
         "(4 28680 29342)"
         "(4 29342 29720)"
         "(4 29720 30038)"
         "(4 30038 35492)"
         "(4 35492 35914)"
         "(4 35914 36464)"
         "(4 36464 36856)"
         "(4 36856 37274)"
         "(4 37274 38084)"
         "(4 38084 38432)"
         "(4 38432 38910)"
         "(4 38910 39244)"
         "(4 39244 39556)"
         "(4 39556 39778)"
         "(4 39778 40032)"
         "(4 40032 40298)"
         "(4 40298 40586)"
         "(4 40586 40960)"
         "(4 40960 41298)"
         "(4 41298 41718)"
         "(4 41718 41976)"
         "(4 41976 42486)"
         "(4 42486 42928)"
         "(4 42928 43644)"
         "(4 43644 43890)"
         "(4 43890 44162)"
         "(4 44162 44368)"
         "(4 44368 44800)"
         "(4 44800 45202)"
         "(4 45202 45588)"
         "(4 45588 46430)"
         "(4 46430 46898)"
         "(4 46898 47236)"
         "(4 47236 47660)"
         "(4 47660 48052)"
         "(4 48052 48700)"
         "(4 48700 48968)"
         "(4 48968 49206)"
         "(4 49206 49728)"
         "(4 49728 53452)"
         "(4 53452 53868)"
         "(4 53868 54156)"
         "(4 54156 54890)"
         "(4 54890 55100)"
         "(4 55100 55886)"
         "(4 55886 56536)"
         "(4 56536 57532)"
         "(4 57532 58006)"
         "(4 58006 58334)"
         "(4 58334 58544)"
         "(4 58544 58760)"
         "(4 58760 58984)"
         "(4 58984 59222)"
         "(4 59222 59480)"
         "(4 59480 59796)"
         "(4 59796 60578)"
         "(4 60578 61072)"
         "(4 61072 61416)"
         "(4 61416 61856)"
         "(4 61856 62256)"
         "(4 62256 62502)"
         "(4 62502 62800)"
         "(4 62800 63076)"
         "(4 63076 63382)"
         "(4 63382 63678)"
         "(4 63678 63974)"
         "(4 63974 64296)"
         "(4 64296 64604)"
         "(4 64604 64924)"
         "(4 64924 65182)"
         "(4 65182 65470)"
         "(4 65470 65698)"
         "(4 65698 66070)"
         "(4 66070 66442)"
         "(4 66442 66848)"
         "(4 66848 67166)"
         "(4 67166 67452)"
         "(4 67452 67660)"
         "(4 67660 67954)"
         "(4 67954 68200)"
         "(4 68200 68720)"
         "(4 68720 69072)"
         "(4 69072 69560)"
         "(4 69560 70226)"
         "(4 70226 70538)"
         "(4 70538 70768)"
         "(4 70768 71096)"
         "(4 71096 71364)"
         "(4 71364 71786)"
         "(4 71786 72062)"
         "(4 72062 72356)"
         "(4 72356 72718)"
         "(4 72718 73426)"
         "(4 73426 73698)"
         "(4 73698 74058)"
         "(4 74058 74272)"
         "(4 74272 74740)"
         "(4 74740 75108)"
         "(4 75108 75930)"
         "(4 75930 76182)"
         "(4 76182 76714)"
         "(4 76714 77126)"
         "(4 77126 77474)"
         "(4 77474 77674)"
         "(4 77674 77950)"
         "(4 77950 78146)"
         "(4 78146 78830)"
         "(4 78830 79454)"
         "(4 79454 79918)"
         "(4 79918 80164)"
         "(4 80164 80378)"
         "(4 80378 80782)"
         "(4 80782 81026)"
         "(4 81026 81396)"
         "(4 81396 82148)"
         "(4 82148 82548)"
         "(4 82548 82950)"
         "(4 82950 83634)"
         "(4 83634 84188)"
         "(4 84188 84610)"
         "(4 84610 84846)"
         "(4 84846 85128)"
         "(4 85128 85618)"
         "(4 85618 85964)"
         "(4 85964 86606)"
         "(4 86606 86926)"
         "(4 86926 87506)"
         "(4 87506 87730)"
         "(4 87730 88086)"
         "(4 88086 88454)"
         "(4 88454 88918)"
         "(4 88918 89220)"
         "(4 89220 89688)"
         "(4 89688 90016)"
         "(4 90016 90668)"
         "(4 90668 91308)"
         "(4 91308 91656)"
         "(5 340 632)"
         "(5 632 1000)"
         "(5 1000 1264)"
         "(5 1264 1828)"
         "(5 1828 2100)"
         "(5 2100 2454)"
         "(5 2454 2798)"
         "(5 2798 3156)"
         "(5 3156 3452)"
         "(5 3452 4052)"
         "(5 4052 4590)"
         "(5 4590 4888)"
         "(5 4888 5098)"
         "(5 5098 5500)"
         "(5 5500 5794)"
         "(5 5794 6104)"
         "(5 6104 6334)"
         "(5 6334 6690)"
         "(5 6690 7020)"
         "(5 7020 7470)"
         "(5 7470 7820)"
         "(5 7820 8488)"
         "(5 8488 9070)"
         "(5 9070 9418)"
         "(5 9418 9810)"
         "(5 9810 10178)"
         "(6 0 348)"
         "(6 348 1014)"
         "(6 1014 1286)"
         "(6 1286 1646)"
         "(6 1646 1860)"
         "(6 1860 2426)"
         "(6 2426 2804)"
         "(6 2804 3226)"
         "(6 3226 3570)"
         "(6 3570 3884)"
         "(6 3884 4228)"
         "(6 4228 4620)"
         "(6 4620 5254)"
         "(6 5254 5484)"
         "(6 5484 5750)"
         "(6 5750 6208)"
         "(6 6208 6524)"
         "(6 6524 6822)"
         "(6 6822 7396)"
         "(6 7396 7750)"
         "(6 7750 7964)"
         "(6 7964 8414)"
         "(6 8414 8836)"
         "(6 8836 9070)"
         "(6 9070 9548)"
         "(6 9548 10088)"
         "(6 10088 10476)"
         "(6 10476 10824)"
         "(6 10824 11124)"
         "(6 11124 11792)"
         "(6 11792 12178)"
         "(6 12178 12878)"
         "(6 12878 13250)"
         "(6 13250 13520)"
         "(6 13520 13842)"
         "(6 13842 14280)"
         "(6 14280 14636)"
         "(6 14636 14872)"
         "(6 14872 15096)"
         "(6 15096 15424)"
         "(6 15424 16000)"
         "(6 16000 16222)"
         "(6 16222 16438)"
         "(6 16438 16798)"
         "(6 16798 17020)"
         "(6 17020 17664)"
         "(6 17664 18102)"
         "(6 18102 18392)"
         "(6 18392 18830)"
         "(6 18830 19836)"
         "(6 19836 20162)"
         "(6 20162 20374)"
         "(6 20374 21030)"
         "(6 21030 21398)"
         "(6 21398 21800)"
         "(6 21800 22042)"
         "(6 22042 22620)"
         "(6 22620 22954)"
         "(6 22954 23358)"
         "(6 23358 23738)"
         "(6 23738 23954)"
         "(6 23954 24600)"
         "(6 24600 24814)"
         "(6 24814 25236)"
         "(6 25236 25472)"
         "(6 25472 25804)"
         "(6 25804 26228)"
         "(6 26228 26674)"
         "(6 26674 29958)"
         "(6 29958 30788)"
         "(6 30788 31310)"
         "(6 31310 31598)"
         "(6 31598 32220)"
         "(6 32220 32510)"
         "(6 32510 32828)"
         "(6 32828 33516)"
         "(6 33516 33758)"
         "(6 33758 34130)"
         "(6 34130 34568)"
         "(6 34568 35100)"
         "(6 35100 35524)"
         "(6 35524 36080)"
         "(6 36080 36378)"
         "(6 36378 36796)"
         "(6 36796 37130)"
         "(6 37130 37738)"
         "(6 37738 37996)"
         "(6 37996 38492)"
         "(6 38492 38880)"
         "(6 38880 39708)"
         "(6 39708 40016)"
         "(6 40016 40552)"
         "(6 40552 40952)"
         "(6 40952 41386)"
         "(6 41386 41968)"
         "(6 41968 42564)"
         "(6 42564 43156)"
         "(6 43156 43462)"
         "(6 43462 44906)"
         "(6 44906 45262)"
         "(6 45262 45872)"
         "(6 45872 46748)"
         "(6 46748 46962)"
         "(6 46962 47266)"
         "(6 47266 47558)"
         "(7 180 724)"
         "(7 724 1080)"
         "(7 1080 2012)"
         "(7 2012 2230)"
         "(7 2230 2988)"
         "(7 2988 3564)"
         "(7 3564 3966)"
         "(7 3966 4398)"
         "(7 4398 4964)"
         "(7 4964 5286)"
         "(7 5286 5620)"
         "(7 5620 6126)"
         "(7 6126 7160)"
         "(7 7160 7446)"
         "(7 7446 7876)"
         "(7 7876 8208)"
         "(7 8208 8480)"
         "(7 8480 9242)"
         "(7 9242 10308)"
         "(7 10308 10794)"
         "(7 10794 11142)"
         "(7 11142 11402)"
         "(7 11402 11734)"
         "(7 11734 12118)"
         "(7 12118 12448)"
         "(7 12448 12768)"
         "(7 12768 13260)"
         "(7 13260 13520)"
         "(7 13520 13752)"
         "(7 13752 14254)"
         "(7 14254 14582)"
         "(7 14582 14812)"
         "(7 14812 15378)"
         "(7 15378 15942)"
         "(7 15942 16516)"
         "(7 16516 16774)"
         "(7 16774 17456)"
         "(7 17456 18054)"
         "(7 18054 18368)"
         "(7 18368 18694)"
         "(7 18694 19118)"
         "(7 19118 19394)"
         "(7 19394 20410)"
         "(7 20410 20676)"
         "(7 20676 21178)"
         "(7 21178 21730)"
         "(7 21730 22248)"
         "(7 22248 22574)"
         "(7 22574 22770)"
         "(7 22770 23312)"
         "(7 23312 23922)"
         "(7 23922 24252)"
         "(7 24252 25028)"
         "(7 25028 25872)"
         "(7 25872 26246)"
         "(7 26246 27090)"
         "(7 27090 28534)"
         "(7 28534 28800)"
         "(7 28800 29046)"
         "(7 29046 29722)"
         "(7 29722 29986)"
         "(7 29986 30884)"
         "(7 30884 31878)"
         "(7 31878 32136)"
         "(7 32136 32494)"
         "(7 32494 33614)"
         "(7 33614 33924)"
         "(7 33924 34558)"
         "(7 34558 35210)"
         "(7 35210 36772)"
         "(7 36772 37016)"
         "(7 37016 38168)"
         "(7 38168 38534)"
         "(7 38534 39218)"
         "(7 39218 39604)"
         "(7 39604 39818)"
         "(7 39818 40252)"
         "(8 188 522)"
         "(8 522 1114)"
         "(8 1114 1334)"
         "(8 1334 1700)"
         "(8 1700 2316)"
         "(8 2316 2900)"
         "(8 2900 3482)"
         "(8 3482 3886)"
         "(8 3886 5912)"
         "(8 5912 6368)"
         "(8 6368 6658)"
         "(8 6658 7088)"
         "(8 7088 7330)"
         "(8 7330 7594)"
         "(8 7594 8320)"
         "(8 8320 8702)"
         "(8 8702 8926)"
         "(8 8926 9220)"
         "(8 9220 9456)"
         "(8 9456 9956)"
         "(8 9956 10358)"
         "(8 10358 10662)"
         "(8 10662 11060)"
         "(8 11060 11312)"
         "(8 11312 11614)"
         "(8 11614 11896)"
         "(8 11896 12104)"
         "(8 12104 12664)"
         "(8 12664 13102)"
         "(8 13102 14020)"
         "(8 14020 14964)"
         "(8 14964 15226)"
         "(8 15226 15468)"
         "(8 15468 16058)"
         "(8 16058 16450)"
         "(8 16450 16724)"
         "(8 16724 17010)"
         "(8 17010 17592)"
         "(8 17592 17904)"
         "(8 17904 19790)"
         "(8 19790 20194)"
         "(8 20194 21862)"
         "(8 21862 22486)"
         "(8 22486 23010)"
         "(8 23010 24044)"
         "(8 24044 24640)"
         "(8 24640 24840)"
         "(8 24840 25418)"
         "(8 25418 25684)"
         "(8 25684 25942)"
         "(8 25942 26616)"
         "(8 26616 27630)"
         "(8 27630 27928)"
         "(9 54 498)"
         "(9 498 790)"
         "(9 790 1204)"
         "(9 1204 1622)"
         "(9 1622 2038)"
         "(9 2038 2330)"
         "(9 2330 2534)"
         "(9 2534 3014)"
         "(9 3014 3262)"
         "(9 3262 3672)"
         "(9 3672 4054)"
         "(9 4054 4286)"
         "(9 4286 4642)"
         "(9 4642 5370)"
         "(9 5370 6082)"
         "(9 6082 6458)"
         "(9 6458 6812)"
         "(9 6812 7204)"
         "(9 7204 7722)"
         "(9 7722 8136)"
         "(9 8136 8410)"
         "(9 8410 9000)"
         "(9 9000 9396)"
         "(9 9396 10366)"
         "(9 10366 10890)"
         "(9 10890 11366)"
         "(9 11366 11822)"
         "(9 11822 12062)"
         "(9 12062 12270)"
         "(9 12270 13046)"
         "(9 13046 13298)"
         "(9 13298 13700)"
         "(9 13700 14112)"
         "(9 14112 14430)"
         "(9 14430 14678)"
         "(9 14678 15012)"
         "(9 15012 15280)"
         "(9 15280 15582)"
         "(9 15582 16144)"
         "(9 16144 16370)"
         "(9 16370 16608)"
         "(9 16608 17218)"
         "(9 17218 17650)"
         "(9 17650 17926)"
         "(9 17926 18424)"
         "(9 18424 18748)"
         "(9 18748 19764)"
         "(9 19764 19970)"
         "(9 19970 21340)"
         "(9 21340 22002)"
         "(9 22002 22818)"
         "(9 22818 23894)"
         "(10 538 918)"
         "(10 918 1352)"
         "(10 1352 1826)"
         "(10 1826 2114)"
         "(10 2114 2344)"
         "(10 2344 2662)"
         "(10 2662 2854)"
         "(10 2854 3180)"
         "(10 3180 3610)"
         "(10 3610 3882)"
         "(10 3882 4308)"
         "(10 4308 4618)"
         "(10 4618 5002)"
         "(10 5002 5258)"
         "(10 5258 5800)"
         "(10 5800 6032)"
         "(10 6032 6326)"
         "(10 6326 6692)"
         "(10 6692 7188)"
         "(10 7188 7532)"
         "(10 7532 7866)"
         "(10 7866 8146)"
         "(10 8146 8536)"
         "(10 8536 8740)"
         "(10 8740 9140)"
         "(10 9140 9494)"
         "(10 9494 9886)"
         "(10 9886 10346)"
         "(10 10346 10844)"
         "(10 10844 11068)"
         "(10 11068 11368)"
         "(10 11368 11950)"
         "(10 11950 12476)"
         "(10 12476 12768)"
         "(10 12768 13316)"
         "(10 13316 13698)"
         "(10 13698 13980)"
         "(10 13980 14208)"
         "(10 14208 14676)"
         "(10 14676 14896)"
         "(10 14896 15132)"
         "(10 15132 15480)"
         "(10 15480 15754)"
         "(10 15754 16244)"
         "(10 16244 16930)"
         "(10 16930 17536)"
         "(10 17536 17874)"
         "(10 17874 18390)"
         "(10 18390 18664)"
         "(10 18664 19200)"
         "(10 19200 19450)"
         "(10 19450 19906)"
         "(10 19906 20118)"
         "(10 20118 20614)"
         "(10 20614 21304)"
         "(10 21304 21548)"
         "(10 21548 22164)"
         "(10 22164 22406)"
         "(10 22406 22812)"
         "(10 22812 23046)"
         "(10 23046 23250)"
         "(10 23250 23538)"
         "(10 23538 23794)"
         "(10 23794 24118)"
         "(10 24118 24534)"
         "(10 24534 24952)"
         "(10 24952 25244)"
         "(10 25244 25852)"
         "(10 25852 26246)"
         "(10 26246 26496)"
         "(10 26496 26806)"
         "(10 26806 27118)"
         "(10 27118 27332)"
         "(10 27332 27750)"
         "(10 27750 28102)"
         "(10 28102 28566)"
         "(10 28566 28800)"
         "(10 28800 29058)"
         "(10 29058 29604)"
         "(10 29604 30078)"
         "(10 30078 30354)"
         "(10 30354 30602)"
         "(10 30602 31310)"
         "(10 31310 31564)"
         "(10 31564 31900)"
         "(10 31900 32278)"
         "(10 32278 32582)"
         "(10 32582 32920)"
         "(10 32920 33134)"
         "(10 33134 33640)"
         "(10 33640 33970)"
         "(10 33970 34504)"
         "(10 34504 34824)"
         "(10 34824 35174)"
         "(10 35174 35398)"
         "(10 35398 35830)"
         "(10 35830 36104)"
         "(10 36104 36508)"
         "(10 36508 36866)"
         "(11 298 764)"
         "(11 764 1066)"
         "(11 1066 1826)"
         "(11 1826 2260)"
         "(11 2260 2774)"
         "(11 2774 3032)"
         "(11 3032 3376)"
         "(11 3376 3780)"
         "(11 3780 3984)"
         "(11 3984 4200)"
         "(11 4200 4690)"
         "(11 4690 4970)"
         "(11 4970 5400)"
         "(11 5400 5958)"
         "(11 5958 6584)"
         "(11 6584 7332)"
         "(11 7332 7832)"
         "(11 7832 8154)"
         "(11 8154 8740)"
         "(11 8740 9070)"
         "(11 9070 9334)"
         "(11 9334 10132)"
         "(11 10132 10438)"
         "(11 10438 10996)"
         "(11 10996 11310)"
         "(11 11310 11664)"
         "(11 11664 12102)"
         "(11 12102 13350)"
         "(11 13350 13678)"
         "(11 13678 14878)"
         "(11 14878 15148)"
         "(11 15148 15750)"
         "(11 15750 15966)"
         "(11 15966 16660)"
         "(11 16660 17018)"
         "(11 17018 17826)"
         "(11 17826 18142)"
         "(11 18142 18936)"
         "(11 18936 19828)"
         "(11 19828 20302)"
         "(11 20302 20914)"
         "(11 20914 21156)"
         "(11 21156 21462)"
         "(11 21462 22118)"
         "(11 22118 22428)"
         "(11 22428 22702)"
         "(11 22702 23122)"
         "(11 23122 23436)"
         "(11 23436 23802)"
         "(11 23802 24114)"
         "(11 24114 24622)"
         "(11 24622 25086)"
         "(11 25086 25512)"
         "(11 25512 25710)"
         "(11 25710 26930)"
         "(11 26930 27272)"
         "(11 27272 27728)"
         "(11 27728 27960)"
         "(11 27960 28284)"
         "(11 28284 28516)"
         "(11 28516 28812)"
         "(11 28812 29034)"
         "(11 29034 29276)"
         "(11 29276 29508)"
         "(11 29508 29952)"
         "(11 29952 30552)"
         "(11 30552 31316)"
         "(11 31316 31562)"
         "(11 31562 31824)"
         "(11 31824 32244)"
         "(11 32244 32930)"
         "(11 32930 33186)"
         "(11 33186 33694)"
         "(11 33694 34112)"
         "(11 34112 34592)"
         "(11 34592 34866)"
         "(11 34866 35212)"
         "(11 35212 35716)"
         "(11 35716 35996)"
         "(11 35996 36510)"
         "(11 36510 36730)"
         "(11 36730 37076)"
         "(11 37076 37926)"
         "(11 37926 38646)"
         "(11 38646 39854)"
         "(11 39854 40124)"
         "(11 40124 40318)"
         "(11 40318 40648)"
         "(11 40648 40876)"
         "(11 40876 41184)"
         "(11 41184 41542)"
         "(11 41542 42144)"
         "(11 42144 42542)"
         "(11 42542 43370)"
         "(11 43370 43870)"
         "(11 43870 44188)"
         "(11 44188 46400)"
         "(11 46400 46836)"
         "(11 46836 47530)"
         "(11 47530 47842)"
         "(11 47842 48196)"
         "(11 48196 48746)"
         "(11 48746 49636)"
         "(11 49636 50066)"
         "(11 50066 50872)"
         "(11 50872 51934)"
         "(11 51934 52228)"
         "(11 52228 52916)"
         "(11 52916 53466)"
         "(11 53466 53822)"
         "(11 53822 54062)"
         "(11 54062 55244)"
         "(11 55244 55570)"
         "(11 55570 55854)"
         "(11 55854 56064)"
         "(11 56064 56448)"
         "(11 56448 56892)"
         "(11 56892 57196)"
         "(11 57196 57658)"
         "(11 57658 58484)"
         "(11 58484 59156)"
         "(11 59156 59440)"
         "(11 59440 60156)"
         "(11 60156 60576)"
         "(11 60576 61850)"
         "(11 61850 62372)"
         "(11 62372 63100)"
         "(11 63100 63644)"
         "(11 63644 64442)"
         "(11 64442 64670)"
         "(11 64670 64910)"
         "(11 64910 65272)"
         "(11 65272 66132)"
         "(11 66132 66410)"
         "(11 66410 66870)"
         "(11 66870 67362)"
         "(11 67362 67674)"
         "(11 67674 68564)"
         "(11 68564 69310)"
         "(11 69310 69628)"
         "(11 69628 70112)"
         "(11 70112 70500)"
         "(11 70500 70712)"
         "(11 70712 70998)"
         "(11 70998 71570)"
         "(11 71570 71802)"
         "(11 71802 72212)"
         "(11 72212 72502)"
         "(11 72502 72882)"
         "(11 72882 73370)"
         "(11 73370 73666)"
         "(11 73666 73944)"
         "(11 73944 74238)"
         "(11 74238 74900)"
         "(11 74900 75574)"
         "(11 75574 75802)"
         "(11 75802 76066)"
         "(11 76066 76546)"
         "(11 76546 77132)"
         "(11 77132 77812)"
         "(11 77812 79584)"
         "(11 79584 80094)"
         "(11 80094 80336)"
         "(11 80336 80926)"
         "(11 80926 81326)"
         "(11 81326 81548)"
         "(11 81548 81846)"
         "(11 81846 82248)"
         "(11 82248 82508)"
         "(11 82508 83042)"
         "(11 83042 83524)"
         "(11 83524 83964)"
         "(11 83964 84338)"
         "(11 84338 84560)"
         "(11 84560 84990)"
         "(11 84990 85346)"
         "(11 85346 85866)"
         "(11 85866 86236)"
         "(11 86236 86884)"
         "(11 86884 87304)"
         "(11 87304 87818)"
         "(11 87818 88046)"
         "(11 88046 88308)"
         "(11 88308 88488)"
         "(11 88488 89138)"
         "(11 89138 89684)"
         "(11 89684 89888)"
         "(11 89888 90154)"
         "(11 90154 90552)"
         "(11 90552 90780)"
         "(11 90780 91460)"
         "(11 91460 92230)"
         "(11 92230 92788)"
         "(11 92788 93740)"
         "(11 93740 94380)"
         "(11 94380 94692)"
         "(11 94692 95034)"
         "(11 95034 96506)"
         "(11 96506 97304)"
         "(11 97304 97536)"
         "(11 97536 97926)"
         "(11 97926 98196)"
         "(11 98196 98406)"
         "(11 98406 98806)"
         "(11 98806 99516)"
         "(11 99516 100554)"
         "(11 100554 101068)"
         "(11 101068 101686)"
         "(11 101686 101982)"
         "(11 101982 102282)"
         "(11 102282 102784)"
         "(11 102784 103172)"
         "(11 103172 103838)"
         "(11 103838 104126)"
         "(11 104126 104394)"
         "(11 104394 104722)"
         "(11 104722 105046)"
         "(11 105046 105366)"
         "(11 105366 105780)"
         "(11 105780 105988)"
         "(11 105988 106394)"
         "(11 106394 106684)"
         "(11 106684 106974)"
         "(11 106974 107192)"
         "(11 107192 107494)"
         "(11 107494 107900)"
         "(11 107900 108486)"
         "(11 108486 109094)"
         "(11 109094 109416)"
         "(11 109416 109930)"
         "(11 109930 110332)"
         "(11 110332 110594)"
         "(11 110594 111120)"
         "(11 111120 111520)"
         "(11 111520 111740)"
         "(11 111740 112136)"
         "(12 588 1184)"
         "(12 1184 1480)"
         "(12 1480 1922)"
         "(12 1922 2246)"
         "(12 2246 2476)"
         "(12 2476 2916)"
         "(12 2916 3244)"
         "(12 3244 3710)"
         "(12 3710 3968)"
         "(12 3968 4272)"
         "(12 4272 5702)"
         "(12 5702 6050)"
         "(12 6050 6668)"
         "(12 6668 7120)"
         "(12 7120 7936)"
         "(12 7936 8356)"
         "(12 8356 9084)"
         "(12 9084 9514)"
         "(12 9514 9890)"
         "(12 9890 10266)"
         "(12 10266 11002)"
         "(12 11002 11348)"
         "(12 11348 11984)"
         "(12 11984 12330)"
         "(12 12330 12534)"
         "(12 12534 13012)"
         "(12 13012 13374)"
         "(12 13374 13900)"
         "(12 13900 14124)"
         "(12 14124 14430)"
         "(12 14430 14728)"
         "(12 14728 14984)"
         "(12 14984 15540)"
         "(12 15540 16148)"
         "(12 16148 16852)"
         "(12 16852 17202)"
         "(12 17202 17692)"
         "(12 17692 18086)"
         "(12 18086 18948)"
         "(12 18948 19414)"
         "(12 19414 20910)"
         "(12 20910 21750)"
         "(12 21750 22156)"
         "(12 22156 22740)"
         "(12 22740 22966)"
         "(12 22966 23230)"
         "(12 23230 23616)"
         "(12 23616 23824)"
         "(12 23824 24284)"
         "(12 24284 24506)"
         "(12 24506 24764)"
         "(12 24764 25142)"
         "(12 25142 25860)"
         "(12 25860 26230)"
         "(12 26230 26744)"
         "(12 26744 26980)"
         "(12 26980 27378)"
         "(12 27378 27820)"
         "(12 27820 28412)"
         "(12 28412 28722)"
         "(12 28722 29066)"
         "(12 29066 29330)"
         "(12 29330 29556)"
         "(12 29556 29742)"
         "(12 29742 30352)"
         "(12 30352 31196)"
         "(12 31196 31942)"
         "(12 31942 32562)"
         "(12 32562 32892)"
         "(12 32892 33502)"
         "(12 33502 34362)"
         "(12 34362 34600)"
         "(12 34600 34942)"
         "(12 34942 35180)"
         "(12 35180 35584)"
         "(12 35584 36022)"
         "(12 36022 36794)"
         "(12 36794 36984)"
         "(12 36984 39464)"
         "(12 39464 41526)"
         "(12 41526 41872)"
         "(12 41872 42422)"
         "(12 42422 42824)"
         "(12 42824 43194)"
         "(12 43194 43774)"
         "(12 43774 44048)"
         "(12 44048 44284)"
         "(12 44284 44588)"
         "(12 44588 45038)"
         "(12 45038 45346)"
         "(12 45346 45764)"
         "(12 45764 46140)"
         "(12 46140 46804)"
         "(12 46804 47298)"
         "(12 47298 47568)"
         "(12 47568 48056)"
         "(12 48056 48526)"
         "(12 48526 48886)"
         "(12 48886 49104)"
         "(12 49104 49336)"
         "(12 49336 49738)"
         "(12 49738 49996)"
         "(12 49996 50420)"
         "(12 50420 50656)"
         "(12 50656 51166)"
         "(12 51166 51496)"
         "(12 51496 51770)"
         "(12 51770 52088)"
         "(12 52088 52520)"
         "(12 52520 53046)"
         "(12 53046 53350)"
         "(12 53350 53672)"
         "(12 53672 53906)"
         "(12 53906 54534)"
         "(12 54534 54892)"
         "(12 54892 55086)"
         "(12 55086 55316)"
         "(12 55316 55636)"
         "(12 55636 55878)"
         "(12 55878 56478)"
         "(12 56478 56756)"
         "(12 56756 57070)"
         "(12 57070 57324)"
         "(12 57324 57734)"
         "(12 57734 58080)"
         "(12 58080 58384)"
         "(12 58384 58834)"
         "(12 58834 59190)"
         "(12 59190 59400)"
         "(12 59400 59716)"
         "(12 59716 60064)"
         "(12 60064 60418)"
         "(12 60418 60860)"
         "(12 60860 61204)"
         "(12 61204 61588)"
         "(12 61588 61818)"
         "(12 61818 62244)"
         "(12 62244 62628)"
         "(12 62628 62894)"
         "(12 62894 63502)"
         "(12 63502 63738)"
         "(12 63738 64338)"
         "(12 64338 64654)"
         "(12 64654 64884)"
         "(12 64884 65214)"
         "(12 65214 65510)"
         "(12 65510 65884)"
         "(12 65884 66162)"
         "(12 66162 66380)"
         "(12 66380 66650)"
         "(13 3032 3358)"
         "(13 3358 3800)"
         "(13 3800 4034)"
         "(13 4034 4374)"
         "(13 4374 8846)"
         "(13 8846 9878)"
         "(13 9878 10226)"
         "(13 10226 11070)"
         "(13 11070 18488)"
         "(13 18488 18900)"
         "(13 18900 19162)"
         "(13 19162 19420)"
         "(13 19420 19704)"
         "(13 19704 20042)"
         "(13 20042 20716)"
         "(13 20716 21064)"
         "(13 21064 21580)"
         "(13 21580 22356)"
         "(13 22356 22780)"
         "(13 22780 23126)"
         "(13 23126 23474)"
         "(13 23474 23996)"
         "(13 23996 24328)"
         "(13 24328 24728)"
         "(13 24728 26620)"
         "(13 26620 26956)"
         "(13 26956 27162)"
         "(13 27162 27382)"
         "(13 27382 28128)"
         "(13 28128 28478)"
         "(13 28478 28808)"
         "(13 28808 29242)"
         "(13 29242 29468)"
         "(13 29468 29844)"
         "(13 29844 30168)"
         "(13 30168 30678)"
         "(13 30678 31202)"
         "(13 31202 31594)"
         "(13 31594 31944)"
         "(13 31944 33756)"
         "(13 33756 34146)"
         "(13 34146 34652)"
         "(13 34652 35162)"
         "(13 35162 35620)"
         "(13 35620 35864)"
         "(13 35864 36212)"
         "(13 36212 36558)"
         "(13 36558 36910)"
         "(13 36910 37304)"
         "(13 37304 38040)"
         "(13 38040 39474)"
         "(13 39474 40020)"
         "(13 40020 40386)"
         "(13 40386 40610)"
         "(13 40610 41100)"
         "(14 1114 1956)"
         "(14 1956 2898)"
         "(14 2898 3850)"
         "(14 3850 4070)"
         "(14 4070 4870)"
         "(14 4870 5108)"
         "(14 5108 6530)"
         "(14 6530 7588)"
         "(14 7588 8726)"
         "(14 8726 9814)"
         "(14 9814 10026)"
         "(14 10026 10910)"
         "(14 10910 11878)"
         "(14 11878 12104)"
         "(14 12104 13036)"
         "(14 13036 16174)"
         "(14 16174 16388)"
         "(14 16388 16774)"
         "(14 16774 17192)"
         "(14 17192 18226)"
         "(14 18226 19362)"
         "(14 19362 20232)"
         "(14 20232 23006)"
         "(14 23006 23506)"
         "(14 23506 23978)"
         "(14 23978 24464)"
         "(14 24464 24890)"
         "(14 24890 25888)"
         "(14 25888 26212)"
         "(14 26212 26560)"
         "(14 26560 26878)"
         "(14 26878 27272)"
         "(14 27272 27538)"
         "(14 27538 27824)"
         "(14 27824 27996)"
         "(14 27996 28772)"
         "(14 28772 29016)"
         "(14 29016 29538)"
         "(14 29538 29796)"
         "(14 29796 30400)"
         "(14 30400 30674)"
         "(14 30674 31302)"
         "(14 31302 31536)"
         "(14 31536 32212)"
         "(15 482 1568)"
         "(15 1568 2072)"
         "(15 2072 2366)"
         "(15 2366 2620)"
         "(15 2620 2878)"
         "(15 2878 3096)"
         "(15 3096 3402)"
         "(15 3402 3832)"
         "(15 3832 4166)"
         "(15 4166 4538)"
         "(15 4538 4890)"
         "(15 4890 5434)"
         "(15 5434 5906)"
         "(15 5906 6476)"
         "(15 6476 7076)"
         "(15 7076 7568)"
         "(15 7568 8000)"
         "(15 8000 8278)"
         "(15 8278 8648)"
         "(15 8648 8958)"
         "(15 8958 9610)"
         "(15 9610 9852)"
         "(15 9852 10514)"
         "(15 10514 10728)"
         "(15 10728 11122)"
         "(15 11122 11378)"
         "(15 11378 11682)"
         "(15 11682 11966)"
         "(15 11966 12510)"
         "(15 12510 12890)"
         "(15 12890 13148)"
         "(15 13148 13380)"
         "(15 13380 13982)"
         "(15 13982 14206)"
         "(15 14206 14574)"
         "(15 14574 14812)"
         "(15 14812 15154)"
         "(15 15154 15856)"
         "(15 15856 16490)"
         "(15 16490 16848)"
         "(15 16848 17460)"
         "(15 17460 17700)"
         "(15 17700 18134)"
         "(15 18134 18372)"
         "(15 18372 18664)"
         "(15 18664 18986)"
         "(15 18986 19342)"
         "(15 19342 19752)"
         "(15 19752 20454)"
         "(15 20454 20716)"
         "(15 20716 21320)"
         "(15 21320 21800)"
         "(15 21800 22228)"
         "(15 22228 22958)"
         "(15 22958 23424)"
         "(15 23424 23644)"
         "(15 23644 23874)"
         "(15 23874 24384)"
         "(15 24384 24884)"
         "(15 24884 25360)"
         "(15 25360 26344)"
         "(15 26344 26604)"
         "(15 26604 26790)"
         "(15 26790 27096)"
         "(15 27096 27396)"
         "(15 27396 28230)"
         "(15 28230 28614)"
         "(15 28614 28908)"
         "(15 28908 29232)"
         "(15 29232 29578)"
         "(15 29578 29890)"
         "(15 29890 30296)"
         "(15 30296 30684)"
         "(15 30684 30952)"
         "(15 30952 31372)"
         "(15 31372 31752)"
         "(15 31752 32370)"
         "(15 32370 32602)"
         "(15 32602 32816)"
         "(15 32816 33062)"
         "(15 33062 33478)"
         "(15 33478 33814)"
         "(15 33814 34662)"
         "(15 34662 35228)"
         "(15 35228 35750)"
         "(15 35750 36502)"
         "(15 36502 36856)"
         "(15 36856 37072)"
         "(15 37072 37744)"
         "(15 37744 38208)"
         "(15 38208 38522)"
         "(15 38522 39320)"
         "(15 39320 39656)"
         "(15 39656 40240)"
         "(15 40240 40436)"
         "(15 40436 40950)"
         "(15 40950 41576)"
         "(15 41576 41866)"
         "(15 41866 42078)"
         "(15 42078 42486)"
         "(15 42486 42956)"
         "(16 2020 3210)"
         "(16 3210 3440)"
         "(16 3440 4452)"
         "(16 4452 4768)"
         "(16 4768 5682)"
         "(16 5682 6354)"
         "(16 6354 7080)"
         "(16 7080 7358)"
         "(16 7358 8360)"
         "(16 8360 8626)"
         "(16 8626 9466)"
         "(16 9466 9680)"
         "(16 9680 9922)"
         "(16 9922 10904)"
         "(16 10904 11238)"
         "(16 11238 12102)"
         "(16 12102 12316)"
         "(16 12316 13366)"
         "(16 13366 13618)"
         "(16 13618 14544)"
         "(16 14544 14966)"
         "(16 14966 15806)"
         "(16 15806 16184)"
         "(16 16184 17276)"
         "(16 17276 17500)"
         "(16 17500 17992)"
         "(16 17992 19182)"
         "(17 128 380)"
         "(17 380 698)"
         "(17 698 1270)"
         "(17 1270 3662)"
         "(17 3662 3986)"
         "(17 3986 4380)"
         "(17 4380 6734)"
         "(17 6734 10522)"
         "(17 10522 11690)"
         "(17 11690 13394)"
         "(17 13394 14092)"
         "(17 14092 14334)"
         "(17 14334 14574)"
         "(17 14574 15042)"
         "(17 15042 15338)"
         "(17 15338 15926)"
         "(17 15926 16576)"
         "(17 16576 17564)"
         "(17 17564 18460)"
         "(17 18460 18764)"
         "(17 18764 22530)"
         "(17 22530 22924)"
         "(17 22924 23124)"
         "(17 23124 23520)"
         "(17 23520 24028)"
         "(17 24028 24600)"
         "(17 24600 25014)"
         "(17 25014 25256)"
         "(17 25256 25496)"
         "(17 25496 25840)"
         "(17 25840 26406)"
         "(17 26406 26628)"
         "(17 26628 27644)"
         "(17 27644 27956)"
         "(17 27956 28378)"
         "(17 28378 28730)"
         "(17 28730 29164)"
         "(17 29164 29400)"
         "(17 29400 30216)"
         "(17 30216 30596)"
         "(17 30596 31032)"
         "(17 31032 31380)"
         "(17 31380 33340)"
         "(17 33340 35860)"
         "(17 35860 36764)"
         "(17 36764 37404)"
         "(17 37404 37630)"
         "(17 37630 38132)"
         "(17 38132 39510)"
         "(17 39510 40056)"
         "(17 40056 40310)"
         "(17 40310 40698)"
         "(17 40698 41052)"
         "(17 41052 41354)"
         "(17 41354 42666)"
         "(17 42666 42874)"
         "(17 42874 43096)"
         "(17 43096 43432)"
         "(17 43432 44200)"
         "(17 44200 44770)"
         "(17 44770 45222)"
         "(17 45222 45664)"
         "(17 45664 46118)"
         "(17 46118 46536)"
         "(17 46536 47236)"
         "(17 47236 47484)"
         "(17 47484 47826)"
         "(17 47826 48236)"
         "(17 48236 48576)"
         "(17 48576 48792)"
         "(17 48792 49002)"
         "(17 49002 49516)"
         "(17 49516 50202)"
         "(17 50202 50416)"
         "(17 50416 50938)"
         "(17 50938 51156)"
         "(17 51156 51372)"
         "(18 434 710)"
         "(18 710 1030)"
         "(18 1030 1716)"
         "(18 1716 1956)"
         "(18 1956 2224)"
         "(18 2224 2624)"
         "(18 2624 3100)"
         "(18 3100 3654)"
         "(18 3654 4032)"
         "(18 4032 4498)"
         "(18 4498 4892)"
         "(18 4892 5406)"
         "(18 5406 5606)"
         "(18 5606 5820)"
         "(18 5820 6202)"
         "(18 6202 6446)"
         "(18 6446 6686)"
         "(18 6686 6950)"
         "(18 6950 7294)"
         "(18 7294 7574)"
         "(18 7574 8016)"
         "(18 8016 8230)"
         "(18 8230 8834)"
         "(18 8834 9268)"
         "(18 9268 9602)"
         "(18 9602 9878)"
         "(18 9878 10128)"
         "(18 10128 10412)"
         "(18 10412 10884)"
         "(18 10884 11140)"
         "(18 11140 11380)"
         "(18 11380 11788)"
         "(18 11788 12194)"
         "(18 12194 12608)"
         "(18 12608 12818)"
         "(18 12818 13272)"
         "(18 13272 13614)"
         "(18 13614 13812)"
         "(18 13812 14042)"
         "(18 14042 14444)"
         "(18 14444 14666)"
         "(18 14666 15146)"
         "(18 15146 15582)"
         "(18 15582 15948)"
         "(18 15948 16426)"
         "(18 16426 16748)"
         "(18 16748 17116)"
         "(18 17116 17594)"
         "(18 17594 18058)"
         "(18 18058 18290)"
         "(18 18290 18490)"
         "(18 18490 19002)"
         "(18 19002 19520)"
         "(18 19520 19880)"
         "(18 19880 20160)"
         "(18 20160 20638)"
         "(18 20638 20878)"
         "(18 20878 21490)"
         "(18 21490 21888)"
         "(18 21888 22218)"
         "(18 22218 22626)"
         "(18 22626 23068)"
         "(18 23068 23408)"
         "(18 23408 23670)"
         "(18 23670 23950)"
         "(18 23950 24500)"
         "(18 24500 24878)"
         "(18 24878 27686)"
         "(18 27686 27948)"
         "(18 27948 28270)"
         "(18 28270 28678)"
         "(18 28678 29012)"
         "(18 29012 29430)"
         "(18 29430 30024)"
         "(18 30024 30366)"
         "(18 30366 30736)"
         "(18 30736 31140)"
         "(18 31140 31566)"
         "(18 31566 32032)"
         "(18 32032 32362)"
         "(18 32362 32568)"
         "(18 32568 32816)"
         "(18 32816 33202)"
         "(18 33202 33534)"
         "(18 33534 33820)"
         "(18 33820 34096)"
         "(18 34096 34466)"
         "(19 308 674)"
         "(19 674 1806)"
         "(19 1806 2018)"
         "(19 2018 2288)"
         "(19 2288 3264)"
         "(19 3264 3614)"
         "(19 3614 3932)"
         "(19 3932 4264)"
         "(19 4264 4786)"
         "(19 4786 5142)"
         "(19 5142 6188)"
         "(19 6188 6582)"
         "(19 6582 6886)"
         "(19 6886 7804)"
         "(19 7804 8216)"
         "(19 8216 9474)"
         "(19 9474 9686)"
         "(19 9686 9902)"
         "(19 9902 11906)"
         "(19 11906 12122)"
         "(19 12122 12378)"
         "(19 12378 13360)"
         "(19 13360 13918)"
         "(19 13918 15330)"
         "(19 15330 15612)"
         "(19 15612 15982)"
         "(19 15982 16680)"
         "(19 16680 17260)"
         "(19 17260 17476)"
         "(19 17476 18592)"
         "(19 18592 18950)"
         "(19 18950 19256)"
         "(19 19256 20208)"
         "(19 20208 20434)"
         "(19 20434 20814)"
         "(19 20814 21226)"
         "(19 21226 22032)"
         "(19 22032 22410)"
         "(19 22410 22716)"
         "(19 22716 23972)"
         "(19 23972 24208)"
         "(19 24208 25880)"
         "(19 25880 26218)"
         "(19 26218 27732)"
         "(19 27732 28318)"
         "(19 28318 28716)"
         "(19 28716 28928)"
         "(19 28928 29340)"
         "(19 29340 31104)"
         "(19 31104 31422)"
         "(19 31422 32420)"
         "(19 32420 32754)"
         "(19 32754 33920)"
         "(19 33920 34376)"
         "(19 34376 35166)"
         "(19 35166 35780)"
         "(19 35780 35996)"
         "(19 35996 36288)"
         "(20 190 452)"
         "(20 452 932)"
         "(20 932 1464)"
         "(20 1464 1778)"
         "(20 1778 2072)"
         "(20 2072 2696)"
         "(20 2696 2922)"
         "(20 2922 3184)"
         "(20 3184 3470)"
         "(20 3470 3720)"
         "(20 3720 4042)"
         "(20 4042 4418)"
         "(20 4418 4814)"
         "(20 4814 5144)"
         "(20 5144 5536)"
         "(20 5536 5828)"
         "(20 5828 6102)"
         "(20 6102 6370)"
         "(20 6370 6574)"
         "(20 6574 7012)"
         "(20 7012 7240)"
         "(20 7240 7728)"
         "(20 7728 7954)"
         "(20 7954 8186)"
         "(20 8186 8386)"
         "(20 8386 8726)"
         "(20 8726 9182)"
         "(20 9182 9530)"
         "(20 9530 10232)"
         "(20 10232 10620)"
         "(20 10620 10868)"
         "(20 10868 11070)"
         "(20 11070 11558)"
         "(20 11558 12222)"
         "(20 12222 12934)"
         "(20 12934 13432)"
         "(20 13432 14286)"
         "(20 14286 14734)"
         "(20 14734 15770)"
         "(20 15770 16124)"
         "(20 16124 16736)"
         "(20 16736 17122)"
         "(20 17122 17624)"
         "(20 17624 17864)"
         "(20 17864 18758)"
         "(20 18758 20604)"
         "(20 20604 20856)"
         "(20 20856 21242)"
         "(20 21242 21588)"
         "(20 21588 21896)"
         "(20 21896 22188)"
         "(20 22188 22398)"
         "(20 22398 22640)"
         "(20 22640 22920)"
         "(20 22920 23152)"
         "(20 23152 23496)"
         "(20 23496 23944)"
         "(20 23944 24396)"
         "(20 24396 24622)"
         "(20 24622 25034)"
         "(20 25034 25538)"
         "(20 25538 26076)"
         "(20 26076 26536)"
         "(20 26536 26900)"
         "(20 26900 27304)"
         "(20 27304 27858)"
         "(20 27858 28222)"
         "(20 28222 28568)"
         "(20 28568 29072)"
         "(20 29072 29452)"
         "(20 29452 29702)"
         "(20 29702 30004)"
         "(20 30004 31298)"
         "(20 31298 31674)"
         "(20 31674 32746)"
         "(20 32746 33452)"
         "(20 33452 33666)"
         "(20 33666 33880)"
         "(20 33880 34230)"
         "(20 34230 34536)"
         "(20 34536 34880)"
         "(20 34880 35164)"
         "(20 35164 35616)"
         "(20 35616 36596)"
         "(20 36596 37128)"
         "(20 37128 38072)"
         "(20 38072 39096)"
         "(20 39096 39566)"
         "(20 39566 40442)"
         "(20 40442 40930)"
         "(20 40930 41186)"
         "(20 41186 41744)"
         "(20 41744 42010)"
         "(20 42010 42268)"
         "(20 42268 43072)"
         "(20 43072 43504)"
         "(20 43504 44014)"
         "(20 44014 44454)"
         "(20 44454 44882)"
         "(20 44882 45220)"
         "(20 45220 45622)"
         "(20 45622 46064)"
         "(20 46064 46722)"
         "(20 46722 47002)"
         "(20 47002 47210)"
         "(20 47210 47726)"
         "(20 47726 47980)"
         "(20 47980 48270)"
         "(20 48270 48810)"
         "(20 48810 49786)"
         "(20 49786 50032)"
         "(20 50032 50548)"
         "(20 50548 50786)"
         "(20 50786 51200)"
         "(20 51200 51534)"
         "(20 51534 51844)"
         "(20 51844 52182)"
         "(20 52182 52532)"
         "(20 52532 52760)"
         "(20 52760 53128)"
         "(20 53128 53428)"
         "(20 53428 53706)"
         "(20 53706 53934)"
         "(20 53934 54308)"
         "(20 54308 54720)"
         "(20 54720 54940)"
         "(20 54940 56090)"
         "(20 56090 56336)"
         "(20 56336 56854)"
         "(20 56854 57132)"
         "(20 57132 57422)"
         "(20 57422 58274)"
         "(20 58274 58608)"
         "(20 58608 58926)"
         "(20 58926 59646)"
         "(20 59646 59952)"
         "(20 59952 60216)"
         "(20 60216 60654)"
         "(20 60654 60994)"
         "(20 60994 61330)"
         "(20 61330 62212)"
         "(20 62212 62470)"
         "(20 62470 62696)"
         "(20 62696 63166)"
         "(20 63166 63642)"
         "(20 63642 64088)"
         "(20 64088 64602)"
         "(20 64602 64890)"
         "(20 64890 65160)"
         "(20 65160 65542)"
         "(20 65542 66014)"
         "(20 66014 66492)"
         "(20 66492 66974)"
         "(20 66974 67492)"
         "(20 67492 68030)"
         "(20 68030 68380)"
         "(20 68380 68586)"
         "(20 68586 69446)"
         "(20 69446 70190)"
         "(20 70190 70580)"
         "(20 70580 70828)"
         "(20 70828 71206)"
         "(20 71206 72096)"
         "(20 72096 72596)"
         "(20 72596 72952)"
         "(20 72952 73438)"
         "(20 73438 74156)"
         "(20 74156 74596)"
         "(20 74596 75266)"
         "(20 75266 75776)"
         "(20 75776 76010)"
         "(20 76010 76402)"
         "(20 76402 76826)"
         "(20 76826 77336)"
         "(20 77336 78398)"
         "(20 78398 78656)"
         "(20 78656 79080)"
         "(20 79080 79292)"
         "(20 79292 79618)"
         "(20 79618 79950)"
         "(20 79950 80222)"
         "(20 80222 80490)"
         "(20 80490 81348)"
         "(20 81348 81998)"
         "(20 81998 82272)"
         "(20 82272 83052)"
         "(20 83052 83318)"
         "(20 83318 84130)"
         "(20 84130 84552)"
         "(20 84552 84964)"
         "(20 84964 85344)"
         "(20 85344 85592)"
         "(20 85592 85800)"
         "(20 85800 86356)"
         "(20 86356 86730)"
         "(20 86730 87314)"
         "(20 87314 87874)"
         "(20 87874 88356)"
         "(20 88356 88654)"
         "(20 88654 89136)"
         "(20 89136 89730)"
         "(20 89730 90182)"
         "(20 90182 90426)"
         "(20 90426 90978)"
         "(20 90978 91218)"
         "(21 186 508)"
         "(21 508 716)"
         "(21 716 1390)"
         "(21 1390 1812)"
         "(21 1812 2088)"
         "(21 2088 2374)"
         "(21 2374 2632)"
         "(21 2632 3160)"
         "(21 3160 3438)"
         "(21 3438 3728)"
         "(21 3728 3988)"
         "(21 3988 4260)"
         "(21 4260 4552)"
         "(21 4552 4816)"
         "(21 4816 5102)"
         "(21 5102 5558)"
         "(21 5558 5840)"
         "(21 5840 6140)"
         "(21 6140 6610)"
         "(21 6610 7190)"
         "(21 7190 9604)"
         "(21 9604 9896)"
         "(21 9896 10610)"
         "(21 10610 11096)"
         "(21 11096 11448)"
         "(21 11448 11852)"
         "(21 11852 12240)"
         "(21 12240 12516)"
         "(21 12516 12926)"
         "(21 12926 13206)"
         "(21 13206 13478)"
         "(21 13478 13898)"
         "(21 13898 14168)"
         "(21 14168 15152)"
         "(21 15152 15838)"
         "(21 15838 16464)"
         "(21 16464 17038)"
         "(21 17038 17538)"
         "(21 17538 17754)"
         "(21 17754 18396)"
         "(21 18396 18826)"
         "(21 18826 19240)"
         "(21 19240 19530)"
         "(21 19530 19824)"
         "(21 19824 20178)"
         "(21 20178 20400)"
         "(21 20400 20876)"
         "(21 20876 21156)"
         "(21 21156 21360)"
         "(21 21360 21694)"
         "(21 21694 22012)"
         "(21 22012 22220)"
         "(21 22220 22500)"
         "(21 22500 23060)"
         "(21 23060 23352)"
         "(21 23352 24760)"
         "(21 24760 25192)"
         "(21 25192 25428)"
         "(21 25428 26006)"
         "(21 26006 26312)"
         "(21 26312 26770)"
         "(21 26770 27036)"
         "(21 27036 27562)"
         "(21 27562 27806)"
         "(21 27806 28100)"
         "(21 28100 28514)"
         "(21 28514 28798)"
         "(21 28798 29002)"
         "(21 29002 29762)"
         "(21 29762 30514)"
         "(21 30514 32282)"
         "(21 32282 32500)"
         "(21 32500 33344)"
         "(21 33344 33742)"
         "(21 33742 34156)"
         "(21 34156 34402)"
         "(21 34402 34680)"
         "(21 34680 35320)"
         "(21 35320 35540)"
         "(21 35540 35796)"
         "(21 35796 36310)"
         "(21 36310 36498)"
         "(21 36498 37092)"
         "(21 37092 37358)"
         "(21 37358 37618)"
         "(21 37618 38134)"
         "(21 38134 38420)"
         "(21 38420 38962)"
         "(21 38962 39260)"
         "(21 39260 39520)"
         "(21 39520 39856)"
         "(21 39856 40480)"
         "(21 40480 40874)"
         "(21 40874 42774)"
         "(21 42774 43152)"
         "(21 43152 43472)"
         "(21 43472 43908)"
         "(21 43908 44316)"
         "(21 44316 44638)"
         "(21 44638 45166)"
         "(21 45166 45426)"
         "(21 45426 45672)"
         "(21 45672 46058)"
         "(21 46058 46328)"
         "(21 46328 46784)"
         "(21 46784 47042)"
         "(21 47042 47432)"
         "(21 47432 47878)"
         "(21 47878 49548)"
         "(21 49548 49748)"
         "(21 49748 50130)"
         "(21 50130 50400)"
         "(21 50400 50626)"
         "(21 50626 51004)"
         "(21 51004 51272)"
         "(21 51272 51588)"
         "(21 51588 51866)"
         "(21 51866 52086)"
         "(21 52086 52416)"
         "(21 52416 52638)"
         "(21 52638 53000)"
         "(21 53000 53276)"
         "(21 53276 53622)"
         "(21 53622 53884)"
         "(21 53884 54184)"
         "(21 54184 54462)"
         "(21 54462 54736)"
         "(21 54736 55134)"
         "(21 55134 55452)"
         "(21 55452 56090)"
         "(21 56090 56516)"
         "(21 56516 56908)"
         "(21 56908 57182)"
         "(21 57182 57412)"
         "(21 57412 57678)"
         "(21 57678 58216)"
         "(21 58216 58482)"
         "(21 58482 59256)"
         "(21 59256 60206)"
         "(21 60206 60652)"
         "(21 60652 60912)"
         "(21 60912 61132)"
         "(21 61132 61630)"
         "(21 61630 62152)"
         "(21 62152 62386)"
         "(21 62386 62890)"
         "(21 62890 63194)"
         "(21 63194 63504)"
         "(21 63504 63732)"
         "(21 63732 63948)"
         "(21 63948 64220)"
         "(21 64220 64642)"
         "(21 64642 64890)"
         "(21 64890 65300)"
         "(21 65300 65560)"
         "(21 65560 65810)"
         "(21 65810 66054)"
         "(21 66054 66444)"
         "(21 66444 69374)"
         "(21 69374 69678)"
         "(21 69678 69994)"
         "(21 69994 70434)"
         "(21 70434 70682)"
         "(21 70682 71064)"
         "(21 71064 71576)"
         "(21 71576 71990)"
         "(21 71990 72426)"
         "(21 72426 72824)"
         "(21 72824 73584)"
         "(21 73584 73796)"
         "(21 73796 74090)"
         "(21 74090 74526)"
         "(21 74526 75784)"
         "(22 118 472)"
         "(22 472 1774)"
         "(22 1774 2166)"
         "(22 2166 12146)"
         "(22 12146 12510)"
         "(22 12510 13668)"
         "(22 13668 16154)"
         "(22 16154 16788)"
         "(22 16788 21012)"
         "(22 21012 21238)"
         "(22 21238 21810)"
         "(22 21810 22272)"
         "(22 22272 22496)"
         "(22 22496 22818)"
         "(22 22818 23196)"
         "(22 23196 23402)"
         "(22 23402 23844)"
         "(22 23844 24068)"
         "(22 24068 24414)"
         "(22 24414 34262)"
         "(22 34262 34662)"
         "(22 34662 35050)"
         "(22 35050 50260)"
         "(22 50260 50582)"
         "(22 50582 50796)"
         "(22 50796 51150)"
         "(22 51150 51520)"
         "(22 51520 51852)"
         "(22 51852 52068)"
         "(22 52068 52658)"
         "(22 52658 54516)"
         "(22 54516 54832)"
         "(22 54832 55112)"
         "(22 55112 55390)"
         "(22 55390 55684)"
         "(22 55684 56192)"
         "(22 56192 56420)"
         "(23 604 2304)"
         "(24 714 960)"
         "(24 960 1184)"
         "(24 1184 1604)"
         "(24 1604 2138)"
         "(24 2138 3222)"
         "(24 3222 3642)"
         "(24 3642 4122)"
         "(24 4122 4956)"
         "(24 4956 5558)"
         "(24 5558 5994)"
         "(24 5994 6206)"
         "(24 6206 6428)"
         "(24 6428 6692)"
         "(24 6692 7032)"
         "(24 7032 9080)"
         "(24 9080 9386)"
         "(24 9386 9708)"
         "(24 9708 10148)"
         "(24 10148 11980)"
         "(24 11980 12496)"
         "(24 12496 12818)"
         "(24 12818 13202)"
         "(24 13202 13614)"
         "(24 13614 15626)"
         "(24 15626 15840)"
         "(24 15840 16592)"
         "(24 16592 17148)"
         "(24 17148 17916)"
         "(24 17916 19096)"
         "(24 19096 19492)"
         "(24 19492 19872)"
         "(24 19872 20272)"
         "(24 20272 21264)"
         "(24 21264 21638)"
         "(24 21638 21972)"
         "(24 21972 22272)"
         "(24 22272 22844)"
         "(24 22844 23078)"
         "(24 23078 23376)"
         "(24 23376 23730)"
         "(24 23730 24234)"
         "(24 24234 25664)"
         "(24 25664 25884)"
         "(24 25884 26438)"
         "(24 26438 27142)"
         "(25 548 764)"
         "(25 764 980)"
         "(25 980 1870)"
         "(25 1870 2156)"
         "(25 2156 2422)"
         "(25 2422 3468)"
         "(25 3468 3736)"
         "(25 3736 4806)"
         "(25 4806 5204)"
         "(25 5204 5992)"
         "(25 5992 6318)"
         "(25 6318 6562)"
         "(26 548 994)"
         "(26 994 1528)"
         "(26 1528 1916)"
         "(26 1916 2206)"
         "(26 2206 2592)"
         "(26 2592 2800)"
         "(26 2800 3218)"
         "(26 3218 3504)"
         "(26 3504 3904)"
         "(26 3904 4112)"
         "(26 4112 4402)"
         "(26 4402 4938)"
         "(26 4938 5294)"
         "(26 5294 5500)"
         "(26 5500 5798)"
         "(26 5798 6002)"
         "(26 6002 6516)"
         "(26 6516 6858)"
         "(26 6858 7136)"
         "(26 7136 7514)"
         "(26 7514 8224)"
         "(26 8224 8514)"
         "(26 8514 8900)"
         "(26 8900 9220)"
         "(26 9220 9522)"
         "(26 9522 9980)"
         "(26 9980 10478)"
         "(26 10478 10868)"
         "(26 10868 11260)"
         "(26 11260 11800)"
         "(26 11800 12040)"
         "(26 12040 12384)"
         "(26 12384 12774)"
         "(26 12774 12986)"
         "(26 12986 13256)"
         "(26 13256 13658)"
         "(26 13658 14366)"
         "(26 14366 14582)"
         "(26 14582 14788)"
         "(26 14788 15264)"
         "(26 15264 15628)"
         "(26 15628 16096)"
         "(26 16096 16836)"
         "(26 16836 17220)"
         "(26 17220 17550)"
         "(26 17550 18270)"
         "(26 18270 18642)"
         "(26 18642 19198)"
         "(26 19198 19458)"
         "(26 19458 19938)"
         "(26 19938 20288)"
         "(26 20288 20814)"
         "(26 20814 21302)"
         "(26 21302 21752)"
         "(26 21752 22396)"
         "(26 22396 22930)"
         "(26 22930 23214)"
         "(26 23214 23610)"
         "(26 23610 23936)"
         "(26 23936 24362)"
         "(26 24362 24608)"
         "(26 24608 25072)"
         "(26 25072 25470)"
         "(26 25470 25682)"
         "(26 25682 26162)"
         "(26 26162 26698)"
         "(26 26698 27230)"
         "(26 27230 27560)"
         "(26 27560 27786)"
         "(26 27786 28086)"
         "(26 28086 28474)"
         "(26 28474 28844)"
         "(26 28844 29080)"
         "(26 29080 29524)"
         "(26 29524 29774)"
         "(26 29774 30258)"
         "(26 30258 30576)"
         "(26 30576 30856)"
         "(26 30856 31334)"
         "(26 31334 31558)"
         "(26 31558 32106)"
         "(26 32106 32542)"
         "(26 32542 32816)"
         "(26 32816 33150)"
         "(26 33150 33382)"
         "(26 33382 33792)"
         "(26 33792 34132)"
         "(26 34132 34346)"
         "(26 34346 34650)"
         "(26 34650 35324)"
         "(26 35324 36038)"
         "(26 36038 36328)"
         "(26 36328 38984)"
         "(26 38984 39358)"
         "(27 1412 1818)"
         "(27 1818 2126)"
         "(27 2126 2506)"
         "(27 2506 2816)"
         "(27 2816 3184)"
         "(27 3184 3610)"
         "(27 3610 4140)"
         "(27 4140 4412)"
         "(27 4412 4842)"
         "(27 4842 5094)"
         "(27 5094 5514)"
         "(27 5514 5938)"
         "(27 5938 6362)"
         "(27 6362 6950)"
         "(27 6950 7262)"
         "(27 7262 7554)"
         "(27 7554 8020)"
         "(27 8020 8328)"
         "(27 8328 8734)"
         "(27 8734 10556)"
         "(27 10556 11072)"
         "(27 11072 11330)"
         "(27 11330 11840)"
         "(27 11840 12084)"
         "(27 12084 12694)"
         "(27 12694 13096)"
         "(27 13096 13410)"
         "(27 13410 13760)"
         "(27 13760 14312)"
         "(27 14312 15064)"
         "(27 15064 15282)"
         "(27 15282 15638)"
         "(27 15638 18222)"
         "(27 18222 18704)"
         "(27 18704 19012)"
         "(27 19012 19572)"
         "(27 19572 19998)"
         "(27 19998 20426)"
         "(27 20426 21002)"
         "(27 21002 21314)"
         "(27 21314 21564)"
         "(27 21564 21862)"
         "(27 21862 22194)"
         "(27 22194 22466)"
         "(27 22466 22766)"
         "(27 22766 23106)"
         "(27 23106 23390)"
         "(27 23390 23688)"
         "(27 23688 24294)"
         "(27 24294 24574)"
         "(27 24574 24792)"
         "(27 24792 27372)"
         "(27 27372 27766)"
         "(27 27766 28058)"
         "(27 28058 28796)"
         "(27 28796 29298)"
         "(27 29298 30152)"
         "(27 30152 30380)"
         "(27 30380 30686)"
         "(27 30686 31216)"
         "(27 31216 31506)"
         "(27 31506 32088)"
         "(27 32088 32360)"
         "(27 32360 32654)"
         "(27 32654 32916)"
         "(27 32916 33472)"
         "(27 33472 37288)"
         "(27 37288 37524)"
         "(27 37524 37856)"
         "(27 37856 38184)"
         "(27 38184 38570)"
         "(27 38570 38920)"
         "(27 38920 39182)"
         "(27 39182 39704)"
         "(27 39704 40042)"
         "(27 40042 40522)"
         "(27 40522 40890)"
         "(27 40890 41174)"
         "(27 41174 41726)"
         "(27 41726 42116)"
         "(27 42116 42466)"
         "(27 42466 42690)"
         "(27 42690 45936)"
         "(27 45936 46532)"
         "(27 46532 46800)"
         "(27 46800 47206)"
         "(27 47206 47436)"
         "(27 47436 47796)"
         "(27 47796 48154)"
         "(27 48154 48730)"
         "(27 48730 48984)"
         "(27 48984 49368)"
         "(27 49368 49654)"
         "(27 49654 50056)"
         "(27 50056 50424)"
         "(27 50424 52370)"
         "(27 52370 52690)"
         "(27 52690 52978)"
         "(27 52978 53292)"
         "(27 53292 53622)"
         "(27 53622 53886)"
         "(27 53886 54262)"
         "(27 54262 54462)"
         "(27 54462 54712)"
         "(27 54712 54950)"
         "(27 54950 55416)"
         "(27 55416 55696)"
         "(27 55696 55898)"
         "(27 55898 56160)"
         "(27 56160 56508)"
         "(27 56508 56708)"
         "(27 56708 57068)"
         "(27 57068 57332)"
         "(27 57332 57690)"
         "(27 57690 58182)"
         "(27 58182 58570)"
         "(27 58570 58830)"
         "(27 58830 59114)"
         "(27 59114 59618)"
         "(27 59618 60046)"
         "(27 60046 60286)"
         "(27 60286 60694)"
         "(27 60694 61318)"
         "(27 61318 62466)"
         "(27 62466 62750)"
         "(27 62750 63042)"
         "(27 63042 63320)"
         "(27 63320 63808)"
         "(27 63808 64178)"
         "(27 64178 64448)"
         "(27 64448 65084)"
         "(27 65084 65334)"
         "(27 65334 65516)"
         "(27 65516 66036)"
         "(27 66036 66254)"
         "(27 66254 66552)"
         "(27 66552 66924)"
         "(27 66924 67164)"
         "(27 67164 67682)"
         "(27 67682 68028)"
         "(27 68028 68654)"
         "(27 68654 69036)"
         "(27 69036 69682)"
         "(27 69682 71994)"
         "(27 71994 72404)"
         "(27 72404 72696)"
         "(27 72696 72976)"
         "(27 72976 73312)"
         "(27 73312 73856)"
         "(27 73856 74214)"
         "(27 74214 74526)"
         "(27 74526 74744)"
         "(27 74744 75168)"
         "(27 75168 75814)"
         "(27 75814 76134)"
         "(27 76134 76372)"
         "(27 76372 76792)"
         "(28 2598 3452)"
         "(28 3452 4372)"
         "(28 4372 4582)"
         "(28 4582 5308)"
         "(28 5308 5538)"
         "(28 5538 6370)"
         "(28 6370 6942)"
         "(28 6942 8004)"
         "(28 8004 9060)"
         "(28 9060 10240)"
         "(28 10240 11288)"
         "(28 11288 12382)"
         "(28 12382 13352)"
         "(28 13352 13578)"
         "(28 13578 14508)"
         "(28 14508 16836)"
         "(28 16836 17058)"
         "(28 17058 17888)"
         "(28 17888 18896)"
         "(28 18896 19928)"
         "(28 19928 20896)"
         "(28 20896 21136)"
         "(28 21136 22538)"
         "(28 22538 23498)"
         "(28 23498 23758)"
         "(28 23758 24414)"
         "(28 24414 27872)"
         "(28 27872 28502)"
         "(28 28502 29224)"
         "(28 29224 29518)"
         "(28 29518 30004)"
         "(28 30004 30234)"
         "(28 30234 30770)"
         "(28 30770 31028)"
         "(28 31028 31634)"
         "(28 31634 31898)"
         "(28 31898 32494)"
         "(28 32494 32770)"
         "(28 32770 33500)"
         "(29 3254 5356)"
         "(30 752 1006)"
         "(30 1006 1314)"
         "(30 1314 1866)"
         "(30 1866 2256)"
         "(30 2256 2466)"
         "(30 2466 3070)"
         "(30 3070 3548)"
         "(30 3548 4092)"
         "(30 4092 4346)"
         "(30 4346 4756)"
         "(30 4756 5074)"
         "(30 5074 5466)"
         "(30 5466 5788)"
         "(30 5788 6064)"
         "(30 6064 6310)"
         "(30 6310 6684)"
         "(30 6684 7170)"
         "(30 7170 7536)"
         "(30 7536 7882)"
         "(30 7882 8234)"
         "(30 8234 8740)"
         "(30 8740 9024)"
         "(30 9024 9418)"
         "(30 9418 9682)"
         "(30 9682 10020)"
         "(30 10020 10292)"
         "(30 10292 10570)"
         "(30 10570 10950)"
         "(30 10950 11774)"
         "(30 11774 12086)"
         "(30 12086 12360)"
         "(30 12360 12650)"
         "(30 12650 13228)"
         "(30 13228 13528)"
         "(30 13528 13834)"
         "(30 13834 14230)"
         "(30 14230 14480)"
         "(30 14480 14796)"
         "(30 14796 15262)"
         "(30 15262 16030)"
         "(30 16030 16556)"
         "(30 16556 17010)"
         "(30 17010 17282)"
         "(30 17282 17528)"
         "(30 17528 17896)"
         "(30 17896 18222)"
         "(30 18222 18510)"
         "(30 18510 18822)"
         "(30 18822 19036)"
         "(30 19036 19506)"
         "(30 19506 21326)"
         "(30 21326 21646)"
         "(30 21646 22138)"
         "(30 22138 22388)"
         "(30 22388 22798)"
         "(30 22798 23174)"
         "(30 23174 23414)"
         "(30 23414 25216)"
         "(30 25216 25572)"
         "(30 25572 25950)"
         "(30 25950 26914)"
         "(30 26914 27166)"
         "(30 27166 27762)"
         "(30 27762 28256)"
         "(30 28256 28484)"
         "(30 28484 28776)"
         "(30 28776 29060)"
         "(30 29060 29290)"
         "(30 29290 29646)"
         "(30 29646 30246)"
         "(30 30246 30538)"
         "(30 30538 31206)"
         "(30 31206 31654)"
         "(30 31654 32054)"
         "(30 32054 33256)"
         "(30 33256 33564)"
         "(30 33564 34002)"
         "(30 34002 34390)"
         "(30 34390 34734)"
         "(30 34734 35148)"
         "(30 35148 35394)"
         "(30 35394 43788)"
         "(30 43788 44024)"
         "(30 44024 44364)"
         "(30 44364 44658)"
         "(30 44658 45154)"
         "(30 45154 45382)"
         "(30 45382 45914)"
         "(30 45914 46766)"
         "(30 46766 47072)"
         "(30 47072 47474)"
         "(30 47474 47690)"
         "(30 47690 48004)"
         "(30 48004 48366)"
         "(30 48366 48716)"
         "(30 48716 48950)"
         "(30 48950 49258)"
         "(30 49258 49862)"
         "(30 49862 50116)"
         "(30 50116 50672)"
         "(30 50672 50980)"
         "(30 50980 51226)"
         "(30 51226 51462)"
         "(30 51462 51798)"
         "(30 51798 51982)"
         "(30 51982 52336)"
         "(30 52336 52746)"
         "(30 52746 53102)"
         "(30 53102 53532)"
         "(30 53532 53838)"
         "(30 53838 54274)"
         "(30 54274 54484)"
         "(30 54484 54776)"
         "(30 54776 55036)"
         "(30 55036 55280)"
         "(30 55280 55994)"
         "(30 55994 56596)"
         "(30 56596 56892)"
         "(30 56892 57416)"
         "(30 57416 57650)"
         "(30 57650 57976)"
         "(30 57976 58270)"
         "(30 58270 58712)"
         "(30 58712 59102)"
         "(30 59102 59496)"
         "(30 59496 59916)"
         "(30 59916 60340)"
         "(30 60340 60576)"
         "(30 60576 61170)"
         "(30 61170 61440)"
         "(30 61440 61678)"
         "(30 61678 62158)"
         "(30 62158 62416)"
         "(30 62416 62864)"
         "(30 62864 63320)"
         "(30 63320 63684)"
         "(30 63684 63898)"
         "(30 63898 64114)"
         "(30 64114 64520)"
         "(30 64520 64942)"
         "(30 64942 65212)"
         "(30 65212 65434)"
         "(30 65434 65740)"
         "(30 65740 65996)"
         "(30 65996 66516)"
         "(30 66516 66826)"
         "(30 66826 67626)"
         "(30 67626 68274)"
         "(30 68274 68538)"
         "(30 68538 73226)"
         "(30 73226 73558)"
         "(30 73558 73836)"
         "(30 73836 74148)"
         "(30 74148 74402)"
         "(30 74402 74640)"
         "(30 74640 74836)"
         "(30 74836 75158)"
         "(30 75158 75626)"
         "(30 75626 76216)"
         "(30 76216 76596)"
         "(30 76596 76876)"
         "(30 76876 77116)"
         "(30 77116 77322)"
         "(30 77322 77556)"
         "(30 77556 78038)"
         "(30 78038 78688)"
         "(30 78688 79056)"
         "(30 79056 79604)"
         "(30 79604 79840)"
         "(30 79840 80274)"
         "(30 80274 80522)"
         "(30 80522 81004)"
         "(30 81004 81364)"
         "(30 81364 81592)"
         "(30 81592 81932)"
         "(30 81932 82182)"
         "(30 82182 82706)"
         "(30 82706 82990)"
         "(30 82990 83276)"
         "(30 83276 83880)"
         "(30 83880 84414)"
         "(30 84414 84890)"
         "(30 84890 85468)"
         "(30 85468 85858)"
         "(30 85858 86158)"
         "(30 86158 86432)"
         "(30 86432 86730)"
         "(30 86730 87268)"
         "(30 87268 87526)"
         "(30 87526 87872)"
         "(30 87872 88224)"
         "(30 88224 88452)"
         "(30 88452 88778)"
         "(30 88778 88996)"
         "(30 88996 89420)"
         "(30 89420 90134)"
         "(30 90134 90784)"
         "(30 90784 91200)"
         "(30 91200 91544)"
         "(30 91544 91914)"
         "(30 91914 92258)"
         "(30 92258 92680)"
         "(30 92680 93276)"
         "(30 93276 93536)"
         "(30 93536 93786)"
         "(30 93786 94236)"
         "(30 94236 94478)"
         "(30 94478 94696)"
         "(30 94696 94916)"
         "(30 94916 95410)"
         "(30 95410 95638)"
         "(30 95638 95944)"
         "(30 95944 96230)"
         "(30 96230 96738)"
         "(30 96738 97012)"
         "(30 97012 97932)"
         "(30 97932 98366)"
         "(30 98366 98640)"
         "(30 98640 99322)"
         "(30 99322 99622)"
         "(30 99622 101058)"
         "(30 101058 101696)"
         "(30 101696 102044)"
         "(30 102044 102428)"
         "(30 102428 102774)"
         "(30 102774 103270)"
         "(30 103270 104028)"
         "(30 104028 104682)"
         "(30 104682 107874)"
         "(30 107874 108240)"
         "(30 108240 108680)"
         "(30 108680 109918)"
         "(30 109918 110650)"
         "(30 110650 111710)"
         "(30 111710 111986)"
         "(30 111986 115704)"
         "(30 115704 117064)"
         "(30 117064 117678)"
         "(30 117678 118702)"
         "(30 118702 119500)"
         "(30 119500 119892)"
         "(30 119892 121000)"
         "(30 121000 121368)"
         "(30 121368 121970)"
         "(30 121970 123624)"
         "(30 123624 124250)"
         "(30 124250 125442)"
         "(30 125442 125858)"
         "(30 125858 126236)"
         "(30 126236 126586)"
         "(30 126586 127164)"
         "(30 127164 127776)"
         "(30 127776 129648)"
         "(30 129648 130770)"
         "(30 130770 131006)"
         "(30 131006 131286)"
         "(30 131286 131552)"
         "(30 131552 131790)"
         "(30 131790 132168)"
         "(30 132168 132614)"
         "(30 132614 133278)"
         "(30 133278 133512)"
         "(30 133512 133920)"
         "(30 133920 134168)"
         "(30 134168 134530)"
         "(30 134530 134804)"
         "(30 134804 135400)"
         "(30 135400 135852)"
         "(30 135852 136372)"
         "(30 136372 136802)"
         "(30 136802 137454)"
         "(30 137454 138728)"
         "(30 138728 138988)"
         "(30 138988 139260)"
         "(30 139260 139472)"
         "(30 139472 139750)"
         "(30 139750 140044)"
         "(30 140044 140440)"
         "(30 140440 141492)"
         "(30 141492 142074)"
         "(30 142074 142356)"
         "(30 142356 143784)"
         "(30 143784 144302)"
         "(30 144302 144516)"
         "(30 144516 145134)"
         "(30 145134 145760)"
         "(30 145760 146936)"
         "(30 146936 147688)"
         "(30 147688 147910)"
         "(30 147910 148440)"
         "(30 148440 149170)"
         "(30 149170 149882)"
         "(31 2314 2588)"
         "(31 2588 3222)"
         "(31 3222 3698)"
         "(31 3698 3926)"
         "(31 3926 4306)"
         "(31 4306 4730)"
         "(31 4730 7618)"
         "(31 7618 8448)"
         "(31 8448 9048)"
         "(31 9048 9472)"
         "(31 9472 10240)"
         "(31 10240 10696)"
         "(31 10696 10904)"
         "(31 10904 11390)"
         "(31 11390 11612)"
         "(31 11612 11846)"
         "(31 11846 12314)"
         "(31 12314 12900)"
         "(31 12900 16950)"
         "(31 16950 17264)"
         "(31 17264 17464)"
         "(31 17464 17836)"
         "(31 17836 18188)"
         "(31 18188 18434)"
         "(31 18434 18806)"
         "(31 18806 19012)"
         "(31 19012 19580)"
         "(31 19580 19992)"
         "(31 19992 23318)"
         "(31 23318 24644)"
         "(31 24644 25188)"
         "(31 25188 25480)"
         "(31 25480 25712)"
         "(31 25712 25992)"
         "(31 25992 26284)"
         "(31 26284 26720)"
         "(31 26720 27328)"
         "(31 27328 27632)"
         "(31 27632 28364)"
         "(31 28364 28770)"
         "(31 28770 29348)"
         "(31 29348 31072)"
         "(31 31072 31370)"
         "(31 31370 31760)"
         "(31 31760 32188)"
         "(31 32188 32556)"
         "(31 32556 32834)"
         "(31 32834 33898)"
         "(31 33898 34098)"
         "(31 34098 34566)"
         "(31 34566 35132)"
         "(31 35132 35600)"
         "(31 35600 35844)"
         "(31 35844 37856)"
         "(31 37856 38450)"
         "(31 38450 39112)"
         "(31 39112 39714)"
         "(31 39714 40108)"
         "(31 40108 40420)"
         "(31 40420 40704)"
         "(31 40704 41032)"
         "(31 41032 41536)"
         "(31 41536 42252)"
         "(31 42252 42890)"
         "(31 42890 43342)"
         "(31 43342 43762)"
         "(31 43762 44250)"
         "(31 44250 44456)"
         "(31 44456 44798)"
         "(31 44798 45200)"
         "(31 45200 45420)"
         "(31 45420 45692)"
         "(31 45692 46096)"
         "(31 46096 46388)"
         "(31 46388 46642)"
         "(31 46642 46996)"
         "(31 46996 47486)"
         "(31 47486 48118)"
         "(31 48118 48354)"
         "(31 48354 48744)"
         "(32 1096 1408)"
         "(32 1408 1810)"
         "(32 1810 2132)"
         "(32 2132 2394)"
         "(32 2394 2810)"
         "(32 2810 3364)"
         "(32 3364 3542)"
         "(32 3542 3916)"
         "(32 3916 4216)"
         "(32 4216 4852)"
         "(32 4852 5468)"
         "(32 5468 5666)"
         "(32 5666 6048)"
         "(32 6048 6422)"
         "(32 6422 6764)"
         "(32 6764 7160)"
         "(32 7160 7440)"
         "(32 7440 7662)"
         "(32 7662 7928)"
         "(32 7928 8316)"
         "(32 8316 8714)"
         "(32 8714 8870)"
         "(32 8870 9156)"
         "(32 9156 9592)"
         "(32 9592 9918)"
         "(32 9918 10468)"
         "(32 10468 11218)"
         "(32 11218 11642)"
         "(32 11642 12040)"
         "(32 12040 12468)"
         "(32 12468 12684)"
         "(32 12684 13226)"
         "(32 13226 13580)"
         "(32 13580 14196)"
         "(32 14196 14432)"
         "(32 14432 15138)"
         "(32 15138 15398)"
         "(32 15398 15670)"
         "(32 15670 16338)"
         "(32 16338 16906)"
         "(32 16906 17350)"
         "(32 17350 17988)"
         "(32 17988 18396)"
         "(32 18396 18734)"
         "(32 18734 19576)"
         "(32 19576 19928)"
         "(32 19928 20222)"
         "(32 20222 20588)"
         "(32 20588 20806)"
         "(32 20806 21142)"
         "(32 21142 21632)"
         "(32 21632 22114)"
         "(32 22114 22806)"
         "(32 22806 23210)"
         "(32 23210 23458)"
         "(32 23458 23890)"
         "(32 23890 24340)"
         "(32 24340 24614)"
         "(32 24614 24816)"
         "(32 24816 25426)"
         "(32 25426 25850)"
         "(32 25850 27168)"
         "(32 27168 27478)"
         "(32 27478 27936)"
         "(32 27936 28430)"
         "(32 28430 28760)"
         "(32 28760 29052)"
         "(32 29052 29322)"
         "(32 29322 29654)"
         "(32 29654 30030)"
         "(32 30030 30388)"
         "(32 30388 30794)"
         "(32 30794 31140)"
         "(32 31140 31948)"
         "(32 31948 32162)"
         "(32 32162 32356)"
         "(32 32356 32994)"
         "(32 32994 33612)"
         "(32 33612 34004)"
         "(32 34004 34648)"
         "(32 34648 35352)"
         "(32 35352 35666)"
         "(32 35666 35964)"
         "(32 35964 36354)"
         "(32 36354 36638)"
         "(32 36638 36852)"))
       (:labls
        (:list
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(68 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(85 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(16 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(26 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(19 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(39 -1 0 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(19 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(17 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(27 -1 0 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(21 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(27 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(19 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(24 -1 1 -1 -1)"
         "(25 -1 1 -1 -1)"
         "(40 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(18 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(16 -1 1 -1 -1)"
         "(16 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(18 -1 1 -1 -1)"
         "(17 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(18 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(16 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(87 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(22 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(73 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(50 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(10 -1 2 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(11 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(9 -1 3 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(44 -1 0 -1 -1)"
         "(11 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(11 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(19 -1 0 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(12 -1 3 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(19 -1 0 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(21 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(27 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(25 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(22 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(13 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(10 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(18 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(17 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(16 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(16 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(16 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(29 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(16 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(17 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(24 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(20 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(19 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(20 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(33 -1 0 -1 -1)"
         "(27 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(60 -1 0 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(99 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(24 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(19 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(19 -1 0 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(42 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(37 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(16 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(16 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(32 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(31 -1 1 -1 -1)"
         "(51 -1 1 -1 -1)"
         "(16 -1 1 -1 -1)"
         "(23 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(50 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(26 -1 1 -1 -1)"
         "(34 -1 0 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(18 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(17 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(37 -1 0 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(17 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(27 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(19 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(17 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(22 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(20 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(24 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(16 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(11 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(17 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(32 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(10 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(19 -1 0 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(10 -1 2 -1 -1)"
         "(10 -1 2 -1 -1)"
         "(24 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(22 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(39 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(10 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(17 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(17 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(133 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(33 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(56 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(131 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(203 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(23 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(27 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(24 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(27 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(16 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(19 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(35 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(24 -1 0 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(10 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(34 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(34 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(10 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(11 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(51 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(43 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(26 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(31 -1 0 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(16 -1 0 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(31 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(19 -1 0 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(46 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(28 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(24 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(24 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(16 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(112 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(63 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(19 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(43 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(17 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(50 -1 0 -1 -1)"
         "(18 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(22 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(16 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(17 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(19 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(16 -1 0 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(39 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(54 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(44 -1 0 -1 -1)"
         "(18 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(23 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(27 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(18 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"))))))
   (:id 30))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 280)
   (:y 466)
   (:w 291)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "(dur=~a)(pitch=~a)(int=~a)")
   (:id 31))
  (:comment
   (:x 183)
   (:y 230)
   (:w 305)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "1) SET THE ACTIVE DIMENSIONS OF THE LABELS
(duration pitchmode intensity voice_casting nmf)")
   (:id 32))
  (:box
   (:type :function)
   (:reference (:symbol "OM-DIRECTORY" "OM-API"))
   (:group-id nil)
   (:name "om-directory")
   (:x 1278)
   (:y 261)
   (:w 105)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATH")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "type") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 33))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1391)
   (:y 233)
   (:w 100)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "seg_desc")
   (:id 34))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "make-local-dyci2-path")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (500 500)) (:position (-742 194)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (folder corpus_subfolder) "
       "  (namestring "
       "   (merge-pathnames "
       "    (string+ folder \"Corpus/\" corpus_subfolder \"/\") "
       "    ;(om-user-home)"
       "    )))"
       "  "))))
   (:group-id nil)
   (:name "make-local-dyci2-path")
   (:x 1226)
   (:y 229)
   (:w 155)
   (:h 29)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "FOLDER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CORPUS_SUBFOLDER")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 35))
  (:comment
   (:x 617)
   (:y 919)
   (:w 129)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "7) EVALUATE")
   (:id 36))
  (:box
   (:type :function)
   (:reference (:symbol "OM-CREATE-DIRECTORY" "OM-API"))
   (:group-id nil)
   (:name "om-create-directory")
   (:x 1133)
   (:y 748)
   (:w 142)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATHNAME")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 37))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "make-local-dyci2-path")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (500 500)) (:position (-1008 218)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (folder results_subfolder) "
       "  (namestring "
       "   (merge-pathnames "
       "   (string+ folder \"Results/\" results_subfolder \"/\") "
       "    ;(om-user-home)"
       "    )))"
       ""))))
   (:group-id nil)
   (:name "make-local-dyci2-path")
   (:x 1126)
   (:y 722)
   (:w 155)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "FOLDER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RESULTS_SUBFOLDER")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 38))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "this_patch_parent_directory")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omselfin) (:index 0) (:name "BOX") (:doc "")))
       (:group-id nil)
       (:name "BOX")
       (:x 127)
       (:y 58)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out
         (:type omout)
         (:name "this_patch_parent_directory")
         (:index 1)
         (:doc "")))
       (:group-id nil)
       (:name "this_patch_parent_directory")
       (:x 60)
       (:y 247)
       (:w 182)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :function)
       (:reference mypathname)
       (:group-id nil)
       (:name "mypathname")
       (:x 97)
       (:y 136)
       (:w 107)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OMPERSISTANTOBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference container)
       (:group-id nil)
       (:name "container")
       (:x 107)
       (:y 103)
       (:w 87)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OMBOX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference directory-namestring)
       (:group-id nil)
       (:name "directory-namestring")
       (:x 77)
       (:y 193)
       (:w 147)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 1 :in 0))))))
   (:group-id nil)
   (:name "this_patch_parent_directory")
   (:x 225)
   (:y 180)
   (:w 186)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs
    (:output (:name "this_patch_parent_directory") (:reactive nil)))
   (:id 39))
  (:comment
   (:x 693)
   (:y 644)
   (:w 94)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Crossfade (ms)")
   (:id 40))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-process-dataset")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (689 507)) (:position (84 115)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "lab_files") (:doc "")))
       (:group-id nil)
       (:name "lab_files")
       (:x 212)
       (:y 2)
       (:w 66)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "sound") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "sound")
       (:x 229)
       (:y 509)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "mem") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "mem")
       (:x 489)
       (:y 512)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "list_activation_labels")
         (:doc "")))
       (:group-id nil)
       (:name "list_activation_labels")
       (:x 545)
       (:y 6)
       (:w 141)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "labels") (:index 3) (:doc "")))
       (:group-id nil)
       (:name "labels")
       (:x 594)
       (:y 507)
       (:w 53)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "extension_audio_files")
         (:doc "")))
       (:group-id nil)
       (:name "extension_audio_files")
       (:x 717)
       (:y 2)
       (:w 147)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "function_process_label")
         (:doc "")))
       (:group-id nil)
       (:name "function_process_label")
       (:x 956)
       (:y 38)
       (:w 155)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name "TEXTBUFFER")
       (:x 284)
       (:y 115)
       (:w 148)
       (:h 82)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params (:read-mode :lines-cols))
       (:value
        (:object
         (:class textbuffer)
         (:slots ((:contents nil)))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 7))
      (:box
       (:type :object)
       (:reference sound)
       (:group-id nil)
       (:name nil)
       (:x 114)
       (:y 312)
       (:w 300)
       (:h 71)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value :choose-file)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "markers")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "access-from-file")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "markers") (:reactive nil))
        (:output (:name "access-from-file") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class sound)
         (:slots
          ((:onset 0)
           (:duration 0)
           (:n-samples nil)
           (:n-channels nil)
           (:sample-rate nil)
           (:smpl-type :float)
           (:sample-size 16)))
         (:add-slots
          ((:markers nil)
           (:gain 1.0)
           (:access-from-file nil)
           (:file-pathname nil)))))
       (:id 8))
      (:box
       (:type :function)
       (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
       (:group-id nil)
       (:name "om-make-pathname")
       (:x 93)
       (:y 205)
       (:w 145)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :key)
         (:name "directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "name")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "type")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference pathname-name)
       (:group-id nil)
       (:name "pathname-name")
       (:x 97)
       (:y 119)
       (:w 125)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:comment
       (:x 21)
       (:y 324)
       (:w 63)
       (:h 50)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "le même nom mais en .wav")
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-markers")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines processed_labels)"
           "  (loop for i from 0 to (- (length lines) 1)"
           "        collect"
           "         (list"
           "          (sec->ms (first (nth i lines)))"
           "          ;(first (nth i lines))"
           "          (write-to-string (nth i processed_labels))"
           "          )         "
           "         )"
           "  )"
           ""
           ";(lambda (lines list_activation_labels)"
           ";  (loop for line in lines collect"
           ";        (list"
           ";         (sec->ms (first line))"
           ";         (number-to-string (round (fourth line)))"
           ";         )"
           ";        ))"))))
       (:group-id nil)
       (:name "make-markers")
       (:x 271)
       (:y 279)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 213)
       (:y 54)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 13))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 357)
       (:y 461)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 14))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 235)
       (:y 400)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 15))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-memory")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines n processed_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        ;collect (write-to-string (list n (first line) (second line)))"
           "        into mem-segments"
           "        finally return (list mem-segments processed_labels))"
           ")"
           "                                 "
           "#|"
           "(lambda (lines n  list_activation_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        into mem-segments"
           "        ;collect (write-to-string (round (/ (fourth line) div_intens)))"
           "        ;collect (write-to-string (list (round (/ (fourth line) div_intens))))"
           "        collect (write-to-string"
           "                 (list "
           "                 ; duree"
           "                  (if (> div_dur 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) div_dur)) -1)"
           "                 ;pitch"
           "                  (if (= mod_12 1) "
           "                      (if (= (round (third line)) 0) -1 (mod (round (third line))12))"
           "                    (if (< mod_12 0) -1 (round (third line)))"
           "                    )"
           "                 ;inten"
           "                  (if (> div_intens 0) (round (/ (fourth line) div_intens)) -1)"
           "                 ;voice casting"
           "                  (if (> vc 0) (round (/ (fifth line) vc)) -1)"
           "                 ;nmf"
           "                  (if (> nmf 0) (round (/ (sixth line) nmf)) -1)"
           "                 ))"
           "        into labels"
           "        finally return (list mem-segments labels)))"
           "|#"
           "                                 "))))
       (:group-id nil)
       (:name "make-memory")
       (:x 461)
       (:y 281)
       (:w 200)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 485)
       (:y 387)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 17))
      (:box
       (:type :special)
       (:reference loop-for)
       (:group-id nil)
       (:name "for")
       (:x 508)
       (:y 92)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "from")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "to")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 18))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 375)
       (:y 51)
       (:w 71)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 502)
       (:y 57)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 20))
      (:comment
       (:x 556)
       (:y 102)
       (:w 47)
       (:h 22)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "#sound")
       (:id 21))
      (:box
       (:type :function)
       (:reference split)
       (:group-id nil)
       (:name "split")
       (:x 554)
       (:y 335)
       (:w 59)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 22))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 592)
       (:y 388)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 23))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 486)
       (:y 468)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 593)
       (:y 462)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 25))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "select-labels")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines list_activation_labels)"
           "  (loop for line in lines "
           "        collect (append "
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
           "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
           "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
           "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
           "                       collect (nth (+ i 1) line)"
           "                       )"
           "                 )"
           "        into labels"
           "        finally return labels"
           "        )"
           "  )"
           ""))))
       (:group-id nil)
       (:name "select-labels")
       (:x 767)
       (:y 243)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST_ACTIVATION_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 26))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 753)
       (:y 294)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value box)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value name)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 27))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "value box")
       (:x 416)
       (:y 277)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value t)
       (:id 28)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 0 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 26 :in 1)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 9 :in 2))
       (:attributes (:color nil :style nil :modif (0 1/3))))
      (:connection (:from (:box 6 :out 0)) (:to (:box 27 :in 0)))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/92))))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 16 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/94))))
      (:connection (:from (:box 7 :out 1)) (:to (:box 26 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 15 :out 1)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 22 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 17 :out 1)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 16 :in 1)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 22 :out 1)) (:to (:box 23 :in 0)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 14 :in 2)))
      (:connection (:from (:box 23 :out 1)) (:to (:box 25 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 27 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 16 :in 2)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 8 :in 2))))))
   (:group-id nil)
   (:name "loop-process-dataset")
   (:x 930)
   (:y 357)
   (:w 150)
   (:h 39)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "lab_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_activation_labels")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "extension_audio_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function_process_label")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "sound") (:reactive nil))
    (:output (:name "mem") (:reactive nil))
    (:output (:name "labels") (:reactive nil)))
   (:id 41))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1027)
   (:y 298)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "wav")
   (:id 42))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 875)
   (:y 398)
   (:w 231)
   (:h 102)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory (:list "(1 3254 5356)"))
       (:labls (:list "(28 -1 0 -1 -1)"))))))
   (:id 43))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-scenarios-with-stretch_1")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (963 660)) (:position (0 23)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "GENERATOR") (:doc "")))
       (:group-id nil)
       (:name "GENERATOR")
       (:x 0)
       (:y 42)
       (:w 104)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "LENGTH") (:doc "")))
       (:group-id nil)
       (:name "LENGTH")
       (:x 361)
       (:y 15)
       (:w 71)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "CONTINUITY-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "CONTINUITY-LIST")
       (:x 197)
       (:y 18)
       (:w 125)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 139)
       (:y 464)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "VOICE-MAX-CONT-MASTER")
         (:doc "")))
       (:group-id nil)
       (:name "VOICE-MAX-CONT-MASTER")
       (:x 424)
       (:y 36)
       (:w 195)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 5)
         (:name "VOICEGENERATOR")
         (:doc "")))
       (:group-id nil)
       (:name "VOICEGENERATOR")
       (:x 561)
       (:y 54)
       (:w 135)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 6) (:name "SOUND_DB") (:doc "")))
       (:group-id nil)
       (:name "SOUND_DB")
       (:x 603)
       (:y 118)
       (:w 89)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 7) (:name "XFADE") (:doc "")))
       (:group-id nil)
       (:name "XFADE")
       (:x 546)
       (:y 131)
       (:w 62)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 8) (:name "RES_DIR") (:doc "")))
       (:group-id nil)
       (:name "RES_DIR")
       (:x 517)
       (:y 15)
       (:w 74)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "list_dur") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "list_dur")
       (:x 478)
       (:y 528)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 9))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "query") (:index 3) (:doc "")))
       (:group-id nil)
       (:name "query")
       (:x 288)
       (:y 527)
       (:w 55)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 10))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 337)
       (:y 88)
       (:w 111)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 92)
       (:y 266)
       (:w 131)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value
        (:list
         "69"
         "67"
         "65"
         "67"
         "64"
         "66"
         "69"
         "65"
         "53"
         "53"
         "46"
         "46"
         "53"
         "51"
         "52"
         "64"
         "66"
         "68"
         "64"
         "64"
         "65"
         "64"
         "59"
         "64"
         "66"
         "68"
         "64"
         "66"
         "66"
         "68"
         "69"
         "68"
         "65"
         "69"
         "67"
         "67"
         "66"
         "67"
         "67"
         "65"
         "-12723"
         "65"
         "65"
         "65"
         "65"
         "67"
         "65"
         "60"
         "65"
         "65"))
       (:id 12))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 57)
       (:y 98)
       (:w 107)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "max_continuity")
       (:id 13))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 367)
       (:y 122)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :function)
       (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
       (:group-id nil)
       (:name "om-print-format")
       (:x 104)
       (:y 375)
       (:w 120)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FORMAT-STRING")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "args")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "prompt")
         (:value "DYCI2")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 7)
       (:y 339)
       (:w 123)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "NEW SCENARIO: ~A")
       (:id 16))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 132)
       (:y 340)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:library "om-dyci2")
       (:type :function)
       (:reference (:symbol "DYCI2QUERY" "DYCI2"))
       (:group-id nil)
       (:name "dyci2query")
       (:x 83)
       (:y 192)
       (:w 96)
       (:h 30)
       (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "QUERY")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:library "om-dyci2")
       (:type :function)
       (:reference (:symbol "DYCI2SETPARAM" "DYCI2"))
       (:group-id nil)
       (:name "dyci2setparam")
       (:x 15)
       (:y 158)
       (:w 116)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PARAMETER")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "VALUE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :function)
       (:reference remove)
       (:group-id nil)
       (:name "remove")
       (:x 74)
       (:y 228)
       (:w 89)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "generate_and_write_variations")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size (889 723)) (:position (0 23)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "len_scen") (:doc "")))
           (:group-id nil)
           (:name "len_scen")
           (:x 653)
           (:y 154)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 147)
           (:y 784)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "cont_scen")
             (:doc "")))
           (:group-id nil)
           (:name "cont_scen")
           (:x 737)
           (:y 158)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "list_dur")
             (:index 2)
             (:doc "")))
           (:group-id nil)
           (:name "list_dur")
           (:x 61)
           (:y 529)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "cont_gen") (:doc "")))
           (:group-id nil)
           (:name "cont_gen")
           (:x 393)
           (:y 41)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "path_output_directory")
             (:doc "")))
           (:group-id nil)
           (:name "path_output_directory")
           (:x 822)
           (:y 311)
           (:w 148)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "xfade") (:doc "")))
           (:group-id nil)
           (:name "xfade")
           (:x 277)
           (:y 343)
           (:w 51)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 6) (:name "query") (:doc "")))
           (:group-id nil)
           (:name "query")
           (:x 305)
           (:y 269)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 7)
             (:name "GENERATOR")
             (:doc "")))
           (:group-id nil)
           (:name "GENERATOR")
           (:x 77)
           (:y 112)
           (:w 98)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 8)
             (:name "snd_database")
             (:doc "")))
           (:group-id nil)
           (:name "snd_database")
           (:x 10)
           (:y 355)
           (:w 104)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "remix")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size (728 709)) (:position (0 23)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "SOUNDS")
                 (:doc "")))
               (:group-id nil)
               (:name "SOUNDS")
               (:x 38)
               (:y 145)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "SEGMENTS")
                 (:doc "")))
               (:group-id nil)
               (:name "SEGMENTS")
               (:x 156)
               (:y 20)
               (:w 89)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "list_dur")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "list_dur")
               (:x 491)
               (:y 651)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "CROSSFADE")
                 (:doc "")))
               (:group-id nil)
               (:name "CROSSFADE")
               (:x 414)
               (:y 68)
               (:w 103)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "out")
                 (:index 2)
                 (:doc "")))
               (:group-id nil)
               (:name "out")
               (:x 207)
               (:y 638)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "outfile")
                 (:doc "")))
               (:group-id nil)
               (:name "outfile")
               (:x 253)
               (:y 509)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 36)
               (:y 600)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 164)
               (:y 78)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 7))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 115)
               (:y 533)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference split)
               (:group-id nil)
               (:name "split")
               (:x 166)
               (:y 160)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "out1") (:reactive nil))
                (:output (:name "out2") (:reactive nil)))
               (:id 9))
              (:box
               (:type :function)
               (:reference om+)
               (:group-id nil)
               (:name "om+")
               (:x 218)
               (:y 269)
               (:w 62)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 131)
               (:y 273)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 11))
              (:box
               (:type :function)
               (:reference nth)
               (:group-id nil)
               (:name "nth")
               (:x 39)
               (:y 267)
               (:w 55)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ORIG-N")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ORIG-LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 12))
              (:box
               (:type :function)
               (:reference read-from-string)
               (:group-id nil)
               (:name "read-from-string")
               (:x 134)
               (:y 125)
               (:w 123)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "STRING")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 13))
              (:box
               (:type :function)
               (:reference 1-)
               (:group-id nil)
               (:name "1-")
               (:x 19)
               (:y 234)
               (:w 49)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 308)
               (:y 243)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 2)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 505)
               (:y 342)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 16))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 478)
               (:y 274)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-processing)
               (:group-id nil)
               (:name "supervp-processing")
               (:x 56)
               (:y 384)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SRC")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PROCESSINGS")
                 (:value "")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "BEGIN")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "END")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "FFTSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSTEP-OVERSAMP")
                 (:value 8)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOW-TYPE")
                 (:value "hanning")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SHAPE-INVARIANT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PRESERVE-TRANSIENT")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NORMALIZE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "OUTFILE")
                 (:value "out.aiff")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-timestretch)
               (:group-id nil)
               (:name "supervp-timestretch")
               (:x 297)
               (:y 335)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 19))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 565)
               (:y 178)
               (:w 46)
               (:h 32)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 20))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 296)
               (:y 216)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 21))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 559)
               (:y 151)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 22))
              (:comment
               (:x 593)
               (:y 124)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "duration event")
               (:id 23))
              (:comment
               (:x 498)
               (:y 122)
               (:w 87)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "target duration")
               (:id 24))
              (:comment
               (:x 613)
               (:y 183)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "coef stretch")
               (:id 25))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 89)
               (:y 314)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 26))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 192)
               (:y 313)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 27))
              (:box
               (:type :function)
               (:reference (:symbol "CONCAT-AUDIOFILES" "DYCI2"))
               (:group-id nil)
               (:name "concat-audiofiles")
               (:x 136)
               (:y 587)
               (:w 128)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FILES")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "crossfade")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "out")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 28))
              (:box
               (:type :function)
               (:reference seq)
               (:group-id nil)
               (:name "seq")
               (:x 289)
               (:y 622)
               (:w 57)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OP")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "op+1") (:reactive nil)))
               (:id 29))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 404)
               (:y 585)
               (:w 78)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 30))
              (:box
               (:type :function)
               (:reference (:symbol "OM-DELETE-FILE" "OM-API"))
               (:group-id nil)
               (:name "om-delete-file")
               (:x 361)
               (:y 529)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NAME")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 31)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 12 :in 1)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 21 :in 0))
               (:attributes (:color nil :style nil :modif (0 0))))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 28 :in 1)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 28 :in 2)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 28 :in 0)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 30 :in 1)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 17 :in 1))
               (:attributes (:color nil :style nil :modif (0 -0.45))))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 17 :in 0))
               (:attributes
                (:color nil :style nil :modif (0 -1683/4277))))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 27 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 26 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 12 :in 0)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 10 :in 1)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 11 :in 1))
               (:attributes (:color nil :style nil :modif (0 -1/20))))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 6 :in 1))
               (:attributes (:color nil :style nil :modif (0 30/233))))
              (:connection
               (:from (:box 16 :out 1))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 22 :in 1))
               (:attributes
                (:color nil :style nil :modif (-221/2622 0))))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 22 :in 0)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 18 :in 1)))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 21 :in 1)))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 19 :in 0))
               (:attributes (:color nil :style nil :modif (0 -1/9))))
              (:connection
               (:from (:box 21 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 26 :out 0))
               (:to (:box 18 :in 2)))
              (:connection
               (:from (:box 27 :out 0))
               (:to (:box 18 :in 3)))
              (:connection
               (:from (:box 28 :out 0))
               (:to (:box 29 :in 0)))
              (:connection
               (:from (:box 29 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 30 :out 0))
               (:to (:box 29 :in 1)))
              (:connection
               (:from (:box 31 :out 0))
               (:to (:box 30 :in 0))))))
           (:group-id nil)
           (:name "remix")
           (:x 60)
           (:y 406)
           (:w 105)
           (:h 81)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOUNDS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEGMENTS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CROSSFADE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "outfile")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "list_dur") (:reactive nil))
            (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 165)
           (:y 200)
           (:w 107)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "max_continuity")
           (:id 11))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "path_generated_sequence")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size (707 565)) (:position (0 181)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "name_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "name_scen")
               (:x 103)
               (:y 34)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "path")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "path")
               (:x 230)
               (:y 507)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "len_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "len_scen")
               (:x 222)
               (:y 34)
               (:w 74)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "cont_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_scen")
               (:x 315)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "idtf_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "idtf_gen")
               (:x 417)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "cont_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_gen")
               (:x 500)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 6)
                 (:name "path_output_directory")
                 (:doc "")))
               (:group-id nil)
               (:name "path_output_directory")
               (:x 602)
               (:y 37)
               (:w 148)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value
                  "/Users/nika/Desktop/OM7/OM-DYCI2_Tests/Results/")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :function)
               (:reference concatenate)
               (:group-id nil)
               (:name "concatenate")
               (:x 19)
               (:y 389)
               (:w 500)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "RESULT-TYPE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".aiff")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".wav")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 17)
               (:y 301)
               (:w 47)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value string)
               (:id 8))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 83)
               (:y 339)
               (:w 54)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "Scen")
               (:id 9))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 158)
               (:y 339)
               (:w 40)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_L")
               (:id 10))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 226)
               (:y 339)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 11))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 289)
               (:y 333)
               (:w 53)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "-Gen")
               (:id 12))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 363)
               (:y 333)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 13))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 203)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 299)
               (:y 110)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 401)
               (:y 174)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 525)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:type :function)
               (:reference pathname)
               (:group-id nil)
               (:name "pathname")
               (:x 398)
               (:y 448)
               (:w 91)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "P")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 7 :in 3)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 7 :in 1)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 7 :in 2)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 7 :in 4)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 7 :in 6)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 7 :in 8)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 7 :in 10)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 7 :in 5)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 7 :in 7)))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 7 :in 9)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 7 :in 11)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 1 :in 0))))))
           (:group-id nil)
           (:name "path_generated_sequence")
           (:x 599)
           (:y 520)
           (:w 200)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "name_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "len_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "idtf_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "path_output_directory")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "path") (:reactive nil)))
           (:id 12))
          (:box
           (:type :function)
           (:reference format)
           (:group-id nil)
           (:name "format")
           (:x 574)
           (:y 277)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "DESTINATION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTROL-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 582)
           (:y 233)
           (:w 73)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "[L~DC~D]")
           (:id 14))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 906)
           (:y 627)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 848)
           (:y 555)
           (:w 102)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "ITERATION #~D")
           (:id 16))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 934)
           (:y 595)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 318)
           (:y 647)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 247)
           (:y 615)
           (:w 100)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "OUTPUT ~A")
           (:id 19))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 347)
           (:y 580)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "filter-output")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (output) "
               "  (if "
               "      (and (> (length output) 0) (nth 0 output)) "
               "      output "
               "    ;(if "
               "     ;   (and (> (length output) 0) (nth 1 output))"
               "        ;(list \"(1 0 200)\" \"(1 301 600)\")"
               "    (loop for i from 0 to 5 collect \"(1 0 100)\")"
               "      ;)"
               "    )"
               "  )"))))
           (:group-id nil)
           (:name "filter-output")
           (:x 156)
           (:y 316)
           (:w 98)
           (:h 28)
           (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "OUTPUT")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 21))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 119)
           (:y 351)
           (:w 78)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 22))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 524)
           (:y 638)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 23))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 437)
           (:y 605)
           (:w 120)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "original output ~A")
           (:id 24))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 553)
           (:y 579)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 25))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2SETPARAM" "DYCI2"))
           (:group-id nil)
           (:name "dyci2setparam")
           (:x 52)
           (:y 239)
           (:w 116)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PARAMETER")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "VALUE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 26))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2QUERY" "DYCI2"))
           (:group-id nil)
           (:name "dyci2query")
           (:x 157)
           (:y 276)
           (:w 96)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "QUERY")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 27))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 699)
           (:y 468)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 28))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 249)
           (:y 755)
           (:w 133)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 29)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 13 :in 2)))
          (:connection (:from (:box 0 :out 0)) (:to (:box 12 :in 1)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 13 :in 3)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 12 :in 2)))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 26 :in 2))
           (:attributes (:color nil :style nil :modif (0 -4/83))))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 12 :in 4))
           (:attributes (:color nil :style nil :modif (0 -1/3))))
          (:connection (:from (:box 5 :out 0)) (:to (:box 12 :in 5)))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 10 :in 2))
           (:attributes
            (:color nil :style nil :modif (0 -0.09545457))))
          (:connection (:from (:box 7 :out 0)) (:to (:box 27 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 26 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
          (:connection
           (:from (:box 10 :out 0))
           (:to (:box 3 :in 0))
           (:attributes (:color nil :style nil :modif (0 -41/12374))))
          (:connection (:from (:box 10 :out 1)) (:to (:box 29 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 26 :in 1)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 10 :in 3)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 29 :in 3)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 15 :in 1)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 29 :in 1)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 0)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 1)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 22 :in 1)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 25 :in 0)))
          (:connection
           (:from (:box 22 :out 0))
           (:to (:box 10 :in 1))
           (:attributes (:color nil :style nil :modif (0 -3/16))))
          (:connection
           (:from (:box 22 :out 0))
           (:to (:box 20 :in 0))
           (:attributes (:color nil :style nil :modif (0 -79/209))))
          (:connection (:from (:box 23 :out 0)) (:to (:box 29 :in 2)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 23 :in 0)))
          (:connection (:from (:box 25 :out 0)) (:to (:box 23 :in 1)))
          (:connection (:from (:box 26 :out 0)) (:to (:box 27 :in 0)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 28 :out 0)) (:to (:box 12 :in 3)))
          (:connection
           (:from (:box 28 :out 0))
           (:to (:box 17 :in 0))
           (:attributes (:color nil :style nil :modif (0 -36/107))))
          (:connection
           (:from (:box 29 :out 0))
           (:to (:box 1 :in 0))))))
       (:group-id nil)
       (:name "generate_and_write_variations")
       (:x 359)
       (:y 327)
       (:w 202)
       (:h 91)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "len_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_gen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "path_output_directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "xfade")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "query")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GENERATOR")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "snd_database")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "list_dur") (:reactive nil)))
       (:id 21)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 11 :in 0)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 19 :in 2))
       (:attributes (:color nil :style nil :modif (0 7/27))))
      (:connection (:from (:box 2 :out 0)) (:to (:box 21 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 21 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 21 :in 6)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 21 :in 7)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 21 :in 4)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 21 :in 3)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 17 :in 0)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 21 :in 5))
       (:attributes (:color nil :style nil :modif (-3/337 0))))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 10 :in 0))
       (:attributes (:color nil :style nil :modif (0 -83/241))))
      (:connection (:from (:box 13 :out 0)) (:to (:box 19 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 21 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 15 :in 1)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 20 :in 1)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 18 :in 0))
       (:attributes (:color nil :style nil :modif (0 29/105))))
      (:connection (:from (:box 20 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 21 :out 1)) (:to (:box 9 :in 0))))))
   (:group-id nil)
   (:name "loop-scenarios-with-stretch_1")
   (:x 773)
   (:y 723)
   (:w 200)
   (:h 30)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "GENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LENGTH")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTINUITY-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE-MAX-CONT-MASTER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICEGENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND_DB")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "XFADE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RES_DIR")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "list_dur") (:reactive nil))
    (:output (:name "query") (:reactive nil)))
   (:id 44))
  (:box
   (:type :function)
   (:reference car)
   (:group-id nil)
   (:name "car")
   (:x 833)
   (:y 693)
   (:w 55)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "X")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 45))
  (:box
   (:type :function)
   (:reference cdr)
   (:group-id nil)
   (:name "cdr")
   (:x 591)
   (:y 760)
   (:w 55)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "X")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 46))
  (:box
   (:type :function)
   (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
   (:group-id nil)
   (:name "om-make-pathname")
   (:x 1473)
   (:y 466)
   (:w 145)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :key)
     (:name "directory")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "name") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "type") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 47))
  (:box
   (:type :function)
   (:reference pathname-name)
   (:group-id nil)
   (:name "pathname-name")
   (:x 1451)
   (:y 379)
   (:w 125)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "P")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 48))
  (:box
   (:type :function)
   (:reference pathname-type)
   (:group-id nil)
   (:name "pathname-type")
   (:x 1582)
   (:y 378)
   (:w 118)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "P")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 49))
  (:comment
   (:x 160)
   (:y 103)
   (:w 492)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "/!\\ om7-beta/preferences/files and folders/ if output file exists --> auto-rename")
   (:id 50))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1285)
   (:y 193)
   (:w 110)
   (:h 31)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "4_scen")
   (:id 51))
  (:box
   (:type :function)
   (:reference reverse)
   (:group-id nil)
   (:name "reverse")
   (:x 1523)
   (:y 272)
   (:w 78)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 52))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "function_process_label")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (e list_activation_labels) "
       "  (let ("
       "        (div_dur (nth 0 list_activation_labels))"
       "        (mod_12 (nth 1 list_activation_labels))"
       "        (div_intens  (nth 2 list_activation_labels))"
       "        (vc (nth 3 list_activation_labels))"
       "        (nmf (nth 4 list_activation_labels))"
       "        (query_dur (nth 0 e))"
       "        (query_pitch (nth 1 e))"
       "        (query_intens  (nth 2 e))"
       "        (query_vc (nth 3 e))"
       "        (query_nmf (nth 4 e))"
       "        )"
       "    (write-to-string"
       "     (list "
       "      ;duration label"
       "      (if (and (> div_dur 0) (> query_dur -1))"
       "          (round (/ query_dur div_dur)) "
       "        -1)"
       "      ;pitch label"
       "     (if (and (> mod_12 0) (> query_pitch -1))"
       "         (if (= mod_12 2) "
       "             (if (= (round query_pitch) 0) -1 (mod (round query_pitch)12))"
       "           (round query_pitch))"
       "       -1)"
       "      ;intensity label"
       "      (if (and (> div_intens 0)  (> query_intens -1))"
       "          (round (/ (/ query_intens 3) div_intens)) "
       "        -1)"
       "      ;voice casting label"
       "      (if (and (> vc 0)  (> query_vc -1)) "
       "          (round (/ query_vc vc)) "
       "        -1)"
       "      ;nmf label"
       "      (if (and (> nmf 0)  (> query_nmf -1)) "
       "          (round (/ query_nmf nmf)) "
       "        -1)"
       "      )"
       "     )"
       "    ))"))))
   (:group-id nil)
   (:name "function_process_label")
   (:x 465)
   (:y 287)
   (:w 161)
   (:h 28)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.7890212535858154D0
       0.8168872594833374D0
       0.6561802625656128D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input (:type :standard) (:name "E") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST_ACTIVATION_LABELS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 53))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 671)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 2 10 0 0))
   (:id 54))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 950)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 2 20 0 0))
   (:id 55))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 924)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 2 10 0 0))
   (:id 56))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 898)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 2 5 0 0))
   (:id 57))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 845)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 1 10 0 0))
   (:id 58))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 872)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 1 15 0 0))
   (:id 59))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 818)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 1 5 0 0))
   (:id 60))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 645)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 2 5 0 0))
   (:id 61))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 696)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 2 20 0 0))
   (:id 62))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 5)
   (:y 596)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 1 10 0 0))
   (:id 63))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 570)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 1 5 0 0))
   (:id 64))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 621)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 1 20 0 0))
   (:id 65))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 352)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 1 10 0 0))
   (:id 66))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 326)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 1 5 0 0))
   (:id 67))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 377)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 1 15 0 0))
   (:id 68))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 0)
   (:y 430)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 2 10 0 0))
   (:id 69))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 404)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 2 5 0 0))
   (:id 70))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 455)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 2 20 0 0))
   (:id 71))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 112)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 1 10 0 0))
   (:id 72))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 88)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 1 5 0 0))
   (:id 73))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 137)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 1 15 0 0))
   (:id 74))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 191)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 2 10 0 0))
   (:id 75))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 165)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 2 5 0 0))
   (:id 76))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 216)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 2 20 0 0))
   (:id 77))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "mem-directory")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (idx) "
       "    (string+ (write-to-string idx) \"_mem\") "
       "    )"
       "  "))))
   (:group-id nil)
   (:name "mem-directory")
   (:x 570)
   (:y 155)
   (:w 115)
   (:h 29)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDX")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 78))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 215)
   (:y 120)
   (:w 40)
   (:h 36)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 79))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "mem-directory")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (idx) "
       "    (string+ (write-to-string idx) \"_scen\") "
       "    )"
       "  "))))
   (:group-id nil)
   (:name "mem-directory")
   (:x 1115)
   (:y 150)
   (:w 115)
   (:h 29)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDX")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 80))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 765)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 0 10 0 0))
   (:id 81))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 792)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 0 15 0 0))
   (:id 82))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 738)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 0 5 0 0))
   (:id 83))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 37)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 0 10 0 0))
   (:id 84))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 5)
   (:y 11)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 0 5 0 0))
   (:id 85))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 62)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 0 15 0 0))
   (:id 86))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 276)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 0 10 0 0))
   (:id 87))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 3)
   (:y 250)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 0 5 0 0))
   (:id 88))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 3)
   (:y 301)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 0 15 0 0))
   (:id 89))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 5)
   (:y 520)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 0 10 0 0))
   (:id 90))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 494)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 0 5 0 0))
   (:id 91))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 545)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 0 20 0 0))
   (:id 92))
  (:comment
   (:x 746)
   (:y 856)
   (:w 336)
   (:h 64)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Yellow boxes: generation parameters
Blue boxes: other parameters (titles, crossfades, etc.)
Green boxes: for advanced users
Red boxes: run (selection then « v »)")
   (:id 93)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 8 :in 1))
   (:attributes (:color nil :style nil :modif (0 40/99))))
  (:connection (:from (:box 0 :out 0)) (:to (:box 44 :in 1)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 8 :in 6)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 44 :in 6)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 8 :in 2))
   (:attributes (:color nil :style nil :modif (0 145/374))))
  (:connection (:from (:box 5 :out 0)) (:to (:box 44 :in 2)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 46 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 45 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 16 :in 1)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 16 :in 2)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 38 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 10 :in 1)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 10 :in 4))
   (:attributes (:color nil :style nil :modif (0 67/336))))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 14 :in 0))
   (:attributes (:color nil :style nil :modif (0 -0.40283018))))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 12 :in 0))
   (:attributes (:color nil :style nil :modif (0 11120/28987))))
  (:connection (:from (:box 13 :out 0)) (:to (:box 48 :in 0)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 49 :in 0)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 9 :in 0)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 41 :in 0))
   (:attributes (:color nil :style nil :modif (0 -2/33))))
  (:connection (:from (:box 16 :out 0)) (:to (:box 44 :in 0)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 10 :in 3))
   (:attributes (:color nil :style nil :modif (0 -55/207))))
  (:connection (:from (:box 18 :out 0)) (:to (:box 19 :in 0)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 9 :in 1))
   (:attributes (:color nil :style nil :modif (0 0.41721314))))
  (:connection (:from (:box 18 :out 0)) (:to (:box 22 :in 1)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 27 :in 1))
   (:attributes (:color nil :style nil :modif (0 1/5))))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 41 :in 1))
   (:attributes (:color nil :style nil :modif (0 3/10))))
  (:connection (:from (:box 18 :out 0)) (:to (:box 53 :in 1)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 17 :in 2)))
  (:connection (:from (:box 19 :out 1)) (:to (:box 17 :in 3)))
  (:connection (:from (:box 19 :out 2)) (:to (:box 17 :in 4)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 10 :in 2)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 27 :in 3))
   (:attributes (:color nil :style nil :modif (0 2/27))))
  (:connection (:from (:box 24 :out 0)) (:to (:box 27 :in 0)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 24 :in 1)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 24 :in 0)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 47 :in 0)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 8 :in 5)))
  (:connection (:from (:box 27 :out 1)) (:to (:box 30 :in 1)))
  (:connection (:from (:box 27 :out 2)) (:to (:box 30 :in 2)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 26 :in 1)))
  (:connection
   (:from (:box 28 :out 0))
   (:to (:box 10 :in 5))
   (:attributes (:color nil :style nil :modif (0 0.44790366))))
  (:connection
   (:from (:box 29 :out 0))
   (:to (:box 27 :in 2))
   (:attributes (:color nil :style nil :modif (0 5/19))))
  (:connection (:from (:box 30 :out 0)) (:to (:box 8 :in 4)))
  (:connection
   (:from (:box 31 :out 0))
   (:to (:box 17 :in 1))
   (:attributes (:color nil :style nil :modif (0 1/12))))
  (:connection (:from (:box 33 :out 0)) (:to (:box 52 :in 0)))
  (:connection
   (:from (:box 34 :out 0))
   (:to (:box 33 :in 1))
   (:attributes (:color nil :style nil :modif (0 19/100))))
  (:connection (:from (:box 35 :out 0)) (:to (:box 33 :in 0)))
  (:connection (:from (:box 37 :out 0)) (:to (:box 44 :in 7)))
  (:connection
   (:from (:box 37 :out 0))
   (:to (:box 8 :in 7))
   (:attributes (:color nil :style nil :modif (0 -2/13))))
  (:connection (:from (:box 38 :out 0)) (:to (:box 37 :in 0)))
  (:connection
   (:from (:box 39 :out 0))
   (:to (:box 38 :in 0))
   (:attributes (:color nil :style nil :modif (0 0.41666666))))
  (:connection
   (:from (:box 39 :out 0))
   (:to (:box 35 :in 0))
   (:attributes (:color nil :style nil :modif (0 4/35))))
  (:connection
   (:from (:box 39 :out 0))
   (:to (:box 26 :in 0))
   (:attributes (:color nil :style nil :modif (0 1/33))))
  (:connection
   (:from (:box 41 :out 0))
   (:to (:box 44 :in 5))
   (:attributes (:color nil :style nil :modif (0 84/337))))
  (:connection (:from (:box 41 :out 1)) (:to (:box 43 :in 1)))
  (:connection (:from (:box 41 :out 2)) (:to (:box 43 :in 2)))
  (:connection
   (:from (:box 42 :out 0))
   (:to (:box 41 :in 2))
   (:attributes (:color nil :style nil :modif (0 5/19))))
  (:connection (:from (:box 43 :out 0)) (:to (:box 44 :in 4)))
  (:connection (:from (:box 44 :out 1)) (:to (:box 8 :in 8)))
  (:connection (:from (:box 44 :out 2)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 45 :out 0)) (:to (:box 44 :in 3)))
  (:connection (:from (:box 46 :out 0)) (:to (:box 8 :in 3)))
  (:connection (:from (:box 48 :out 0)) (:to (:box 47 :in 1)))
  (:connection (:from (:box 49 :out 0)) (:to (:box 47 :in 2)))
  (:connection (:from (:box 51 :out 0)) (:to (:box 35 :in 1)))
  (:connection (:from (:box 52 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 53 :out 0)) (:to (:box 9 :in 2)))
  (:connection (:from (:box 53 :out 0)) (:to (:box 41 :in 3)))
  (:connection (:from (:box 78 :out 0)) (:to (:box 28 :in 0)))
  (:connection
   (:from (:box 79 :out 0))
   (:to (:box 78 :in 0))
   (:attributes (:color nil :style nil :modif (0 13/36))))
  (:connection (:from (:box 79 :out 0)) (:to (:box 80 :in 0)))
  (:connection (:from (:box 80 :out 0)) (:to (:box 51 :in 0)))
  (:connection (:from (:box 89 :out 0)) (:to (:box 18 :in 0)))))