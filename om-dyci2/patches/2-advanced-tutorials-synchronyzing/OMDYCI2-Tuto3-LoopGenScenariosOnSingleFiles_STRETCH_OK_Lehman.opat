
(:patch
 (:name
  "OMDYCI2-Tuto3-LoopGenScenariosOnSingleFiles_STRETCH_OK_Lehman")
 (:doc "")
 (:info
  (:created "2018/10/12 13:57:27")
  (:modified "2021/07/12 19:11:06")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1634 508)) (:position (46 23)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1098)
   (:y 763)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.38799214363098145D0
       0.4924229383468628D0
       0.5947297811508179D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 80)
   (:id 0))
  (:comment
   (:x 485)
   (:y 79)
   (:w 244)
   (:h 76)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "4a) Select an \"audio corpus\" (audio files + corresponding markers and labels in text annotations files)")
   (:id 1))
  (:comment
   (:x 38)
   (:y 413)
   (:w 222)
   (:h 110)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "5) Set maximum continuities for the output audio files (Loop 2 nested in Loop 1)
1st value for the \"scenario track\", queue of the list for the other tracks")
   (:id 2))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 49)
   (:y 536)
   (:w 175)
   (:h 89)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 300 200 100 100 10 8))
   (:id 3))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 487)
   (:y 150)
   (:w 177)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "Textures_and_Pads")
   (:id 4))
  (:comment
   (:x 217)
   (:y 147)
   (:w 284)
   (:h 59)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "1) Select the active dimensions, here (duration pitch intensity),
and set parameters to process the labels")
   (:id 5))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 281)
   (:y 241)
   (:w 109)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 300 2 0 0 0))
   (:id 6))
  (:comment
   (:x 1073)
   (:y 744)
   (:w 112)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Crossfade (ms)")
   (:id 7))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "function_process_label")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (588 652)) (:position (156 358)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (e list_activation_labels) "
       "  (let ("
       "        (div_dur (nth 0 list_activation_labels))"
       "        (mod_12 (nth 1 list_activation_labels))"
       "        (div_intens  (nth 2 list_activation_labels))"
       "        (vc (nth 3 list_activation_labels))"
       "        (nmf (nth 4 list_activation_labels))"
       "        (query_dur (nth 0 e))"
       "        (query_pitch (nth 1 e))"
       "        (query_intens  (nth 2 e))"
       "        (query_vc (nth 3 e))"
       "        (query_nmf (nth 4 e))"
       "        )"
       "    (write-to-string"
       "     (list "
       "      ;duration label"
       "      (if (and (> div_dur 0) (> query_dur -1))"
       "          (round (/ query_dur div_dur)) "
       "        -1)"
       "      ;pitch label"
       "     (if (and (> mod_12 0) (> query_pitch -1))"
       "         (if (= mod_12 2) "
       "             (if (= (round query_pitch) 0) -1 (mod (round query_pitch)12))"
       "           (round query_pitch))"
       "       -1)"
       "      ;intensity label"
       "      (if (and (> div_intens 0)  (> query_intens -1))"
       "          (round (/ query_intens div_intens)) "
       "        -1)"
       "      ;voice casting label"
       "      (if (and (> vc 0)  (> query_vc -1)) "
       "          (round (/ query_vc vc)) "
       "        -1)"
       "      ;nmf label"
       "      (if (and (> nmf 0)  (> query_nmf -1)) "
       "          (round (/ query_nmf nmf)) "
       "        -1)"
       "      )"
       "     )"
       "    ))"))))
   (:group-id nil)
   (:name "function_process_label")
   (:x 409)
   (:y 281)
   (:w 161)
   (:h 32)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.36772552132606507D0
       0.6007713079452515D0
       0.018747687339782715D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input (:type :standard) (:name "E") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST_ACTIVATION_LABELS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:comment
   (:x 43)
   (:y 25)
   (:w 492)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "/!\\ preferences/files and folders/ if output file exists --> auto-rename")
   (:id 9))
  (:comment
   (:x 1333)
   (:y 847)
   (:w 320)
   (:h 64)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Yellow boxes: generation parameters
Blue boxes: other parameters (titles, crossfades ,etc.)
Green boxes: for advanced users
Red boxes: run (selection then « v »)")
   (:id 10))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 513)
   (:y 517)
   (:w 231)
   (:h 102)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border (:number-or-nil (:number 4.0) (:t-or-nil t)))
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align :center)
   (:display :text)
   (:showname t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(1 1412 2202)"
         "(1 2202 2780)"
         "(1 2780 3068)"
         "(1 3068 4430)"
         "(1 4430 8108)"
         "(1 8108 16720)"
         "(1 16720 17010)"
         "(1 17010 18852)"
         "(1 18852 19570)"
         "(1 19570 20312)"
         "(1 20312 20778)"
         "(1 20778 21162)"
         "(1 21162 21466)"
         "(1 21466 23244)"
         "(1 23244 24204)"
         "(1 24204 24414)"
         "(1 24414 24752)"
         "(1 24752 25716)"
         "(1 25716 26314)"
         "(1 26314 26654)"
         "(1 26654 27280)"
         "(1 27280 27840)"
         "(1 27840 31520)"
         "(1 31520 35708)"
         "(1 35708 36686)"
         "(1 36686 37304)"
         "(1 37304 37714)"
         "(1 37714 38820)"
         "(1 38820 39538)"
         "(1 39538 40882)"
         "(1 40882 46232)"
         "(1 46232 48220)"
         "(1 48220 48624)"
         "(1 48624 48988)"
         "(1 48988 50910)"
         "(1 50910 51182)"
         "(1 51182 51532)"
         "(1 51532 54098)"
         "(1 54098 59530)"
         "(1 59530 59810)"
         "(1 59810 60640)"
         "(1 60640 60896)"
         "(1 60896 63972)"
         "(1 63972 68596)"
         "(1 68596 71262)"
         "(1 71262 71846)"
         "(1 71846 72254)"
         "(1 72254 72578)"
         "(1 72578 72996)"
         "(1 72996 73212)"
         "(1 73212 74584)"
         "(1 74584 75894)"
         "(1 75894 76644)"
         "(1 76644 77350)"
         "(1 77350 78530)"
         "(1 78530 79370)"
         "(1 79370 80108)"
         "(1 80108 81236)"
         "(1 81236 81674)"
         "(1 81674 81912)"
         "(1 81912 82322)"
         "(1 82322 82692)"
         "(1 82692 83390)"
         "(1 83390 84058)"
         "(1 84058 85800)"
         "(1 85800 86052)"
         "(1 86052 86716)"
         "(1 86716 87268)"
         "(1 87268 87918)"
         "(1 87918 93638)"
         "(1 93638 94764)"
         "(1 94764 95270)"
         "(1 95270 96850)"
         "(1 96850 98550)"
         "(1 98550 99912)"
         "(1 99912 100266)"
         "(1 100266 101822)"
         "(1 101822 104762)"
         "(1 104762 105842)"
         "(1 105842 148284)"
         "(1 148284 149650)"
         "(1 149650 149936)"
         "(1 149936 151296)"
         "(1 151296 151886)"
         "(1 151886 154986)"
         "(1 154986 165732)"
         "(1 165732 166436)"
         "(1 166436 167172)"
         "(1 167172 167646)"
         "(1 167646 168032)"
         "(1 168032 168302)"
         "(1 168302 170112)"
         "(1 170112 171060)"
         "(1 171060 171286)"
         "(1 171286 172142)"
         "(1 172142 172596)"
         "(1 172596 173192)"
         "(1 173192 173530)"
         "(1 173530 174132)"
         "(1 174132 178550)"
         "(1 178550 183582)"
         "(1 183582 184576)"
         "(1 184576 185074)"
         "(1 185074 186402)"
         "(1 186402 187750)"
         "(1 187750 193104)"
         "(1 193104 195480)"
         "(1 195480 195858)"
         "(1 195858 197784)"
         "(1 197784 198054)"
         "(1 198054 198400)"
         "(1 198400 200966)"
         "(1 200966 201570)"
         "(1 201570 202404)"
         "(1 202404 203666)"
         "(1 203666 206402)"
         "(1 206402 206684)"
         "(1 206684 207512)"
         "(1 207512 207746)"
         "(1 207746 215452)"
         "(1 215452 216798)"
         "(1 216798 218140)"
         "(1 218140 218866)"
         "(1 218866 219122)"
         "(1 219122 219458)"
         "(1 219458 219866)"
         "(1 219866 220582)"
         "(1 220582 220972)"
         "(1 220972 221646)"
         "(1 221646 222766)"
         "(1 222766 223514)"
         "(1 223514 225398)"
         "(1 225398 226246)"
         "(1 226246 228104)"
         "(1 228104 228548)"
         "(1 228548 228792)"
         "(1 228792 229198)"
         "(1 229198 230268)"
         "(1 230268 230938)"
         "(1 230938 232432)"
         "(1 232432 232854)"
         "(1 232854 233586)"
         "(1 233586 234136)"
         "(1 234136 234784)"
         "(1 234784 236170)"
         "(1 236170 240500)"
         "(1 240500 241640)"
         "(1 241640 242134)"
         "(1 242134 242894)"
         "(1 242894 245408)"
         "(1 245408 246762)"
         "(1 246762 247138)"
         "(1 247138 247378)"
         "(1 247378 248724)"
         "(1 248724 251642)"
         "(1 251642 252508)"
         "(1 252508 252718)"
         "(1 252718 283862)"
         "(1 283862 285228)"
         "(1 285228 285514)"
         "(1 285514 286892)"
         "(1 286892 290624)"
         "(1 290624 299190)"
         "(1 299190 299450)"
         "(1 299450 301282)"
         "(1 301282 302008)"
         "(1 302008 302752)"
         "(1 302752 303222)"
         "(1 303222 303610)"
         "(1 303610 303864)"
         "(1 303864 306218)"
         "(1 306218 306856)"
         "(1 306856 308168)"
         "(1 308168 308760)"
         "(1 308760 309098)"
         "(1 309098 309724)"
         "(1 309724 313972)"
         "(1 313972 316268)"
         "(1 316268 318144)"
         "(1 318144 319132)"
         "(1 319132 319982)"
         "(1 319982 321026)"
         "(1 321026 321918)"
         "(1 321918 323168)"
         "(1 323168 323506)"
         "(1 323506 328680)"
         "(1 328680 330672)"
         "(1 330672 331062)"
         "(1 331062 333296)"
         "(1 333296 333974)"
         "(1 333974 336546)"
         "(1 336546 336746)"
         "(1 336746 341968)"
         "(1 341968 342240)"
         "(1 342240 342966)"
         "(1 342966 343338)"
         "(1 343338 343572)"
         "(1 343572 346422)"
         "(1 346422 351044)"
         "(1 351044 353892)"
         "(1 353892 354440)"
         "(1 354440 354700)"
         "(1 354700 355026)"
         "(1 355026 355442)"
         "(1 355442 355642)"
         "(1 355642 356144)"
         "(1 356144 358342)"
         "(1 358342 359080)"
         "(1 359080 359800)"
         "(1 359800 360964)"
         "(1 360964 361800)"
         "(1 361800 362552)"
         "(1 362552 363682)"
         "(1 363682 364106)"
         "(1 364106 364770)"
         "(1 364770 365844)"
         "(1 365844 366490)"
         "(1 366490 367990)"
         "(1 367990 368356)"
         "(1 368356 368630)"
         "(1 368630 369160)"
         "(1 369160 369698)"
         "(1 369698 370358)"
         "(1 370358 371732)"
         "(1 371732 373074)"
         "(1 373074 376230)"
         "(1 376230 377208)"
         "(1 377208 377724)"
         "(1 377724 379298)"
         "(1 379298 381002)"
         "(1 381002 382328)"
         "(1 382328 384302)"
         "(1 384302 387208)"
         "(1 387208 388284)"
         "(2 0 714)"
         "(2 714 1078)"
         "(2 1078 1492)"
         "(2 1492 2130)"
         "(2 2130 2542)"
         "(2 2542 3238)"
         "(2 3238 3494)"
         "(2 3494 4038)"
         "(2 4038 4290)"
         "(2 4290 4846)"
         "(2 4846 5200)"
         "(2 5200 5446)"
         "(2 5446 5898)"
         "(2 5898 6106)"
         "(2 6106 6496)"
         "(2 6496 7170)"
         "(2 7170 7496)"
         "(2 7496 7828)"
         "(2 7828 8180)"
         "(2 8180 8456)"
         "(2 8456 8994)"
         "(2 8994 9418)"
         "(2 9418 9882)"
         "(2 9882 11082)"
         "(2 11082 11358)"
         "(2 11358 11632)"
         "(2 11632 11966)"
         "(2 11966 12362)"
         "(2 12362 12750)"
         "(2 12750 13336)"
         "(2 13336 13860)"
         "(2 13860 14132)"
         "(2 14132 14436)"
         "(2 14436 14758)"
         "(2 14758 15068)"
         "(2 15068 16078)"
         "(2 16078 16928)"
         "(2 16928 17742)"
         "(2 17742 19668)"
         "(2 19668 19872)"
         "(2 19872 21112)"
         "(2 21112 21952)"
         "(2 21952 23776)"
         "(2 23776 24006)"
         "(2 24006 24292)"
         "(2 24292 24784)"
         "(2 24784 25530)"
         "(2 25530 28216)"
         "(2 28216 28504)"
         "(2 28504 29094)"
         "(2 29094 29696)"
         "(2 29696 31248)"
         "(2 31248 32134)"
         "(2 32134 33784)"
         "(2 33784 34432)"
         "(2 34432 35536)"
         "(2 35536 38616)"
         "(2 38616 39442)"
         "(2 39442 39804)"
         "(2 39804 40244)"
         "(2 40244 41264)"
         "(2 41264 42076)"
         "(2 42076 42296)"
         "(2 42296 42568)"
         "(2 42568 43190)"
         "(2 43190 43572)"
         "(2 43572 43792)"
         "(2 43792 44632)"
         "(2 44632 45226)"
         "(2 45226 46282)"
         "(2 46282 48540)"
         "(2 48540 51874)"
         "(2 51874 55674)"
         "(2 55674 56556)"
         "(2 56556 57698)"
         "(2 57698 58120)"
         "(2 58120 58498)"
         "(2 58498 58880)"
         "(2 58880 59338)"
         "(2 59338 59684)"
         "(2 59684 60228)"
         "(2 60228 60750)"
         "(2 60750 61920)"
         "(2 61920 62338)"
         "(2 62338 62708)"
         "(2 62708 63132)"
         "(2 63132 63902)"
         "(2 63902 64444)"
         "(2 64444 64986)"
         "(2 64986 66128)"
         "(2 66128 66928)"
         "(2 66928 67350)"
         "(2 67350 67766)"
         "(2 67766 68120)"
         "(2 68120 68692)"
         "(2 68692 68958)"
         "(2 68958 69554)"
         "(2 69554 70082)"
         "(2 70082 70670)"
         "(2 70670 70990)"
         "(2 70990 71342)"
         "(2 71342 71734)"
         "(2 71734 71956)"
         "(2 71956 72232)"
         "(2 72232 75142)"
         "(2 75142 75366)"
         "(2 75366 76428)"
         "(2 76428 76780)"
         "(2 76780 77176)"
         "(2 77176 79672)"
         "(2 79672 79894)"
         "(2 79894 80178)"
         "(2 80178 80566)"
         "(2 80566 80890)"
         "(2 80890 81328)"
         "(2 81328 82288)"
         "(2 82288 82634)"
         "(2 82634 83370)"
         "(2 83370 83918)"
         "(2 83918 84156)"
         "(2 84156 84772)"
         "(2 84772 85186)"
         "(2 85186 85884)"
         "(2 85884 86144)"
         "(2 86144 86340)"
         "(2 86340 86686)"
         "(2 86686 86938)"
         "(2 86938 87490)"
         "(2 87490 87844)"
         "(2 87844 88110)"
         "(2 88110 88560)"
         "(2 88560 88768)"
         "(2 88768 89152)"
         "(2 89152 89804)"
         "(2 89804 90146)"
         "(2 90146 90472)"
         "(2 90472 90824)"
         "(2 90824 91112)"
         "(2 91112 91638)"
         "(2 91638 92100)"
         "(2 92100 92540)"
         "(2 92540 93728)"
         "(2 93728 94012)"
         "(2 94012 94292)"
         "(2 94292 94616)"
         "(2 94616 95058)"
         "(2 95058 95386)"
         "(2 95386 96510)"
         "(2 96510 96786)"
         "(2 96786 97080)"
         "(2 97080 97416)"
         "(2 97416 97724)"
         "(2 97724 98380)"
         "(2 98380 98720)"
         "(2 98720 99582)"
         "(2 99582 99996)"
         "(2 99996 100390)"
         "(2 100390 102042)"
         "(2 102042 102584)"
         "(2 102584 103120)"
         "(2 103120 106394)"
         "(2 106394 106664)"
         "(2 106664 107436)"
         "(2 107436 108154)"
         "(2 108154 110864)"
         "(2 110864 111158)"
         "(2 111158 112352)"
         "(2 112352 112896)"
         "(2 112896 113810)"
         "(2 113810 114790)"
         "(2 114790 116250)"
         "(2 116250 117090)"
         "(2 117090 118216)"
         "(2 118216 118936)"
         "(2 118936 121256)"
         "(2 121256 122090)"
         "(2 122090 122466)"
         "(2 122466 122888)"
         "(2 122888 123912)"
         "(2 123912 124594)"
         "(2 124594 124946)"
         "(2 124946 125208)"
         "(2 125208 125854)"
         "(2 125854 126252)"
         "(2 126252 126540)"
         "(2 126540 127280)"
         "(2 127280 127928)"
         "(2 127928 128910)"
         "(2 128910 131198)"
         "(2 131198 132838)"
         "(2 132838 134522)"
         "(2 134522 138328)"
         "(2 138328 138660)"
         "(2 138660 139196)"
         "(2 139196 140344)"
         "(2 140344 140762)"
         "(2 140762 141140)"
         "(2 141140 141540)"
         "(2 141540 142334)"
         "(2 142334 142882)"
         "(2 142882 143408)"
         "(2 143408 144576)"
         "(2 144576 144990)"
         "(2 144990 145366)"
         "(2 145366 145754)"
         "(2 145754 146180)"
         "(2 146180 146546)"
         "(2 146546 147078)"
         "(2 147078 147618)"
         "(2 147618 148788)"
         "(2 148788 149572)"
         "(2 149572 150004)"
         "(2 150004 150446)"
         "(2 150446 150794)"
         "(2 150794 152724)"
         "(2 152724 153998)"
         "(2 153998 154588)"
         "(2 154588 154888)"
         "(2 154888 158024)"
         "(2 158024 158308)"
         "(2 158308 159118)"
         "(2 159118 159418)"
         "(2 159418 159852)"
         "(2 159852 162330)"
         "(2 162330 162546)"
         "(2 162546 162830)"
         "(2 162830 163190)"
         "(2 163190 163544)"
         "(2 163544 163978)"
         "(2 163978 164942)"
         "(2 164942 165288)"
         "(2 165288 166012)"
         "(2 166012 166370)"
         "(2 166370 166790)"
         "(2 166790 167430)"
         "(2 167430 167828)"
         "(2 167828 168320)"
         "(2 168320 168536)"
         "(2 168536 168784)"
         "(2 168784 168986)"
         "(2 168986 169298)"
         "(2 169298 169574)"
         "(2 169574 170138)"
         "(2 170138 170482)"
         "(2 170482 170750)"
         "(2 170750 171194)"
         "(2 171194 171408)"
         "(2 171408 171800)"
         "(2 171800 172454)"
         "(2 172454 172784)"
         "(2 172784 173120)"
         "(2 173120 173474)"
         "(2 173474 173744)"
         "(2 173744 174286)"
         "(2 174286 174738)"
         "(2 174738 175186)"
         "(2 175186 176380)"
         "(2 176380 176660)"
         "(2 176660 176950)"
         "(2 176950 177262)"
         "(2 177262 178040)"
         "(2 178040 178696)"
         "(2 178696 179152)"
         "(2 179152 179434)"
         "(2 179434 179710)"
         "(2 179710 180058)"
         "(2 180058 180360)"
         "(2 180360 181018)"
         "(2 181018 181374)"
         "(2 181374 182220)"
         "(2 182220 183042)"
         "(2 183042 184916)"
         "(2 184916 185164)"
         "(2 185164 185412)"
         "(2 185412 186410)"
         "(2 186410 187250)"
         "(2 187250 189068)"
         "(2 189068 189302)"
         "(2 189302 190086)"
         "(2 190086 190326)"
         "(2 190326 193494)"
         "(2 193494 193776)"
         "(2 193776 194382)"
         "(2 194382 194752)"
         "(2 194752 194990)"
         "(2 194990 195534)"
         "(2 195534 197440)"
         "(2 197440 198888)"
         "(2 198888 199728)"
         "(2 199728 200858)"
         "(2 200858 201584)"
         "(2 201584 203938)"
         "(2 203938 204734)"
         "(2 204734 205108)"
         "(2 205108 205538)"
         "(2 205538 207356)"
         "(2 207356 207594)"
         "(2 207594 207870)"
         "(2 207870 208480)"
         "(2 208480 209924)"
         "(2 209924 210510)"
         "(2 210510 211558)"
         "(2 211558 213840)"
         "(2 213840 217172)"
         "(2 217172 217904)"
         "(2 217904 221280)"
         "(2 221280 221952)"
         "(2 221952 222988)"
         "(2 222988 223408)"
         "(2 223408 223780)"
         "(2 223780 224188)"
         "(2 224188 224970)"
         "(2 224970 225530)"
         "(2 225530 226060)"
         "(2 226060 227196)"
         "(2 227196 227630)"
         "(2 227630 227998)"
         "(2 227998 228400)"
         "(2 228400 228848)"
         "(2 228848 229194)"
         "(2 229194 229726)"
         "(2 229726 230270)"
         "(2 230270 231434)"
         "(2 231434 232240)"
         "(2 232240 232640)"
         "(2 232640 233064)"
         "(2 233064 233414)"
         "(2 233414 233830)"
         "(2 233830 235026)"
         "(2 235026 235368)"
         "(2 235368 235816)"
         "(2 235816 236250)"
         "(2 236250 236804)"
         "(2 236804 237244)"
         "(2 237244 237528)"
         "(2 237528 239082)"
         "(2 239082 240432)"
         "(2 240432 240660)"
         "(2 240660 241724)"
         "(2 241724 242082)"
         "(2 242082 242470)"
         "(2 242470 244980)"
         "(2 244980 245176)"
         "(2 245176 245472)"
         "(2 245472 245838)"
         "(2 245838 246186)"
         "(2 246186 246622)"
         "(2 246622 247580)"
         "(3 362 620)"
         "(3 620 4968)"
         "(3 4968 7418)"
         "(3 7418 7826)"
         "(3 7826 8108)"
         "(3 8108 9274)"
         "(3 9274 16206)"
         "(3 16206 16552)"
         "(3 16552 16824)"
         "(3 16824 17038)"
         "(3 17038 18292)"
         "(3 18292 20468)"
         "(3 20468 21086)"
         "(3 21086 22592)"
         "(3 22592 25404)"
         "(3 25404 26904)"
         "(3 26904 29622)"
         "(3 29622 29954)"
         "(3 29954 31000)"
         "(3 31000 32124)"
         "(3 32124 32964)"
         "(3 32964 33188)"
         "(3 33188 34226)"
         "(3 34226 35092)"
         "(3 35092 41126)"
         "(3 41126 43728)"
         "(3 43728 48180)"
         "(3 48180 49986)"
         "(3 49986 50280)"
         "(3 50280 50560)"
         "(3 50560 50960)"
         "(3 50960 51412)"
         "(3 51412 52082)"
         "(3 52082 56480)"
         "(3 56480 57510)"
         "(3 57510 58836)"
         "(3 58836 60568)"
         "(3 60568 62602)"
         "(3 62602 64004)"
         "(3 64004 64798)"
         "(3 64798 67240)"
         "(3 67240 67596)"
         "(3 67596 68776)"
         "(3 68776 72960)"
         "(3 72960 73202)"
         "(3 73202 73538)"
         "(3 73538 80406)"
         "(3 80406 80692)"
         "(3 80692 81866)"
         "(3 81866 82154)"
         "(3 82154 83218)"
         "(3 83218 84168)"
         "(3 84168 89444)"
         "(3 89444 101036)"
         "(3 101036 105518)"
         "(3 105518 107924)"
         "(3 107924 108334)"
         "(3 108334 108634)"
         "(3 108634 109790)"
         "(3 109790 116718)"
         "(3 116718 117064)"
         "(3 117064 117340)"
         "(3 117340 117544)"
         "(3 117544 118446)"
         "(3 118446 118756)"
         "(3 118756 121276)"
         "(3 121276 121598)"
         "(3 121598 123112)"
         "(3 123112 125926)"
         "(3 125926 127418)"
         "(3 127418 130134)"
         "(3 130134 130458)"
         "(3 130458 131514)"
         "(3 131514 132630)"
         "(3 132630 133478)"
         "(3 133478 133696)"
         "(3 133696 134752)"
         "(3 134752 135766)"
         "(3 135766 139864)"
         "(3 139864 140104)"
         "(3 140104 141270)"
         "(3 141270 141636)"
         "(3 141636 144238)"
         "(3 144238 148734)"
         "(3 148734 150506)"
         "(3 150506 150790)"
         "(3 150790 151082)"
         "(3 151082 151458)"
         "(3 151458 151926)"
         "(3 151926 152602)"
         "(3 152602 152822)"
         "(3 152822 156990)"
         "(3 156990 158028)"
         "(3 158028 159346)"
         "(3 159346 160406)"
         "(3 160406 161044)"
         "(3 161044 163116)"
         "(3 163116 164524)"
         "(3 164524 165310)"
         "(3 165310 167754)"
         "(3 167754 168110)"
         "(3 168110 169284)"
         "(3 169284 173478)"
         "(3 173478 173804)"
         "(3 173804 181210)"
         "(3 181210 182396)"
         "(3 182396 183738)"
         "(3 183738 190034)"
         "(3 190034 218728)"
         "(3 218728 223098)"
         "(3 223098 225638)"
         "(3 225638 226040)"
         "(3 226040 226266)"
         "(3 226266 227504)"
         "(3 227504 232140)"
         "(3 232140 234776)"
         "(3 234776 235214)"
         "(3 235214 236398)"
         "(3 236398 238678)"
         "(3 238678 238984)"
         "(3 238984 239310)"
         "(3 239310 240814)"
         "(3 240814 242264)"
         "(3 242264 243624)"
         "(3 243624 245132)"
         "(3 245132 247844)"
         "(3 247844 249230)"
         "(3 249230 250338)"
         "(3 250338 251194)"
         "(3 251194 251406)"
         "(3 251406 252442)"
         "(3 252442 253442)"
         "(3 253442 259346)"
         "(3 259346 261946)"
         "(3 261946 266406)"
         "(3 266406 268208)"
         "(3 268208 268496)"
         "(3 268496 268774)"
         "(3 268774 269178)"
         "(3 269178 269628)"
         "(3 269628 270300)"
         "(3 270300 270528)"
         "(3 270528 274698)"
         "(3 274698 275732)"
         "(3 275732 277060)"
         "(3 277060 278124)"
         "(3 278124 278786)"
         "(3 278786 280828)"
         "(3 280828 282082)"
         "(3 282082 283020)"
         "(3 283020 285266)"
         "(3 285266 285460)"
         "(3 285460 285812)"
         "(3 285812 286996)"
         "(3 286996 291190)"
         "(3 291190 291502)"
         "(3 291502 291754)"
         "(3 291754 298626)"
         "(3 298626 298916)"
         "(3 298916 300098)"
         "(3 300098 300374)"
         "(3 300374 302408)"
         "(3 302408 302874)"
         "(3 302874 307666)"
         "(4 410 2412)"
         "(4 2412 10058)"
         "(4 10058 10760)"
         "(4 10760 11798)"
         "(4 11798 12036)"
         "(4 12036 12466)"
         "(4 12466 38066)"
         "(4 38066 75082)"
         "(4 75082 145916)"
         "(4 145916 156748)"
         "(4 156748 170630)"
         "(4 170630 172640)"
         "(4 172640 180034)"
         "(4 180034 180990)"
         "(4 180990 182700)"
         "(4 182700 186156)"
         "(4 186156 198618)"
         "(4 198618 232884)"
         "(4 232884 245330)"
         "(4 245330 263864)"
         "(4 263864 310742)"
         "(4 310742 316150)"
         "(4 316150 326978)"
         "(4 326978 327492)"
         "(4 327492 331278)"
         "(4 331278 338954)"
         "(4 338954 341004)"
         "(4 341004 341618)"
         "(4 341618 346792)"
         "(4 346792 368948)"
         "(4 368948 395296)"
         "(4 395296 398090)"
         "(4 398090 405942)"
         "(4 405942 436326)"
         "(4 436326 489432)"
         "(4 489432 490244)"
         "(5 0 366)"
         "(5 366 1028)"
         "(5 1028 1262)"
         "(5 1262 1910)"
         "(5 1910 2530)"
         "(5 2530 3010)"
         "(5 3010 3866)"
         "(5 3866 4246)"
         "(5 4246 6178)"
         "(5 6178 6432)"
         "(5 6432 6658)"
         "(5 6658 7262)"
         "(5 7262 8208)"
         "(5 8208 10504)"
         "(5 10504 10776)"
         "(5 10776 11116)"
         "(5 11116 11924)"
         "(5 11924 13592)"
         "(5 13592 14074)"
         "(5 14074 14652)"
         "(5 14652 15520)"
         "(5 15520 16356)"
         "(5 16356 16654)"
         "(5 16654 17610)"
         "(5 17610 18166)"
         "(5 18166 18872)"
         "(5 18872 19126)"
         "(5 19126 19456)"
         "(5 19456 20424)"
         "(5 20424 21040)"
         "(5 21040 22554)"
         "(5 22554 22792)"
         "(5 22792 23320)"
         "(5 23320 23766)"
         "(5 23766 23984)"
         "(5 23984 24282)"
         "(5 24282 25970)"
         "(5 25970 26172)"
         "(5 26172 26894)"
         "(5 26894 27406)"
         "(5 27406 27688)"
         "(5 27688 27926)"
         "(5 27926 28506)"
         "(5 28506 29152)"
         "(5 29152 30684)"
         "(5 30684 32134)"
         "(5 32134 32666)"
         "(5 32666 32898)"
         "(5 32898 33550)"
         "(5 33550 33966)"
         "(5 33966 34322)"
         "(5 34322 36964)"
         "(5 36964 37170)"
         "(5 37170 38702)"
         "(5 38702 39130)"
         "(5 39130 39710)"
         "(5 39710 40128)"
         "(5 40128 41052)"
         "(5 41052 41890)"
         "(5 41890 42322)"
         "(5 42322 42560)"
         "(5 42560 43048)"
         "(5 43048 45058)"
         "(5 45058 45330)"
         "(5 45330 50178)"
         "(5 50178 50786)"
         "(5 50786 51980)"
         "(5 51980 53464)"
         "(5 53464 54108)"
         "(5 54108 54620)"
         "(5 54620 55006)"
         "(5 55006 55770)"
         "(5 55770 56250)"
         "(5 56250 56508)"
         "(5 56508 56796)"
         "(5 56796 57612)"
         "(5 57612 58624)"
         "(5 58624 58836)"
         "(5 58836 59038)"
         "(5 59038 59596)"
         "(5 59596 60236)"
         "(5 60236 60450)"
         "(5 60450 60802)"
         "(5 60802 61916)"
         "(5 61916 62580)"
         "(5 62580 62828)"
         "(5 62828 63334)"
         "(5 63334 63692)"
         "(5 63692 64040)"
         "(5 64040 64348)"
         "(5 64348 64924)"
         "(5 64924 66082)"
         "(5 66082 66432)"
         "(5 66432 66734)"
         "(5 66734 67942)"
         "(5 67942 68454)"
         "(5 68454 68866)"
         "(5 68866 70318)"
         "(5 70318 72198)"
         "(5 72198 72574)"
         "(5 72574 72926)"
         "(5 72926 73140)"
         "(5 73140 73340)"
         "(5 73340 73724)"
         "(5 73724 74032)"
         "(5 74032 74342)"
         "(5 74342 74970)"
         "(5 74970 75942)"
         "(5 75942 76410)"
         "(5 76410 76742)"
         "(5 76742 76968)"
         "(5 76968 77392)"
         "(5 77392 78654)"
         "(5 78654 79080)"
         "(5 79080 79400)"
         "(5 79400 79706)"
         "(5 79706 146848)"
         "(5 146848 147238)"
         "(5 147238 147530)"
         "(5 147530 147926)"
         "(5 147926 148106)"
         "(5 148106 148772)"
         "(5 148772 149398)"
         "(5 149398 149870)"
         "(5 149870 150740)"
         "(5 150740 151100)"
         "(5 151100 153052)"
         "(5 153052 153282)"
         "(5 153282 153536)"
         "(5 153536 154128)"
         "(5 154128 154512)"
         "(5 154512 154938)"
         "(5 154938 155264)"
         "(5 155264 155610)"
         "(5 155610 156192)"
         "(5 156192 156702)"
         "(5 156702 157374)"
         "(5 157374 157706)"
         "(5 157706 157992)"
         "(5 157992 158784)"
         "(5 158784 160156)"
         "(5 160156 160522)"
         "(5 160522 160830)"
         "(5 160830 161514)"
         "(5 161514 162004)"
         "(5 162004 162396)"
         "(5 162396 163244)"
         "(5 163244 163522)"
         "(5 163522 164454)"
         "(5 164454 165174)"
         "(5 165174 165732)"
         "(5 165732 165992)"
         "(5 165992 166320)"
         "(5 166320 167930)"
         "(5 167930 168278)"
         "(5 168278 169424)"
         "(5 169424 169662)"
         "(5 169662 170170)"
         "(5 170170 170632)"
         "(5 170632 170858)"
         "(5 170858 171152)"
         "(5 171152 172226)"
         "(5 172226 173042)"
         "(5 173042 173300)"
         "(5 173300 173754)"
         "(5 173754 174256)"
         "(5 174256 174554)"
         "(5 174554 174796)"
         "(5 174796 175382)"
         "(5 175382 175700)"
         "(5 175700 176054)"
         "(5 176054 177548)"
         "(5 177548 179542)"
         "(5 179542 179772)"
         "(5 179772 180406)"
         "(5 180406 180844)"
         "(5 180844 181200)"
         "(5 181200 181700)"
         "(5 181700 183840)"
         "(5 183840 184044)"
         "(5 184044 185574)"
         "(5 185574 185998)"
         "(5 185998 186578)"
         "(5 186578 187002)"
         "(5 187002 187534)"
         "(5 187534 187936)"
         "(5 187936 188308)"
         "(5 188308 189188)"
         "(5 189188 189928)"
         "(5 189928 191942)"
         "(5 191942 192424)"
         "(5 192424 196602)"
         "(5 196602 197654)"
         "(5 197654 198854)"
         "(5 198854 199530)"
         "(5 199530 200308)"
         "(5 200308 201212)"
         "(5 201212 201462)"
         "(5 201462 201924)"
         "(5 201924 202642)"
         "(5 202642 203380)"
         "(5 203380 204472)"
         "(5 204472 205604)"
         "(5 205604 205996)"
         "(5 205996 206458)"
         "(5 206458 207026)"
         "(5 207026 207318)"
         "(5 207318 207668)"
         "(5 207668 208810)"
         "(5 208810 209692)"
         "(5 209692 210206)"
         "(5 210206 210558)"
         "(5 210558 210910)"
         "(5 210910 211232)"
         "(5 211232 211812)"
         "(5 211812 212468)"
         "(5 212468 212952)"
         "(5 212952 213302)"
         "(5 213302 213620)"
         "(5 213620 214810)"
         "(5 214810 215346)"
         "(5 215346 215754)"
         "(5 215754 217910)"
         "(5 217910 219068)"
         "(5 219068 219446)"
         "(5 219446 219768)"
         "(5 219768 220208)"
         "(5 220208 220664)"
         "(5 220664 220908)"
         "(5 220908 221212)"
         "(5 221212 223046)"
         "(5 223046 223274)"
         "(5 223274 223844)"
         "(5 223844 224260)"
         "(5 224260 225524)"
         "(5 225524 225960)"
         "(5 225960 226584)"
         "(5 226584 242996)"
         "(5 242996 244042)"
         "(5 244042 244594)"
         "(5 244594 244916)"
         "(5 244916 245554)"
         "(5 245554 246020)"
         "(5 246020 247258)"
         "(5 247258 249202)"
         "(5 249202 249400)"
         "(5 249400 249796)"
         "(5 249796 250302)"
         "(5 250302 250536)"
         "(5 250536 250756)"
         "(5 250756 251232)"
         "(5 251232 251754)"
         "(5 251754 253522)"
         "(5 253522 253778)"
         "(5 253778 254154)"
         "(5 254154 254934)"
         "(5 254934 255410)"
         "(5 255410 256600)"
         "(5 256600 257066)"
         "(5 257066 257672)"
         "(5 257672 258478)"
         "(5 258478 259678)"
         "(5 259678 259934)"
         "(5 259934 260614)"
         "(5 260614 261184)"
         "(5 261184 261440)"
         "(5 261440 261892)"
         "(5 261892 262136)"
         "(5 262136 262454)"
         "(5 262454 263446)"
         "(5 263446 264052)"
         "(5 264052 264416)"
         "(5 264416 264746)"
         "(5 264746 265580)"
         "(5 265580 265838)"
         "(5 265838 266334)"
         "(5 266334 266798)"
         "(5 266798 267002)"
         "(5 267002 267304)"
         "(5 267304 269186)"
         "(5 269186 269904)"
         "(5 269904 270430)"
         "(5 270430 270704)"
         "(5 270704 270938)"
         "(5 270938 272198)"
         "(5 272198 273710)"
         "(5 273710 275148)"
         "(5 275148 275680)"
         "(5 275680 275918)"
         "(5 275918 276552)"
         "(5 276552 276998)"
         "(5 276998 277336)"
         "(5 277336 277850)"
         "(5 277850 278852)"
         "(5 278852 279986)"
         "(5 279986 281712)"
         "(5 281712 282274)"
         "(5 282274 282728)"
         "(5 282728 283146)"
         "(5 283146 284074)"
         "(5 284074 284452)"
         "(5 284452 285580)"
         "(5 285580 286064)"
         "(5 286064 286850)"
         "(5 286850 288072)"
         "(5 288072 288338)"
         "(5 288338 291316)"
         "(5 291316 293194)"
         "(5 293194 293802)"
         "(5 293802 295008)"
         "(5 295008 295502)"
         "(5 295502 296480)"
         "(5 296480 297128)"
         "(5 297128 297376)"
         "(5 297376 297612)"
         "(5 297612 298024)"
         "(5 298024 298798)"
         "(5 298798 299276)"
         "(5 299276 299532)"
         "(5 299532 300628)"
         "(5 300628 301748)"
         "(5 301748 302018)"
         "(5 302018 302314)"
         "(5 302314 302622)"
         "(5 302622 303258)"
         "(5 303258 303460)"
         "(5 303460 305090)"
         "(5 305090 305594)"
         "(5 305594 305844)"
         "(5 305844 306350)"
         "(5 306350 306710)"
         "(5 306710 307060)"
         "(5 307060 307378)"
         "(5 307378 307942)"
         "(5 307942 309100)"
         "(5 309100 309458)"
         "(5 309458 309756)"
         "(5 309756 311468)"
         "(5 311468 314064)"
         "(5 314064 315216)"
         "(5 315216 315584)"
         "(5 315584 315940)"
         "(5 315940 316158)"
         "(5 316158 316420)"
         "(5 316420 316810)"
         "(5 316810 317046)"
         "(5 317046 317354)"
         "(5 317354 318938)"
         "(5 318938 319408)"
         "(5 319408 319764)"
         "(5 319764 319988)"
         "(5 319988 320368)"
         "(5 320368 321670)"
         "(5 321670 322096)"
         "(5 322096 322400)"
         "(5 322400 322726)"
         "(5 322726 323932)"
         "(6 494 1434)"
         "(6 1434 1734)"
         "(6 1734 1950)"
         "(6 1950 2216)"
         "(6 2216 2772)"
         "(6 2772 3058)"
         "(6 3058 3306)"
         "(6 3306 7214)"
         "(6 7214 7946)"
         "(6 7946 8222)"
         "(6 8222 9388)"
         "(6 9388 10120)"
         "(6 10120 13886)"
         "(6 13886 20872)"
         "(6 20872 21554)"
         "(6 21554 21974)"
         "(6 21974 26382)"
         "(6 26382 26572)"
         "(6 26572 26828)"
         "(6 26828 28366)"
         "(6 28366 28584)"
         "(6 28584 28870)"
         "(6 28870 29436)"
         "(6 29436 30440)"
         "(6 30440 30920)"
         "(6 30920 31202)"
         "(6 31202 31586)"
         "(6 31586 31836)"
         "(6 31836 33492)"
         "(6 33492 33936)"
         "(6 33936 34268)"
         "(6 34268 34796)"
         "(6 34796 40446)"
         "(6 40446 41056)"
         "(6 41056 65176)"
         "(6 65176 67768)"
         "(6 67768 69094)"
         "(6 69094 77454)"
         "(6 77454 77726)"
         "(6 77726 80622)"
         "(6 80622 81458)"
         "(6 81458 81758)"
         "(6 81758 83214)"
         "(6 83214 84240)"
         "(6 84240 86304)"
         "(6 86304 87084)"
         "(6 87084 87364)"
         "(6 87364 87580)"
         "(6 87580 87872)"
         "(6 87872 90784)"
         "(6 90784 90990)"
         "(6 90990 93868)"
         "(6 93868 94234)"
         "(6 94234 94540)"
         "(6 94540 95048)"
         "(6 95048 97252)"
         "(6 97252 97508)"
         "(6 97508 102834)"
         "(6 102834 105962)"
         "(6 105962 109724)"
         "(6 109724 110152)"
         "(6 110152 111060)"
         "(6 111060 120890)"
         "(6 120890 121858)"
         "(6 121858 122328)"
         "(6 122328 122638)"
         "(6 122638 123400)"
         "(6 123400 123732)"
         "(6 123732 123942)"
         "(6 123942 125734)"
         "(6 125734 126980)"
         "(6 126980 127610)"
         "(6 127610 128422)"
         "(6 128422 128636)"
         "(6 128636 128960)"
         "(6 128960 129634)"
         "(6 129634 130552)"
         "(6 130552 130784)"
         "(6 130784 134012)"
         "(6 134012 134440)"
         "(6 134440 134942)"
         "(6 134942 141298)"
         "(6 141298 141978)"
         "(6 141978 142396)"
         "(6 142396 143132)"
         "(6 143132 146544)"
         "(6 146544 146794)"
         "(6 146794 147170)"
         "(6 147170 148422)"
         "(6 148422 148788)"
         "(6 148788 149006)"
         "(6 149006 149286)"
         "(6 149286 149856)"
         "(6 149856 150642)"
         "(6 150642 150852)"
         "(6 150852 151342)"
         "(6 151342 151624)"
         "(6 151624 152266)"
         "(6 152266 153916)"
         "(6 153916 154356)"
         "(6 154356 154682)"
         "(6 154682 155390)"
         "(6 155390 160852)"
         "(6 160852 161478)"
         "(6 161478 184662)"
         "(6 184662 185018)"
         "(6 185018 185454)"
         "(6 185454 185728)"
         "(6 185728 187364)"
         "(6 187364 188188)"
         "(6 188188 188954)"
         "(6 188954 189266)"
         "(6 189266 189520)"
         "(6 189520 189830)"
         "(6 189830 191508)"
         "(6 191508 198144)"
         "(6 198144 198444)"
         "(6 198444 198672)"
         "(6 198672 200370)"
         "(6 200370 201044)"
         "(6 201044 201736)"
         "(6 201736 201964)"
         "(6 201964 202192)"
         "(6 202192 203714)"
         "(6 203714 204580)"
         "(6 204580 206730)"
         "(6 206730 207438)"
         "(6 207438 207906)"
         "(6 207906 208292)"
         "(6 208292 211428)"
         "(6 211428 212836)"
         "(6 212836 213370)"
         "(6 213370 213878)"
         "(6 213878 214656)"
         "(6 214656 214962)"
         "(6 214962 215490)"
         "(6 215490 215686)"
         "(6 215686 216958)"
         "(6 216958 217882)"
         "(6 217882 220884)"
         "(6 220884 226460)"
         "(6 226460 227186)"
         "(6 227186 228576)"
         "(6 228576 230242)"
         "(6 230242 230562)"
         "(6 230562 231482)"
         "(6 231482 231900)"
         "(6 231900 247702)"
         "(6 247702 248656)"
         "(6 248656 248964)"
         "(6 248964 249178)"
         "(6 249178 249450)"
         "(6 249450 249996)"
         "(6 249996 250280)"
         "(6 250280 250536)"
         "(6 250536 252544)"
         "(6 252544 254218)"
         "(6 254218 254422)"
         "(6 254422 255240)"
         "(6 255240 255450)"
         "(6 255450 255764)"
         "(6 255764 256616)"
         "(6 256616 256856)"
         "(6 256856 257356)"
         "(6 257356 261244)"
         "(6 261244 268266)"
         "(6 268266 268862)"
         "(6 268862 273348)"
         "(6 273348 273564)"
         "(6 273564 273810)"
         "(6 273810 274050)"
         "(6 274050 275764)"
         "(6 275764 276100)"
         "(6 276100 276664)"
         "(6 276664 277658)"
         "(6 277658 278434)"
         "(6 278434 278822)"
         "(6 278822 279058)"
         "(6 279058 280526)"
         "(6 280526 281166)"
         "(6 281166 281470)"
         "(6 281470 282014)"
         "(6 282014 285548)"
         "(6 285548 287674)"
         "(6 287674 288280)"
         "(6 288280 311450)"
         "(6 311450 311722)"
         "(6 311722 312268)"
         "(6 312268 314990)"
         "(6 314990 315682)"
         "(6 315682 317290)"
         "(6 317290 324914)"
         "(6 324914 326254)"
         "(6 326254 328530)"
         "(6 328530 328930)"
         "(6 328930 330460)"
         "(6 330460 331482)"
         "(6 331482 331714)"
         "(6 331714 332320)"
         "(6 332320 333538)"
         "(6 333538 334252)"
         "(6 334252 334594)"
         "(6 334594 334974)"
         "(6 334974 338022)"
         "(6 338022 341470)"
         "(6 341470 341772)"
         "(6 341772 342274)"
         "(6 342274 342484)"
         "(6 342484 343782)"
         "(6 343782 344738)"
         "(6 344738 347684)"
         "(6 347684 350070)"
         "(6 350070 353188)"
         "(6 353188 356954)"
         "(6 356954 357376)"
         "(6 357376 358276)"
         "(6 358276 359348)"))
       (:labls
        (:list
         "(3 0 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(1 0 -1 -1 -1)"
         "(5 0 -1 -1 -1)"
         "(12 11 -1 -1 -1)"
         "(29 10 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(6 5 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(12 -1 -1 -1 -1)"
         "(14 10 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(1 0 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(18 -1 -1 -1 -1)"
         "(7 11 -1 -1 -1)"
         "(1 0 -1 -1 -1)"
         "(1 2 -1 -1 -1)"
         "(6 2 -1 -1 -1)"
         "(1 2 -1 -1 -1)"
         "(1 2 -1 -1 -1)"
         "(9 2 -1 -1 -1)"
         "(18 0 -1 -1 -1)"
         "(1 0 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(1 0 -1 -1 -1)"
         "(10 11 -1 -1 -1)"
         "(15 8 -1 -1 -1)"
         "(9 6 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(6 9 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(19 8 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(10 11 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(141 -1 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(10 10 -1 -1 -1)"
         "(36 3 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(6 6 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(15 -1 -1 -1 -1)"
         "(17 9 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(18 -1 -1 -1 -1)"
         "(8 11 -1 -1 -1)"
         "(1 1 -1 -1 -1)"
         "(6 1 -1 -1 -1)"
         "(1 1 -1 -1 -1)"
         "(1 1 -1 -1 -1)"
         "(9 1 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(9 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(26 2 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(6 5 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(14 7 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(10 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(104 -1 -1 -1 -1)"
         "(5 1 -1 -1 -1)"
         "(1 1 -1 -1 -1)"
         "(5 1 -1 -1 -1)"
         "(12 0 -1 -1 -1)"
         "(29 8 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(6 5 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(8 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(8 11 -1 -1 -1)"
         "(6 9 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(17 -1 -1 -1 -1)"
         "(7 1 -1 -1 -1)"
         "(1 1 -1 -1 -1)"
         "(7 3 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(9 3 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(17 1 -1 -1 -1)"
         "(1 1 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(1 1 -1 -1 -1)"
         "(1 1 -1 -1 -1)"
         "(10 0 -1 -1 -1)"
         "(15 9 -1 -1 -1)"
         "(9 7 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(7 11 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(11 9 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(7 10 -1 -1 -1)"
         "(10 0 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(10 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(11 -1 -1 -1 -1)"
         "(13 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(10 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(11 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(8 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(13 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(10 -1 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(11 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(8 9 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(11 -1 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(11 -1 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 0 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(23 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(20 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(15 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(15 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(23 5 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(18 6 -1 -1 -1)"
         "(39 -1 -1 -1 -1)"
         "(15 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(23 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(15 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(25 5 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(21 6 -1 -1 -1)"
         "(96 -1 -1 -1 -1)"
         "(15 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(15 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(20 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(15 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(23 6 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(7 5 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(16 7 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(25 0 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(85 8 -1 -1 -1)"
         "(123 6 -1 -1 -1)"
         "(236 8 -1 -1 -1)"
         "(36 9 -1 -1 -1)"
         "(46 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(25 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(12 -1 -1 -1 -1)"
         "(42 9 -1 -1 -1)"
         "(114 4 -1 -1 -1)"
         "(41 7 -1 -1 -1)"
         "(62 10 -1 -1 -1)"
         "(156 7 -1 -1 -1)"
         "(18 9 -1 -1 -1)"
         "(36 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(13 -1 -1 -1 -1)"
         "(26 1 -1 -1 -1)"
         "(7 1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(17 -1 -1 -1 -1)"
         "(74 9 -1 -1 -1)"
         "(88 6 -1 -1 -1)"
         "(9 9 -1 -1 -1)"
         "(26 9 -1 -1 -1)"
         "(101 10 -1 -1 -1)"
         "(177 0 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(6 9 -1 -1 -1)"
         "(1 0 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(8 10 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(5 6 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(9 6 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(7 4 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(16 8 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(224 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(7 8 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(7 5 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(7 5 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(7 3 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(14 8 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(7 7 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(6 5 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(55 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(6 11 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(10 8 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(5 3 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(9 9 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(13 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(13 8 -1 -1 -1)"
         "(23 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(15 -1 -1 -1 -1)"
         "(1 2 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(19 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(80 7 -1 -1 -1)"
         "(9 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(28 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(10 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(7 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(10 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(10 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(18 9 -1 -1 -1)"
         "(10 -1 -1 -1 -1)"
         "(13 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(33 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(11 7 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(21 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(11 -1 -1 -1 -1)"
         "(1 1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(18 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(77 8 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(22 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(6 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(7 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(10 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(10 8 -1 -1 -1)"
         "(19 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(53 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(13 9 -1 -1 -1)"
         "(23 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(15 -1 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(12 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(77 -1 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(9 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(25 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(8 11 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(10 -1 -1 -1 -1)"
         "(11 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(10 10 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(10 -1 -1 -1 -1)"
         "(13 -1 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"))))))
   (:id 11))
  (:comment
   (:x 563)
   (:y 622)
   (:w 188)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font
      (:font (:face "Helvetica") (:size 12) (:style :bold :italic)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Audio generator - other tracks")
   (:id 12))
  (:comment
   (:x 109)
   (:y 827)
   (:w 223)
   (:h 25)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Maximum continuity")
   (:id 13))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 110)
   (:y 845)
   (:w 61)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 50)
   (:id 14))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 1077)
   (:y 539)
   (:w 227)
   (:h 102)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border (:number-or-nil (:number 4.0) (:t-or-nil t)))
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(14 5 -1 -1 -1)"
         "(13 5 -1 -1 -1)"
         "(7 5 -1 -1 -1)"
         "(7 10 -1 -1 -1)"
         "(11 1 -1 -1 -1)"
         "(10 -1 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(8 4 -1 -1 -1)"
         "(9 3 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(1 1 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(9 6 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(7 0 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(7 7 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(10 2 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(11 9 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(8 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(10 7 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(14 4 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(11 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(14 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(9 0 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(15 3 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(11 4 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(5 4 -1 -1 -1)"
         "(11 10 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 6 -1 -1 -1)"))
       (:labls
        (:list
         "(14 5 -1 -1 -1)"
         "(13 5 -1 -1 -1)"
         "(7 5 -1 -1 -1)"
         "(7 10 -1 -1 -1)"
         "(11 1 -1 -1 -1)"
         "(10 -1 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(8 4 -1 -1 -1)"
         "(9 3 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(1 1 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(9 6 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(7 0 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(7 7 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(10 2 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(11 9 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(8 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(10 7 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(14 4 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(11 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(14 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(9 0 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(15 3 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(11 4 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(5 4 -1 -1 -1)"
         "(11 10 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 6 -1 -1 -1)"))))))
   (:id 15))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1178)
   (:y 676)
   (:w 115)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.3151020407676697D0
       0.41455078125D0
       0.5224196910858154D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "OutputTuto3")
   (:id 16))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 973)
   (:y 191)
   (:w 160)
   (:h 32)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "Flocking")
   (:id 17))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative :up "abstractions"))
      (:device nil)
      (:host nil)
      (:name "output_folder_sync")
      (:type "opat"))))
   (:group-id nil)
   (:name "output_folder_sync")
   (:x 1222)
   (:y 756)
   (:w 145)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock :eval-once)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "mem_dir")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "scen_dir")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "head_title")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "root_dir")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "parameters_names")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "parameters_values")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "remove_scen_mode")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "sync_mode")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 18))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 107)
   (:y 787)
   (:w 53)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 20)
   (:id 19))
  (:comment
   (:x 105)
   (:y 769)
   (:w 82)
   (:h 25)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Length")
   (:id 20))
  (:comment
   (:x 1257)
   (:y 577)
   (:w 124)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font
      (:font (:face "Helvetica") (:size 12) (:style :bold :italic)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Scenario generator")
   (:id 21))
  (:comment
   (:x 105)
   (:y 724)
   (:w 276)
   (:h 42)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "3) Set parameters to generate the scenarios from each file in Loop 1")
   (:id 22))
  (:comment
   (:x 969)
   (:y 99)
   (:w 244)
   (:h 59)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "2) Select the scenario generation directory
(then Loop 1 : 1 file --> 1 scenario)")
   (:id 23))
  (:comment
   (:x 60)
   (:y 2)
   (:w 1168)
   (:h 74)
   (:fgcolor nil)
   (:bgcolor
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.48235294))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 18) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "OM-DYCI2 - Advanced tutorial 2: AUTOMATIC GENERATION OF EVOLUTIVE SCENARIOS ON THE WHOLE SCENARIO DIRECTORY
- an evolutive scenario [length determined at step 4) max continuity defined at step 5)] generated on the whole directory
- the events in the resulting voices are stretched so that all the tracks are syncronized on track 1 (see patch Cb)")
   (:id 24))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "this_patch_parent_directory")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omselfin) (:index 0) (:name "BOX") (:doc "")))
       (:group-id nil)
       (:name "BOX")
       (:x 127)
       (:y 58)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out
         (:type omout)
         (:name "this_patch_parent_directory")
         (:index 1)
         (:doc "")))
       (:group-id nil)
       (:name "this_patch_parent_directory")
       (:x 60)
       (:y 247)
       (:w 182)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :function)
       (:reference mypathname)
       (:group-id nil)
       (:name "mypathname")
       (:x 97)
       (:y 136)
       (:w 107)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OMPERSISTANTOBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference container)
       (:group-id nil)
       (:name "container")
       (:x 107)
       (:y 103)
       (:w 87)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OMBOX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference directory-namestring)
       (:group-id nil)
       (:name "directory-namestring")
       (:x 77)
       (:y 193)
       (:w 147)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 1 :in 0))))))
   (:group-id nil)
   (:name "this_patch_parent_directory")
   (:x 1047)
   (:y 259)
   (:w 186)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :value)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs
    (:output (:name "this_patch_parent_directory") (:reactive nil)))
   (:id 25))
  (:box
   (:type :function)
   (:reference debug-dyci2)
   (:group-id nil)
   (:name "debug-dyci2")
   (:x 1335)
   (:y 168)
   (:w 106)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 311)
   (:y 210)
   (:w 174)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list "dur" "pitch_mode" "energy"))
   (:id 27))
  (:comment
   (:x 1409)
   (:y 717)
   (:w 279)
   (:h 106)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "6) Sync mode
nil: no synchronization
t: the events of all the tracks are stretched to match the durations of the events in track 1
(if using this mode, introducing duration classes in step 1, for instance 50ms or 100ms may be preferible)")
   (:id 28))
  (:comment
   (:x 780)
   (:y 929)
   (:w 203)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "7) EVALUATE")
   (:id 29))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 686)
   (:y 969)
   (:w 837)
   (:h 136)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive t)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:n-samples nil)
       (:n-channels nil)
       (:sample-rate nil)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname nil)))))
   (:id 30))
  (:box
   (:type :interface)
   (:reference list-selection)
   (:group-id nil)
   (:name "list-selection")
   (:x 33)
   (:y 959)
   (:w 588)
   (:h 274)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:multiple-selection nil)
   (:cell-height 12)
   (:cell-font
    (:font (:face "Lucida Grande") (:size 11) (:style :plain)))
   (:output-mode :value)
   (:inputs
    (:input (:type :key) (:name "items") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value nil)
   (:items nil)
   (:selection nil)
   (:id 31))
  (:comment
   (:x 29)
   (:y 915)
   (:w 203)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "8) EVALUATE, THEN CMD + CLICK ON THE PATHS")
   (:id 32))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 492)
   (:y 885)
   (:w 54)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 33))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 788)
   (:y 521)
   (:w 231)
   (:h 102)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border (:number-or-nil (:number 4.0) (:t-or-nil t)))
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align :center)
   (:display :text)
   (:showname t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(1 1820 5924)"
         "(1 5924 9796)"
         "(1 9796 11958)"
         "(1 11958 13910)"
         "(1 13910 17096)"
         "(1 17096 20052)"
         "(1 20052 20498)"
         "(1 20498 21362)"
         "(1 21362 23698)"
         "(1 23698 26500)"
         "(1 26500 27014)"
         "(1 27014 27454)"
         "(1 27454 28004)"
         "(1 28004 30634)"
         "(1 30634 30920)"
         "(1 30920 32966)"
         "(1 32966 34848)"
         "(1 34848 35220)"
         "(1 35220 37288)"
         "(1 37288 37522)"
         "(1 37522 40606)"
         "(1 40606 42096)"
         "(1 42096 45400)"
         "(1 45400 45710)"
         "(1 45710 46008)"
         "(1 46008 46244)"
         "(1 46244 46476)"
         "(1 46476 47224)"
         "(1 47224 47518)"
         "(1 47518 47836)"
         "(1 47836 50264)"
         "(1 50264 51192)"
         "(1 51192 51476)"
         "(1 51476 51748)"
         "(1 51748 52354)"
         "(1 52354 53394)"
         "(1 53394 53638)"
         "(1 53638 56720)"
         "(1 56720 57108)"
         "(1 57108 57388)"
         "(1 57388 57604)"
         "(1 57604 58190)"
         "(1 58190 58440)"
         "(1 58440 58686)"
         "(1 58686 58926)"
         "(1 58926 59292)"
         "(1 59292 59512)"
         "(1 59512 60024)"
         "(1 60024 61026)"
         "(1 61026 65156)"
         "(1 65156 65470)"
         "(1 65470 65730)"
         "(1 65730 66698)"
         "(1 66698 66960)"
         "(1 66960 67204)"
         "(1 67204 70622)"
         "(1 70622 71452)"
         "(1 71452 72868)"
         "(1 72868 73280)"
         "(1 73280 73638)"
         "(1 73638 74682)"
         "(1 74682 74948)"
         "(1 74948 75294)"
         "(1 75294 79426)"
         "(1 79426 79902)"
         "(1 79902 80220)"
         "(1 80220 80456)"
         "(1 80456 81328)"
         "(1 81328 82492)"
         "(1 82492 83168)"
         "(1 83168 83886)"
         "(1 83886 85038)"
         "(1 85038 85804)"
         "(1 85804 86170)"
         "(1 86170 86638)"
         "(1 86638 87494)"
         "(1 87494 87794)"
         "(1 87794 90602)"
         "(1 90602 92274)"
         "(1 92274 93146)"
         "(1 93146 97588)"
         "(1 97588 98422)"
         "(1 98422 98752)"
         "(1 98752 99130)"
         "(1 99130 99502)"
         "(1 99502 99866)"
         "(1 99866 100420)"
         "(1 100420 103736)"
         "(1 103736 104016)"
         "(1 104016 104550)"
         "(1 104550 104814)"
         "(1 104814 105628)"
         "(1 105628 106186)"
         "(1 106186 106832)"
         "(1 106832 107226)"
         "(1 107226 107466)"
         "(1 107466 107678)"
         "(1 107678 109144)"
         "(1 109144 112412)"
         "(1 112412 113572)"
         "(1 113572 114476)"
         "(1 114476 115450)"))
       (:labls
        (:list
         "(14 5 -1 -1 -1)"
         "(13 5 -1 -1 -1)"
         "(7 5 -1 -1 -1)"
         "(7 10 -1 -1 -1)"
         "(11 1 -1 -1 -1)"
         "(10 -1 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(8 4 -1 -1 -1)"
         "(9 3 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(1 1 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(9 6 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(7 0 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(7 7 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(10 2 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(11 9 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(8 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(10 7 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 3 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(1 4 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(14 4 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(11 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 7 -1 -1 -1)"
         "(14 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(9 0 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(15 3 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(1 -1 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 11 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(11 4 -1 -1 -1)"
         "(1 6 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(1 9 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(1 8 -1 -1 -1)"
         "(1 10 -1 -1 -1)"
         "(1 5 -1 -1 -1)"
         "(5 4 -1 -1 -1)"
         "(11 10 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 6 -1 -1 -1)"))))))
   (:id 34))
  (:comment
   (:x 789)
   (:y 621)
   (:w 251)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font
      (:font (:face "Helvetica") (:size 12) (:style :bold :italic)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Audio generator - 1st \"scenario\" track")
   (:id 35))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-process-dataset")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (105 138)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "lab_files") (:doc "")))
       (:group-id nil)
       (:name "lab_files")
       (:x 327)
       (:y 65)
       (:w 66)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "mem") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "mem")
       (:x 279)
       (:y 467)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "list_activation_labels")
         (:doc "")))
       (:group-id nil)
       (:name "list_activation_labels")
       (:x 411)
       (:y 76)
       (:w 141)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "function_process_labels")
         (:doc "")))
       (:group-id nil)
       (:name "function_process_labels")
       (:x 588)
       (:y 76)
       (:w 161)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name "TEXTBUFFER")
       (:x 219)
       (:y 176)
       (:w 148)
       (:h 82)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params (:read-mode :lines-cols))
       (:value
        (:object
         (:class textbuffer)
         (:slots ((:contents nil)))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 4))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 172)
       (:y 443)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 5))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 275)
       (:y 362)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 276)
       (:y 423)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 448)
       (:y 304)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value box)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value name)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "select-labels")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines list_activation_labels)"
           "  (loop for line in lines "
           "        collect (append "
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
           "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
           "                 ;(list (- (second line) (first line)))"
           "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
           "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
           "                       collect (nth (+ i 1) line)"
           "                       )"
           "                 )"
           "        into labels"
           "        finally return labels"
           "        )"
           "  )"
           ""))))
       (:group-id nil)
       (:name "select-labels")
       (:x 438)
       (:y 264)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST_ACTIVATION_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 182)
       (:y 122)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 10)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 4 :out 1)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 6 :out 1)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 4 :in 0))))))
   (:group-id nil)
   (:name "loop-process-dataset")
   (:x 2397/2)
   (:y 480)
   (:w 150)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock :eval-once)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "lab_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_activation_labels")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function_process_labels")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "mem") (:reactive nil)))
   (:id 36))
  (:box
   (:type :function)
   (:reference (:symbol "OM-DIRECTORY" "OM-API"))
   (:group-id nil)
   (:name "om-directory")
   (:x 2417/2)
   (:y 400)
   (:w 105)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :eval-once)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATH")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "type") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 37))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 2695/2)
   (:y 323)
   (:w 100)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "seg_desc")
   (:id 38))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "make-local-dyci2-path")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (folder corpus_subfolder) "
       "  (namestring "
       "   (merge-pathnames "
       "    (string+ folder \"Corpus/\" corpus_subfolder \"/\") "
       "    ;(om-user-home)"
       "    )))"
       "  "))))
   (:group-id nil)
   (:name "make-local-dyci2-path")
   (:x 2313/2)
   (:y 369)
   (:w 155)
   (:h 29)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "FOLDER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CORPUS_SUBFOLDER")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 39))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 1196)
   (:y 429)
   (:w 63)
   (:h 42)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 40))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-process-dataset")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "lab_files") (:doc "")))
       (:group-id nil)
       (:name "lab_files")
       (:x 212)
       (:y 2)
       (:w 66)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "sound") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "sound")
       (:x 229)
       (:y 509)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "mem") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "mem")
       (:x 489)
       (:y 512)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "list_activation_labels")
         (:doc "")))
       (:group-id nil)
       (:name "list_activation_labels")
       (:x 545)
       (:y 6)
       (:w 141)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "labels") (:index 3) (:doc "")))
       (:group-id nil)
       (:name "labels")
       (:x 594)
       (:y 507)
       (:w 53)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "extension_audio_files")
         (:doc "")))
       (:group-id nil)
       (:name "extension_audio_files")
       (:x 717)
       (:y 2)
       (:w 147)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "function_process_label")
         (:doc "")))
       (:group-id nil)
       (:name "function_process_label")
       (:x 956)
       (:y 38)
       (:w 155)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name "TEXTBUFFER")
       (:x 284)
       (:y 115)
       (:w 148)
       (:h 82)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params (:read-mode :lines-cols))
       (:value
        (:object
         (:class textbuffer)
         (:slots ((:contents nil)))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 7))
      (:box
       (:type :object)
       (:reference sound)
       (:group-id nil)
       (:name nil)
       (:x 114)
       (:y 312)
       (:w 300)
       (:h 71)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value :choose-file)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "markers")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "access-from-file")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "markers") (:reactive nil))
        (:output (:name "access-from-file") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class sound)
         (:slots
          ((:onset 0)
           (:duration 0)
           (:n-samples nil)
           (:n-channels nil)
           (:sample-rate nil)
           (:smpl-type :float)
           (:sample-size 16)))
         (:add-slots
          ((:markers nil)
           (:gain 1.0)
           (:access-from-file nil)
           (:file-pathname nil)))))
       (:id 8))
      (:box
       (:type :function)
       (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
       (:group-id nil)
       (:name "om-make-pathname")
       (:x 93)
       (:y 205)
       (:w 145)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :key)
         (:name "directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "name")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "type")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference pathname-name)
       (:group-id nil)
       (:name "pathname-name")
       (:x 97)
       (:y 119)
       (:w 125)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:comment
       (:x 21)
       (:y 324)
       (:w 63)
       (:h 50)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "le même nom mais en .wav")
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-markers")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines processed_labels)"
           "  (loop for i from 0 to (- (length lines) 1)"
           "        collect"
           "         (list"
           "          (sec->ms (first (nth i lines)))"
           "          ;(first (nth i lines))"
           "          (write-to-string (nth i processed_labels))"
           "          )         "
           "         )"
           "  )"
           ""
           ";(lambda (lines list_activation_labels)"
           ";  (loop for line in lines collect"
           ";        (list"
           ";         (sec->ms (first line))"
           ";         (number-to-string (round (fourth line)))"
           ";         )"
           ";        ))"))))
       (:group-id nil)
       (:name "make-markers")
       (:x 271)
       (:y 279)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 357)
       (:y 461)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 13))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 235)
       (:y 400)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 14))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-memory")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines n processed_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        ;collect (write-to-string (list n (first line) (second line)))"
           "        into mem-segments"
           "        finally return (list mem-segments processed_labels))"
           ")"
           "                                 "
           "#|"
           "(lambda (lines n  list_activation_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        into mem-segments"
           "        ;collect (write-to-string (round (/ (fourth line) div_intens)))"
           "        ;collect (write-to-string (list (round (/ (fourth line) div_intens))))"
           "        collect (write-to-string"
           "                 (list "
           "                 ; duree"
           "                  (if (> div_dur 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) div_dur)) -1)"
           "                 ;pitch"
           "                  (if (= mod_12 1) "
           "                      (if (= (round (third line)) 0) -1 (mod (round (third line))12))"
           "                    (if (< mod_12 0) -1 (round (third line)))"
           "                    )"
           "                 ;inten"
           "                  (if (> div_intens 0) (round (/ (fourth line) div_intens)) -1)"
           "                 ;voice casting"
           "                  (if (> vc 0) (round (/ (fifth line) vc)) -1)"
           "                 ;nmf"
           "                  (if (> nmf 0) (round (/ (sixth line) nmf)) -1)"
           "                 ))"
           "        into labels"
           "        finally return (list mem-segments labels)))"
           "|#"
           "                                 "))))
       (:group-id nil)
       (:name "make-memory")
       (:x 461)
       (:y 281)
       (:w 200)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 485)
       (:y 387)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 16))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 375)
       (:y 51)
       (:w 71)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 502)
       (:y 57)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 18))
      (:comment
       (:x 556)
       (:y 102)
       (:w 47)
       (:h 22)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "#sound")
       (:id 19))
      (:box
       (:type :function)
       (:reference split)
       (:group-id nil)
       (:name "split")
       (:x 554)
       (:y 335)
       (:w 59)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 20))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 592)
       (:y 388)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 21))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 486)
       (:y 468)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 22))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 593)
       (:y 462)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 23))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "select-labels")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines list_activation_labels)"
           "  (loop for line in lines "
           "        collect (append "
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
           "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
           "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
           "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
           "                       collect (nth (+ i 1) line)"
           "                       )"
           "                 )"
           "        into labels"
           "        finally return labels"
           "        )"
           "  )"
           ""))))
       (:group-id nil)
       (:name "select-labels")
       (:x 767)
       (:y 243)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST_ACTIVATION_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 753)
       (:y 294)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value box)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value name)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 25))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "value box")
       (:x 416)
       (:y 277)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value t)
       (:id 26))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 213)
       (:y 54)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 27))
      (:box
       (:type :special)
       (:reference loop-for)
       (:group-id nil)
       (:name "for")
       (:x 508)
       (:y 92)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "from")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "to")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 28)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 27 :in 0)))
      (:connection (:from (:box 0 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 24 :in 1)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 9 :in 2))
       (:attributes (:color nil :style nil :modif (0 1/3))))
      (:connection (:from (:box 6 :out 0)) (:to (:box 25 :in 0)))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/92))))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 15 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/94))))
      (:connection (:from (:box 7 :out 1)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 14 :out 1)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 20 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 13 :in 1)))
      (:connection (:from (:box 16 :out 1)) (:to (:box 22 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 28 :in 1)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 28 :in 0)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 20 :out 1)) (:to (:box 21 :in 0)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 13 :in 2)))
      (:connection (:from (:box 21 :out 1)) (:to (:box 23 :in 0)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 25 :in 1)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 15 :in 2)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 8 :in 2)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 15 :in 1))))))
   (:group-id nil)
   (:name "loop-process-dataset")
   (:x 859)
   (:y 472)
   (:w 150)
   (:h 39)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "lab_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_activation_labels")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "extension_audio_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function_process_label")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "sound") (:reactive nil))
    (:output (:name "mem") (:reactive nil))
    (:output (:name "labels") (:reactive nil)))
   (:id 41))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 973)
   (:y 425)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "wav")
   (:id 42))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 1133)
   (:y 442)
   (:w 53)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 43))
  (:box
   (:type :function)
   (:reference (:symbol "OM-DIRECTORY" "OM-API"))
   (:group-id nil)
   (:name "om-directory")
   (:x 2134/5)
   (:y 399)
   (:w 105)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATH")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "type") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 44))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 2714/5)
   (:y 378)
   (:w 100)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "seg_desc")
   (:id 45))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "make-local-dyci2-path")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (folder corpus_subfolder) "
       "  (namestring "
       "   (merge-pathnames "
       "    (string+ folder \"Corpus/\" corpus_subfolder \"/\") "
       "    ;(om::om-user-home)"
       "    )))"
       "  "))))
   (:group-id nil)
   (:name "make-local-dyci2-path")
   (:x 1874/5)
   (:y 369)
   (:w 155)
   (:h 28)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "FOLDER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CORPUS_SUBFOLDER")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 46))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-process-dataset")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "lab_files") (:doc "")))
       (:group-id nil)
       (:name "lab_files")
       (:x 212)
       (:y 2)
       (:w 66)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "sound") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "sound")
       (:x 229)
       (:y 509)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "mem") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "mem")
       (:x 489)
       (:y 512)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "list_activation_labels")
         (:doc "")))
       (:group-id nil)
       (:name "list_activation_labels")
       (:x 545)
       (:y 6)
       (:w 141)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "labels") (:index 3) (:doc "")))
       (:group-id nil)
       (:name "labels")
       (:x 594)
       (:y 507)
       (:w 53)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "extension_audio_files")
         (:doc "")))
       (:group-id nil)
       (:name "extension_audio_files")
       (:x 717)
       (:y 2)
       (:w 147)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "function_process_label")
         (:doc "")))
       (:group-id nil)
       (:name "function_process_label")
       (:x 956)
       (:y 38)
       (:w 155)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name "TEXTBUFFER")
       (:x 284)
       (:y 115)
       (:w 148)
       (:h 82)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params (:read-mode :lines-cols))
       (:value
        (:object
         (:class textbuffer)
         (:slots ((:contents nil)))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 7))
      (:box
       (:type :object)
       (:reference sound)
       (:group-id nil)
       (:name nil)
       (:x 113)
       (:y 320)
       (:w 297)
       (:h 56)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :hidden)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value :choose-file)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "markers")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "access-from-file")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "file-pathname")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "sample-rate")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "n-channels")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "n-samples")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "markers") (:reactive nil))
        (:output (:name "access-from-file") (:reactive nil))
        (:output (:name "file-pathname") (:reactive nil))
        (:output (:name "sample-rate") (:reactive nil))
        (:output (:name "n-channels") (:reactive nil))
        (:output (:name "n-samples") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class sound)
         (:slots
          ((:onset 0)
           (:duration 0)
           (:n-samples nil)
           (:n-channels nil)
           (:sample-rate nil)
           (:smpl-type :float)
           (:sample-size 16)))
         (:add-slots
          ((:markers nil)
           (:gain 1.0)
           (:access-from-file nil)
           (:file-pathname nil)))))
       (:id 8))
      (:box
       (:type :function)
       (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
       (:group-id nil)
       (:name "om-make-pathname")
       (:x 91)
       (:y 205)
       (:w 145)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :key)
         (:name "directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "name")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "type")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference pathname-name)
       (:group-id nil)
       (:name "pathname-name")
       (:x 97)
       (:y 119)
       (:w 125)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:comment
       (:x 21)
       (:y 324)
       (:w 63)
       (:h 50)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "le même nom mais en .wav")
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-markers")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines processed_labels)"
           "  (loop for i from 0 to (- (length lines) 1)"
           "        collect"
           "         (list"
           "          (sec->ms (first (nth i lines)))"
           "          ;(first (nth i lines))"
           "          (write-to-string (nth i processed_labels))"
           "          )         "
           "         )"
           "  )"
           ""
           ";(lambda (lines list_activation_labels)"
           ";  (loop for line in lines collect"
           ";        (list"
           ";         (sec->ms (first line))"
           ";         (number-to-string (round (fourth line)))"
           ";         )"
           ";        ))"))))
       (:group-id nil)
       (:name "make-markers")
       (:x 200)
       (:y 267)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 357)
       (:y 461)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 13))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 235)
       (:y 400)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 14))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-memory")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines n processed_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        ;collect (write-to-string (list n (first line) (second line)))"
           "        into mem-segments"
           "        finally return (list mem-segments processed_labels))"
           ")"
           "                                 "
           "#|"
           "(lambda (lines n  list_activation_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        into mem-segments"
           "        ;collect (write-to-string (round (/ (fourth line) div_intens)))"
           "        ;collect (write-to-string (list (round (/ (fourth line) div_intens))))"
           "        collect (write-to-string"
           "                 (list "
           "                 ; duree"
           "                  (if (> div_dur 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) div_dur)) -1)"
           "                 ;pitch"
           "                  (if (= mod_12 1) "
           "                      (if (= (round (third line)) 0) -1 (mod (round (third line))12))"
           "                    (if (< mod_12 0) -1 (round (third line)))"
           "                    )"
           "                 ;inten"
           "                  (if (> div_intens 0) (round (/ (fourth line) div_intens)) -1)"
           "                 ;voice casting"
           "                  (if (> vc 0) (round (/ (fifth line) vc)) -1)"
           "                 ;nmf"
           "                  (if (> nmf 0) (round (/ (sixth line) nmf)) -1)"
           "                 ))"
           "        into labels"
           "        finally return (list mem-segments labels)))"
           "|#"
           "                                 "))))
       (:group-id nil)
       (:name "make-memory")
       (:x 461)
       (:y 281)
       (:w 200)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 485)
       (:y 387)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 16))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 375)
       (:y 51)
       (:w 71)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 502)
       (:y 57)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 18))
      (:comment
       (:x 556)
       (:y 102)
       (:w 47)
       (:h 22)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "#sound")
       (:id 19))
      (:box
       (:type :function)
       (:reference split)
       (:group-id nil)
       (:name "split")
       (:x 554)
       (:y 335)
       (:w 59)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 20))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 592)
       (:y 388)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 21))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 486)
       (:y 468)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 22))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 593)
       (:y 462)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 23))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "select-labels")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines list_activation_labels)"
           "  (loop for line in lines "
           "        collect (append "
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
           "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
           "                 ;(list (- (second line) (first line)))"
           "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
           "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
           "                       collect (nth (+ i 1) line)"
           "                       )"
           "                 )"
           "        into labels"
           "        finally return labels"
           "        )"
           "  )"
           ""))))
       (:group-id nil)
       (:name "select-labels")
       (:x 767)
       (:y 243)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST_ACTIVATION_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 753)
       (:y 294)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value box)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value name)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 25))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "value box")
       (:x 279)
       (:y 288)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value t)
       (:id 26))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 213)
       (:y 54)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 27))
      (:box
       (:type :special)
       (:reference loop-for)
       (:group-id nil)
       (:name "for")
       (:x 508)
       (:y 92)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "from")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "to")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 28)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 27 :in 0)))
      (:connection (:from (:box 0 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 24 :in 1)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 9 :in 2))
       (:attributes (:color nil :style nil :modif (0 1/3))))
      (:connection (:from (:box 6 :out 0)) (:to (:box 25 :in 0)))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/92))))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 15 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/94))))
      (:connection (:from (:box 7 :out 1)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 14 :out 1)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 20 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 13 :in 1)))
      (:connection (:from (:box 16 :out 1)) (:to (:box 22 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 28 :in 1)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 28 :in 0)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 20 :out 1)) (:to (:box 21 :in 0)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 13 :in 2)))
      (:connection (:from (:box 21 :out 1)) (:to (:box 23 :in 0)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 25 :in 1)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 15 :in 2)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 8 :in 2)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 15 :in 1))))))
   (:group-id nil)
   (:name "loop-process-dataset")
   (:x 2264/5)
   (:y 455)
   (:w 150)
   (:h 39)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "lab_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_activation_labels")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "extension_audio_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function_process_label")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "sound") (:reactive nil))
    (:output (:name "mem") (:reactive nil))
    (:output (:name "labels") (:reactive nil)))
   (:id 47))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 2714/5)
   (:y 414)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "wav")
   (:id 48))
  (:box
   (:type :function)
   (:reference file-namestring)
   (:group-id nil)
   (:name "file-namestring")
   (:x 1280)
   (:y 704)
   (:w 117)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "P")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 49))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 650)
   (:y 735)
   (:w 53)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 50))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "value box")
   (:x 1351)
   (:y 795)
   (:w 53)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value t)
   (:id 51))
  (:box
   (:type :special)
   (:reference iterate)
   (:group-id nil)
   (:name "iterate")
   (:x 782)
   (:y 889)
   (:w 55)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 52))
  (:box
   (:type :special)
   (:reference collect)
   (:group-id nil)
   (:name "collect")
   (:x 800)
   (:y 822)
   (:w 56)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data-in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "push")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "init")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "collect") (:reactive nil))
    (:output (:name "data-out") (:reactive t))
    (:output (:name "init") (:reactive nil)))
   (:id 53))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "remove-scenario-file-from-memory")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1018 356)) (:position (-1242 177)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "mem-directory")
         (:doc "")))
       (:group-id nil)
       (:name "mem-directory")
       (:x 56)
       (:y 40)
       (:w 99)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "scenario-file")
         (:doc "")))
       (:group-id nil)
       (:name "scenario-file")
       (:x 731)
       (:y 86)
       (:w 87)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "mem-corpus") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "mem-corpus")
       (:x 97)
       (:y 201)
       (:w 89)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "remove-scen-file-from-memory")
         (:doc "")))
       (:group-id nil)
       (:name "remove-scen-file-from-memory")
       (:x 158)
       (:y 34)
       (:w 186)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 4) (:name "root_dir") (:doc "")))
       (:group-id nil)
       (:name "root_dir")
       (:x 571)
       (:y 77)
       (:w 87)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "remove-scen-file")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (500 500)) (:position (-529 112)))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (scenario-file memory-directory remove-scen-file) "
           "  (if remove-scen-file"
           "      (remove scenario-file memory-directory :test (lambda (x y) (string-equal (namestring x) (namestring y))))"
           "    memory-directory) "
           "  )"
           ""))))
       (:group-id nil)
       (:name "remove-scen-file")
       (:x 50)
       (:y 100)
       (:w 127)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "SCENARIO-FILE")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MEMORY-DIRECTORY")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "REMOVE-SCEN-FILE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
       (:group-id nil)
       (:name "om-make-pathname")
       (:x 692)
       (:y 226)
       (:w 145)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock :eval-once)
       (:lambda nil)
       (:inputs
        (:input
         (:type :key)
         (:name "directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "name")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "type")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference pathname-name)
       (:group-id nil)
       (:name "pathname-name")
       (:x 669)
       (:y 173)
       (:w 125)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference pathname-type)
       (:group-id nil)
       (:name "pathname-type")
       (:x 800)
       (:y 172)
       (:w 118)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 5 :in 1))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 7 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 2)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 0)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 2 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 2))))))
   (:group-id nil)
   (:name "remove-scenario-file-from-memory")
   (:x 659)
   (:y 346)
   (:w 222)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "mem-directory")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "scenario-file")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "remove-scen-file-from-memory")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "root_dir")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "mem-corpus") (:reactive nil)))
   (:id 54))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "value box")
   (:x 708)
   (:y 153)
   (:w 53)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value t)
   (:id 55))
  (:comment
   (:x 704)
   (:y 92)
   (:w 244)
   (:h 76)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "4b) Remove scenario file from memory of the second generator

")
   (:id 56))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name
      "loop_interpretations_variations_scenarios_remove_scen_sync")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1329 723)) (:position (-1432 -703)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "SCENARIO_GENERATOR")
         (:doc "")))
       (:group-id nil)
       (:name "SCENARIO_GENERATOR")
       (:x 2)
       (:y 9)
       (:w 167)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 773)
       (:y 800)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "LENGTH") (:doc "")))
       (:group-id nil)
       (:name "LENGTH")
       (:x 304)
       (:y 20)
       (:w 71)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "SCEN-MAX-CONT-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "SCEN-MAX-CONT-LIST")
       (:x 150)
       (:y 11)
       (:w 153)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "VOICE-MAX-CONT-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "VOICE-MAX-CONT-LIST")
       (:x 384)
       (:y 17)
       (:w 168)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 5)
         (:name "VOICE_GENERATOR_MASTER")
         (:doc "")))
       (:group-id nil)
       (:name "VOICE_GENERATOR_MASTER")
       (:x 561)
       (:y 59)
       (:w 199)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 6)
         (:name "SOUND_DB_MASTER")
         (:doc "")))
       (:group-id nil)
       (:name "SOUND_DB_MASTER")
       (:x 603)
       (:y 128)
       (:w 145)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 7) (:name "XFADE") (:doc "")))
       (:group-id nil)
       (:name "XFADE")
       (:x 556)
       (:y 153)
       (:w 62)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 8) (:name "RES_DIR") (:doc "")))
       (:group-id nil)
       (:name "RES_DIR")
       (:x 517)
       (:y 20)
       (:w 74)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 9)
         (:name "VOICE_GENERATOR_SLAVE")
         (:doc "")))
       (:group-id nil)
       (:name "VOICE_GENERATOR_SLAVE")
       (:x 824)
       (:y 55)
       (:w 187)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 10)
         (:name "SOUND_DB_SLAVE")
         (:doc "")))
       (:group-id nil)
       (:name "SOUND_DB_SLAVE")
       (:x 866)
       (:y 124)
       (:w 134)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 314)
       (:y 76)
       (:w 111)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 344)
       (:y 112)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :function)
       (:reference car)
       (:group-id nil)
       (:name "car")
       (:x 440)
       (:y 128)
       (:w 55)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :function)
       (:reference cdr)
       (:group-id nil)
       (:name "cdr")
       (:x 495)
       (:y 129)
       (:w 55)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 442)
       (:y 160)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :function)
       (:reference cons)
       (:group-id nil)
       (:name "cons")
       (:x 687)
       (:y 610)
       (:w 63)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "CAR")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CDR")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :abstraction)
       (:reference
        (:patch-from-file
         (:pathname
          (:directory (:relative :up "abstractions"))
          (:device nil)
          (:host nil)
          (:name "generate_scenario")
          (:type "opat"))))
       (:group-id nil)
       (:name "generate_scenario")
       (:x 60)
       (:y 250)
       (:w 137)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock :eval-once)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "scenario_generator")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "max_cont_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "length_scenario")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "print") (:reactive nil))
        (:output (:name "generated_scenario") (:reactive nil)))
       (:id 17))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 633)
       (:y 777)
       (:w 60)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 18))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 644)
       (:y 705)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 19))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 766)
       (:y 763)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "generate_interpretations_of_scenario_sync_master")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (500 500)) (:position (42 69)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "len_scen") (:doc "")))
           (:group-id nil)
           (:name "len_scen")
           (:x 652)
           (:y 155)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 38)
           (:y 753)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "scen_max_cont")
             (:doc "")))
           (:group-id nil)
           (:name "scen_max_cont")
           (:x 736)
           (:y 159)
           (:w 127)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "list_dur_sync_master")
             (:index 2)
             (:doc "")))
           (:group-id nil)
           (:name "list_dur_sync_master")
           (:x 104)
           (:y 754)
           (:w 135)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 3)
             (:name "voice_max_cont_list")
             (:doc "")))
           (:group-id nil)
           (:name "voice_max_cont_list")
           (:x 448)
           (:y 73)
           (:w 130)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "path_output_directory")
             (:doc "")))
           (:group-id nil)
           (:name "path_output_directory")
           (:x 817)
           (:y 260)
           (:w 148)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "xfade") (:doc "")))
           (:group-id nil)
           (:name "xfade")
           (:x 272)
           (:y 292)
           (:w 51)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 6) (:name "scenario") (:doc "")))
           (:group-id nil)
           (:name "scenario")
           (:x 298)
           (:y 167)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 7)
             (:name "voice_generator")
             (:doc "")))
           (:group-id nil)
           (:name "voice_generator")
           (:x 14)
           (:y 50)
           (:w 108)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 8)
             (:name "snd_database")
             (:doc "")))
           (:group-id nil)
           (:name "snd_database")
           (:x 5)
           (:y 304)
           (:w 104)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 179)
           (:y 715)
           (:w 105)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 10))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 452)
           (:y 311)
           (:w 71)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock :eval-once)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 11))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 757)
           (:y 349)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 577)
           (:y 349)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 665)
           (:y 349)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:type :function)
           (:reference format)
           (:group-id nil)
           (:name "format")
           (:x 573)
           (:y 278)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "DESTINATION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTROL-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 581)
           (:y 234)
           (:w 73)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "[L~DC~D]")
           (:id 16))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 901)
           (:y 576)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 843)
           (:y 504)
           (:w 102)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "ITERATION #~D")
           (:id 18))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 929)
           (:y 544)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 19))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 313)
           (:y 588)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 246)
           (:y 554)
           (:w 248)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "FILTERED GENERATED SEQUENCE~A")
           (:id 21))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 342)
           (:y 529)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 22))
          (:box
           (:type :abstraction)
           (:reference
            (:patch-from-file
             (:pathname
              (:directory (:relative :up "abstractions"))
              (:device nil)
              (:host nil)
              (:name "path_generated_sequence")
              (:type "opat"))))
           (:group-id nil)
           (:name "path_generated_sequence")
           (:x 631)
           (:y 495)
           (:w 182)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "name_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "len_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "idtf_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "path_output_directory")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "path") (:reactive nil)))
           (:id 23))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 44)
           (:y 615)
           (:w 56)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 24))
          (:box
           (:type :abstraction)
           (:reference
            (:patch-from-file
             (:pathname
              (:directory (:relative :up "abstractions"))
              (:device nil)
              (:host nil)
              (:name "generate_sequence")
              (:type "opat"))))
           (:group-id nil)
           (:name "generate_sequence")
           (:x 39)
           (:y 139)
           (:w 153)
           (:h 52)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock :eval-once)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "generator")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "max_continuity")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "scenario")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output
             (:name "filtered_generated_sequence")
             (:reactive nil))
            (:output (:name "generated_sequence") (:reactive nil)))
           (:id 25))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 502)
           (:y 762)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 26))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 435)
           (:y 728)
           (:w 248)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "OUTPUT REMIX ~A")
           (:id 27))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 531)
           (:y 703)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 28))
          (:box
           (:type :abstraction)
           (:reference
            (:patch-from-file
             (:pathname
              (:directory (:relative :up "abstractions"))
              (:device nil)
              (:host nil)
              (:name "remix_supervp_master")
              (:type "opat"))))
           (:group-id nil)
           (:name "remix_supervp_master")
           (:x 38)
           (:y 409)
           (:w 160)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOUNDS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEGMENTS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CROSSFADE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "outfile")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "out") (:reactive nil))
            (:output (:name "list_dur") (:reactive nil)))
           (:id 29))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 110)
           (:y 616)
           (:w 56)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 30))
          (:box
           (:type :special)
           (:reference loop-for)
           (:group-id nil)
           (:name "for")
           (:x 896)
           (:y 410)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "from")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "to")
             (:value 3)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "by")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 31))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 273)
           (:y 66)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 32))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 800)
           (:y 406)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 33))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 671)
           (:y 407)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 34))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 583)
           (:y 407)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 35)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 14 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/495))))
          (:connection (:from (:box 0 :out 0)) (:to (:box 15 :in 2)))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 12 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/496))))
          (:connection (:from (:box 2 :out 0)) (:to (:box 15 :in 3)))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 11 :in 0))
           (:attributes (:color nil :style nil :modif (0 -3/41))))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 32 :in 0))
           (:attributes (:color nil :style nil :modif (0 -11/60))))
          (:connection (:from (:box 5 :out 0)) (:to (:box 23 :in 5)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 29 :in 2)))
          (:connection
           (:from (:box 7 :out 0))
           (:to (:box 25 :in 2))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 8 :out 0))
           (:to (:box 25 :in 0))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 29 :in 0)))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 31 :in 1))
           (:attributes
            (:color nil :style nil :modif (0 45973/277033))))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 12 :in 0))
           (:attributes (:color nil :style nil :modif (0 190/429))))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 13 :in 0))
           (:attributes
            (:color nil :style nil :modif (0 26489/59345))))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 14 :in 0))
           (:attributes (:color nil :style nil :modif (0 0.445338))))
          (:connection (:from (:box 12 :out 0)) (:to (:box 33 :in 0)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 35 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 34 :in 0)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 1)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 17 :in 0)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 17 :in 1)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 10 :in 3)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 20 :in 0)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 20 :in 1)))
          (:connection (:from (:box 23 :out 0)) (:to (:box 29 :in 3)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 24 :out 1)) (:to (:box 1 :in 0)))
          (:connection
           (:from (:box 25 :out 0))
           (:to (:box 22 :in 0))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             nil
             :modif
             (0 -43/289))))
          (:connection (:from (:box 25 :out 0)) (:to (:box 29 :in 1)))
          (:connection (:from (:box 26 :out 0)) (:to (:box 10 :in 2)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 26 :in 0)))
          (:connection (:from (:box 28 :out 0)) (:to (:box 26 :in 1)))
          (:connection (:from (:box 29 :out 0)) (:to (:box 24 :in 0)))
          (:connection (:from (:box 29 :out 1)) (:to (:box 30 :in 0)))
          (:connection (:from (:box 30 :out 0)) (:to (:box 10 :in 4)))
          (:connection (:from (:box 30 :out 1)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 31 :out 0)) (:to (:box 19 :in 0)))
          (:connection (:from (:box 31 :out 0)) (:to (:box 23 :in 3)))
          (:connection (:from (:box 32 :out 0)) (:to (:box 23 :in 4)))
          (:connection
           (:from (:box 32 :out 0))
           (:to (:box 25 :in 1))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection (:from (:box 33 :out 0)) (:to (:box 23 :in 2)))
          (:connection (:from (:box 34 :out 0)) (:to (:box 23 :in 1)))
          (:connection
           (:from (:box 35 :out 0))
           (:to (:box 23 :in 0))))))
       (:group-id nil)
       (:name "generate_interpretations_of_scenario_sync_master")
       (:x 340)
       (:y 485)
       (:w 311)
       (:h 62)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock :eval-once)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "len_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "scen_max_cont")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "voice_max_cont_list")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "path_output_directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "xfade")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "scenario")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "voice_generator")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "snd_database")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "list_dur_sync_master") (:reactive nil)))
       (:id 21))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "generate_interpretations_of_scenario_sync_slave")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "len_scen") (:doc "")))
           (:group-id nil)
           (:name "len_scen")
           (:x 652)
           (:y 155)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 38)
           (:y 753)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "scen_max_cont")
             (:doc "")))
           (:group-id nil)
           (:name "scen_max_cont")
           (:x 736)
           (:y 159)
           (:w 127)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 3)
             (:name "voice_max_cont_list")
             (:doc "")))
           (:group-id nil)
           (:name "voice_max_cont_list")
           (:x 448)
           (:y 73)
           (:w 130)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "path_output_directory")
             (:doc "")))
           (:group-id nil)
           (:name "path_output_directory")
           (:x 817)
           (:y 260)
           (:w 148)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "xfade") (:doc "")))
           (:group-id nil)
           (:name "xfade")
           (:x 272)
           (:y 292)
           (:w 51)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 6) (:name "scenario") (:doc "")))
           (:group-id nil)
           (:name "scenario")
           (:x 298)
           (:y 167)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 7)
             (:name "voice_generator")
             (:doc "")))
           (:group-id nil)
           (:name "voice_generator")
           (:x 14)
           (:y 50)
           (:w 108)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 8)
             (:name "snd_database")
             (:doc "")))
           (:group-id nil)
           (:name "snd_database")
           (:x 5)
           (:y 304)
           (:w 104)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 9)
             (:name "slave_list_dur_sync")
             (:doc "")))
           (:group-id nil)
           (:name "slave_list_dur_sync")
           (:x 817)
           (:y 47)
           (:w 127)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 179)
           (:y 715)
           (:w 105)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 10))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 452)
           (:y 311)
           (:w 71)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock :eval-once)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 11))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 757)
           (:y 349)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 577)
           (:y 349)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 665)
           (:y 349)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:type :function)
           (:reference format)
           (:group-id nil)
           (:name "format")
           (:x 573)
           (:y 278)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "DESTINATION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTROL-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 581)
           (:y 234)
           (:w 73)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "[L~DC~D]")
           (:id 16))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 901)
           (:y 576)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 843)
           (:y 504)
           (:w 102)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "ITERATION #~D")
           (:id 18))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 929)
           (:y 544)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 19))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 313)
           (:y 588)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 246)
           (:y 554)
           (:w 248)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "FILTERED GENERATED SEQUENCE~A")
           (:id 21))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 342)
           (:y 529)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 22))
          (:box
           (:type :abstraction)
           (:reference
            (:patch-from-file
             (:pathname
              (:directory (:relative :up "abstractions"))
              (:device nil)
              (:host nil)
              (:name "path_generated_sequence")
              (:type "opat"))))
           (:group-id nil)
           (:name "path_generated_sequence")
           (:x 631)
           (:y 495)
           (:w 182)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "name_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "len_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "idtf_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "path_output_directory")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "path") (:reactive nil)))
           (:id 23))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 44)
           (:y 615)
           (:w 56)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 24))
          (:box
           (:type :abstraction)
           (:reference
            (:patch-from-file
             (:pathname
              (:directory (:relative :up "abstractions"))
              (:device nil)
              (:host nil)
              (:name "generate_sequence")
              (:type "opat"))))
           (:group-id nil)
           (:name "generate_sequence")
           (:x 39)
           (:y 139)
           (:w 153)
           (:h 52)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock :eval-once)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "generator")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "max_continuity")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "scenario")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output
             (:name "filtered_generated_sequence")
             (:reactive nil))
            (:output (:name "generated_sequence") (:reactive nil)))
           (:id 25))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 502)
           (:y 762)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 26))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 435)
           (:y 728)
           (:w 248)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "OUTPUT REMIX ~A")
           (:id 27))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 531)
           (:y 703)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 28))
          (:box
           (:type :abstraction)
           (:reference
            (:patch-from-file
             (:pathname
              (:directory (:relative :up "abstractions"))
              (:device nil)
              (:host nil)
              (:name "remix_supervp_slave")
              (:type "opat"))))
           (:group-id nil)
           (:name "remix_supervp_slave")
           (:x 25)
           (:y 442)
           (:w 151)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOUNDS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEGMENTS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CROSSFADE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "outfile")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LIST_DUR")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 29))
          (:box
           (:type :special)
           (:reference loop-for)
           (:group-id nil)
           (:name "for")
           (:x 896)
           (:y 410)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "from")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "to")
             (:value 3)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "by")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 30))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 273)
           (:y 66)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 31))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 800)
           (:y 406)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 32))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 671)
           (:y 407)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 33))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 583)
           (:y 407)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 34)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 14 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/495))))
          (:connection (:from (:box 0 :out 0)) (:to (:box 15 :in 2)))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 12 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/496))))
          (:connection (:from (:box 2 :out 0)) (:to (:box 15 :in 3)))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 11 :in 0))
           (:attributes (:color nil :style nil :modif (0 -3/41))))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 31 :in 0))
           (:attributes (:color nil :style nil :modif (0 -11/60))))
          (:connection (:from (:box 4 :out 0)) (:to (:box 23 :in 5)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 29 :in 2)))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 25 :in 2))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 7 :out 0))
           (:to (:box 25 :in 0))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 29 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 29 :in 4)))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 30 :in 1))
           (:attributes
            (:color nil :style nil :modif (0 45973/277033))))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 12 :in 0))
           (:attributes (:color nil :style nil :modif (0 190/429))))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 13 :in 0))
           (:attributes
            (:color nil :style nil :modif (0 26489/59345))))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 14 :in 0))
           (:attributes (:color nil :style nil :modif (0 0.445338))))
          (:connection (:from (:box 12 :out 0)) (:to (:box 32 :in 0)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 34 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 33 :in 0)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 1)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 17 :in 0)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 17 :in 1)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 10 :in 3)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 20 :in 0)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 20 :in 1)))
          (:connection (:from (:box 23 :out 0)) (:to (:box 29 :in 3)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 24 :out 1)) (:to (:box 1 :in 0)))
          (:connection
           (:from (:box 25 :out 0))
           (:to (:box 22 :in 0))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             nil
             :modif
             (0 0.062068947))))
          (:connection (:from (:box 25 :out 0)) (:to (:box 29 :in 1)))
          (:connection (:from (:box 26 :out 0)) (:to (:box 10 :in 2)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 26 :in 0)))
          (:connection (:from (:box 28 :out 0)) (:to (:box 26 :in 1)))
          (:connection (:from (:box 29 :out 0)) (:to (:box 24 :in 0)))
          (:connection (:from (:box 30 :out 0)) (:to (:box 19 :in 0)))
          (:connection (:from (:box 30 :out 0)) (:to (:box 23 :in 3)))
          (:connection (:from (:box 31 :out 0)) (:to (:box 23 :in 4)))
          (:connection
           (:from (:box 31 :out 0))
           (:to (:box 25 :in 1))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection (:from (:box 32 :out 0)) (:to (:box 23 :in 2)))
          (:connection (:from (:box 33 :out 0)) (:to (:box 23 :in 1)))
          (:connection
           (:from (:box 34 :out 0))
           (:to (:box 23 :in 0))))))
       (:group-id nil)
       (:name "generate_interpretations_of_scenario_sync_slave")
       (:x 815)
       (:y 469)
       (:w 303)
       (:h 60)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock :eval-once)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "len_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "scen_max_cont")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "voice_max_cont_list")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "path_output_directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "xfade")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "scenario")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "voice_generator")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "snd_database")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "slave_list_dur_sync")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 22))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 695)
       (:y 490)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 23))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 194)
       (:y 96)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 24)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 17 :in 2)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 21 :in 6)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 21 :in 7)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 21 :in 4)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 22 :in 4)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 21 :in 3)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 22 :in 3)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 22 :in 6)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 22 :in 7)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 21 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 22 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 22 :in 2)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 21 :in 2)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 19 :in 0)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 18 :in 2))
       (:attributes (:color nil :style nil :modif (0 43/501))))
      (:connection (:from (:box 17 :out 1)) (:to (:box 21 :in 5)))
      (:connection (:from (:box 17 :out 1)) (:to (:box 22 :in 5)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 19 :out 1)) (:to (:box 20 :in 0)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 16 :in 0)))
      (:connection
       (:from (:box 21 :out 1))
       (:to (:box 23 :in 0))
       (:attributes (:color nil :style nil :modif (4/151 0))))
      (:connection (:from (:box 22 :out 0)) (:to (:box 16 :in 1)))
      (:connection
       (:from (:box 23 :out 0))
       (:to (:box 22 :in 8))
       (:attributes (:color nil :style nil :modif (5/326 0))))
      (:connection (:from (:box 24 :out 0)) (:to (:box 17 :in 1)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 21 :in 1)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 22 :in 1))))))
   (:group-id nil)
   (:name "loop_interpretations_variations_scenarios_remove_scen_sync")
   (:x 628)
   (:y 782)
   (:w 370)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "SCENARIO_GENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LENGTH")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SCEN-MAX-CONT-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE-MAX-CONT-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE_GENERATOR_MASTER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND_DB_MASTER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "XFADE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RES_DIR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE_GENERATOR_SLAVE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND_DB_SLAVE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 57))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 563)
   (:y 216)
   (:w 177)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "Textures_and_Pads")
   (:id 58))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 569)
   (:y 251)
   (:w 177)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "Textures_and_Pads_48")
   (:id 59)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 57 :in 6)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 57 :in 3)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 46 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 18 :in 0)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 8 :in 1))
   (:attributes (:color nil :style nil :modif (0 -55/1026))))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 36 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 47 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 41 :in 1)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 18 :in 5)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 36 :in 2))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 41 :in 3)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 47 :in 3))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 57 :in 8)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 50 :in 0))
   (:attributes (:color nil :style nil :modif (0 0))))
  (:connection (:from (:box 15 :out 0)) (:to (:box 57 :in 0)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 18 :in 2)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 39 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 57 :in 7)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 57 :in 1)))
  (:connection
   (:from (:box 25 :out 0))
   (:to (:box 39 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 25 :out 0))
   (:to (:box 46 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 18 :in 3)))
  (:connection
   (:from (:box 27 :out 0))
   (:to (:box 18 :in 4))
   (:attributes (:color nil :style nil :modif (0 0.15722433))))
  (:connection
   (:from (:box 31 :out 0))
   (:to (:box 30 :in 0))
   (:attributes (:color nil :style nil :modif (-5704/81855 0))))
  (:connection (:from (:box 33 :out 0)) (:to (:box 31 :in 0)))
  (:connection (:from (:box 34 :out 0)) (:to (:box 57 :in 4)))
  (:connection
   (:from (:box 36 :out 0))
   (:to (:box 15 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 36 :out 0))
   (:to (:box 15 :in 2))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 37 :out 0)) (:to (:box 40 :in 0)))
  (:connection
   (:from (:box 38 :out 0))
   (:to (:box 37 :in 1))
   (:attributes (:color nil :style nil :modif (0 19/100))))
  (:connection (:from (:box 39 :out 0)) (:to (:box 37 :in 0)))
  (:connection (:from (:box 40 :out 0)) (:to (:box 43 :in 0)))
  (:connection
   (:from (:box 40 :out 0))
   (:to (:box 49 :in 0))
   (:attributes (:color nil :style nil :modif (0 0.42044336))))
  (:connection
   (:from (:box 40 :out 0))
   (:to (:box 54 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif (0.45 0))))
  (:connection (:from (:box 41 :out 0)) (:to (:box 57 :in 5)))
  (:connection (:from (:box 41 :out 1)) (:to (:box 34 :in 1)))
  (:connection (:from (:box 41 :out 2)) (:to (:box 34 :in 2)))
  (:connection (:from (:box 42 :out 0)) (:to (:box 41 :in 2)))
  (:connection (:from (:box 43 :out 0)) (:to (:box 41 :in 0)))
  (:connection (:from (:box 43 :out 0)) (:to (:box 36 :in 0)))
  (:connection
   (:from (:box 44 :out 0))
   (:to (:box 54 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 45 :out 0)) (:to (:box 44 :in 1)))
  (:connection (:from (:box 46 :out 0)) (:to (:box 44 :in 0)))
  (:connection (:from (:box 46 :out 0)) (:to (:box 54 :in 3)))
  (:connection (:from (:box 47 :out 0)) (:to (:box 57 :in 9)))
  (:connection
   (:from (:box 47 :out 1))
   (:to (:box 11 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 47 :out 2))
   (:to (:box 11 :in 2))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 48 :out 0))
   (:to (:box 47 :in 2))
   (:attributes (:color nil :style nil :modif (0 5/19))))
  (:connection (:from (:box 49 :out 0)) (:to (:box 18 :in 1)))
  (:connection (:from (:box 50 :out 0)) (:to (:box 57 :in 2)))
  (:connection (:from (:box 51 :out 0)) (:to (:box 18 :in 7)))
  (:connection (:from (:box 53 :out 0)) (:to (:box 52 :in 1)))
  (:connection
   (:from (:box 53 :out 1))
   (:to (:box 33 :in 0))
   (:attributes (:color nil :style nil :modif (3/752 0))))
  (:connection
   (:from (:box 54 :out 0))
   (:to (:box 47 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif (0 2/7))))
  (:connection (:from (:box 55 :out 0)) (:to (:box 18 :in 6)))
  (:connection (:from (:box 55 :out 0)) (:to (:box 54 :in 2)))
  (:connection
   (:from (:box 57 :out 0))
   (:to (:box 53 :in 0))
   (:attributes (:color nil :style nil :modif (0 -8/27))))
  (:connection (:from (:box 58 :out 0)) (:to (:box 4 :in 0)))))