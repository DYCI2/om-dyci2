
(:patch
 (:name "Tuto5---B2a-LoopGeneratedScenarioOnSingleFile_Synchro")
 (:doc "")
 (:info
  (:created "2018/10/12 13:57:27")
  (:modified "2021/07/09 15:42:20")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1680 1005)) (:position (0 23)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 141)
   (:y 629)
   (:w 53)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 20)
   (:id 0))
  (:comment
   (:x 141)
   (:y 614)
   (:w 177)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "4) SET LENGTH SCENARIOS")
   (:id 1))
  (:comment
   (:x 174)
   (:y 657)
   (:w 209)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "5) SET MAX CONTINUITY FOR THE SCENARIO")
   (:id 2))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 670)
   (:y 616)
   (:w 38)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.47843137))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 80)
   (:id 3))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 173)
   (:y 688)
   (:w 201)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 20)
   (:id 4))
  (:comment
   (:x 275)
   (:y 718)
   (:w 275)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "6) SET MAX CONTINUITIES FOR THE VOICES (LOOP REPEATED FOR EACH SCENARIO)")
   (:id 5))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 277)
   (:y 751)
   (:w 356)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 10 8 5 3 2))
   (:id 6))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-scenarios-with-stretch_2")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (1110 723)) (:position (0 23)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "QUERY") (:doc "")))
       (:group-id nil)
       (:name "QUERY")
       (:x 0)
       (:y 42)
       (:w 104)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "LENGTH") (:doc "")))
       (:group-id nil)
       (:name "LENGTH")
       (:x 361)
       (:y 15)
       (:w 71)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "CONTINUITY-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "CONTINUITY-LIST")
       (:x 197)
       (:y 18)
       (:w 125)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 445)
       (:y 554)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "VOICE-MAX-CONT-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "VOICE-MAX-CONT-LIST")
       (:x 424)
       (:y 36)
       (:w 157)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "VOICEGENERATOR")
         (:doc "")))
       (:group-id nil)
       (:name "VOICEGENERATOR")
       (:x 561)
       (:y 54)
       (:w 135)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "SOUND_DB") (:doc "")))
       (:group-id nil)
       (:name "SOUND_DB")
       (:x 603)
       (:y 118)
       (:w 89)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "XFADE") (:doc "")))
       (:group-id nil)
       (:name "XFADE")
       (:x 546)
       (:y 131)
       (:w 62)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "RES_DIR") (:doc "")))
       (:group-id nil)
       (:name "RES_DIR")
       (:x 517)
       (:y 15)
       (:w 74)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "list_dur") (:doc "")))
       (:group-id nil)
       (:name "list_dur")
       (:x 849)
       (:y 88)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 337)
       (:y 88)
       (:w 111)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 367)
       (:y 122)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "generate_and_write_variations_with_stretch")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size (1200 836)) (:position (0 23)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "len_scen") (:doc "")))
           (:group-id nil)
           (:name "len_scen")
           (:x 657)
           (:y 206)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 324)
           (:y 740)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "cont_scen")
             (:doc "")))
           (:group-id nil)
           (:name "cont_scen")
           (:x 741)
           (:y 210)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "cont_gen") (:doc "")))
           (:group-id nil)
           (:name "cont_gen")
           (:x 393)
           (:y 41)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "path_output_directory")
             (:doc "")))
           (:group-id nil)
           (:name "path_output_directory")
           (:x 822)
           (:y 311)
           (:w 148)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "xfade") (:doc "")))
           (:group-id nil)
           (:name "xfade")
           (:x 277)
           (:y 353)
           (:w 51)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 6) (:name "query") (:doc "")))
           (:group-id nil)
           (:name "query")
           (:x 305)
           (:y 269)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 7)
             (:name "GENERATOR")
             (:doc "")))
           (:group-id nil)
           (:name "GENERATOR")
           (:x 77)
           (:y 112)
           (:w 98)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 8)
             (:name "snd_database")
             (:doc "")))
           (:group-id nil)
           (:name "snd_database")
           (:x 6)
           (:y 341)
           (:w 104)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 9) (:name "list_dur") (:doc "")))
           (:group-id nil)
           (:name "list_dur")
           (:x 1088)
           (:y 88)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "remix")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size (1263 1005)) (:position (0 23)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "SOUNDS")
                 (:doc "")))
               (:group-id nil)
               (:name "SOUNDS")
               (:x 38)
               (:y 145)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "SEGMENTS")
                 (:doc "")))
               (:group-id nil)
               (:name "SEGMENTS")
               (:x 156)
               (:y 20)
               (:w 89)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "CROSSFADE")
                 (:doc "")))
               (:group-id nil)
               (:name "CROSSFADE")
               (:x 414)
               (:y 68)
               (:w 103)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "list_dur")
                 (:doc "")))
               (:group-id nil)
               (:name "list_dur")
               (:x 771)
               (:y 32)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "out")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "out")
               (:x 289)
               (:y 663)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "outfile")
                 (:doc "")))
               (:group-id nil)
               (:name "outfile")
               (:x 317)
               (:y 475)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 114)
               (:y 638)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 164)
               (:y 78)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 7))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 115)
               (:y 533)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference split)
               (:group-id nil)
               (:name "split")
               (:x 166)
               (:y 160)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "out1") (:reactive nil))
                (:output (:name "out2") (:reactive nil)))
               (:id 9))
              (:box
               (:type :function)
               (:reference om+)
               (:group-id nil)
               (:name "om+")
               (:x 220)
               (:y 280)
               (:w 62)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 156)
               (:y 281)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 11))
              (:box
               (:type :function)
               (:reference nth)
               (:group-id nil)
               (:name "nth")
               (:x 39)
               (:y 267)
               (:w 55)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ORIG-N")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ORIG-LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 12))
              (:box
               (:type :function)
               (:reference read-from-string)
               (:group-id nil)
               (:name "read-from-string")
               (:x 134)
               (:y 125)
               (:w 123)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "STRING")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 13))
              (:box
               (:type :function)
               (:reference 1-)
               (:group-id nil)
               (:name "1-")
               (:x 19)
               (:y 234)
               (:w 49)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 308)
               (:y 243)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 2)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 478)
               (:y 274)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-processing)
               (:group-id nil)
               (:name "supervp-processing")
               (:x 99)
               (:y 389)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SRC")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PROCESSINGS")
                 (:value "")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "BEGIN")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "END")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "FFTSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSTEP-OVERSAMP")
                 (:value 8)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOW-TYPE")
                 (:value "hanning")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SHAPE-INVARIANT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PRESERVE-TRANSIENT")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NORMALIZE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "OUTFILE")
                 (:value "out.aiff")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-timestretch)
               (:group-id nil)
               (:name "supervp-timestretch")
               (:x 297)
               (:y 335)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 565)
               (:y 178)
               (:w 46)
               (:h 32)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "in")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 19))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 296)
               (:y 216)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 20))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 559)
               (:y 151)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 21))
              (:comment
               (:x 593)
               (:y 124)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "duration event")
               (:id 22))
              (:comment
               (:x 498)
               (:y 122)
               (:w 87)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "target duration")
               (:id 23))
              (:comment
               (:x 613)
               (:y 183)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "coef stretch")
               (:id 24))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 771)
               (:y 95)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 25))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 114)
               (:y 314)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 26))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 215)
               (:y 312)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 27))
              (:box
               (:type :function)
               (:reference seq)
               (:group-id nil)
               (:name "seq")
               (:x 325)
               (:y 625)
               (:w 57)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OP")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "op+1") (:reactive nil)))
               (:id 28))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 650)
               (:y 591)
               (:w 78)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 29))
              (:box
               (:type :function)
               (:reference (:symbol "OM-DELETE-FILE" "OM-API"))
               (:group-id nil)
               (:name "om-delete-file")
               (:x 571)
               (:y 544)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NAME")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 30))
              (:box
               (:type :function)
               (:reference nil)
               (:group-id nil)
               (:name "concat-audiofiles")
               (:x 210)
               (:y 585)
               (:w 128)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FILES")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "crossfade")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "out")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 31)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 12 :in 1)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 20 :in 0))
               (:attributes (:color nil :style nil :modif (0 0))))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 31 :in 1)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 25 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 31 :in 2)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 29 :in 1)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 31 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 16 :in 1))
               (:attributes (:color nil :style nil :modif (0 -0.45))))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 16 :in 0))
               (:attributes
                (:color nil :style nil :modif (0 -1683/4277))))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 27 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 26 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 12 :in 0)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 10 :in 1)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 11 :in 1))
               (:attributes (:color nil :style nil :modif (0 -1/20))))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 21 :in 1))
               (:attributes
                (:color nil :style nil :modif (-221/2622 0))))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 17 :in 1)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 20 :in 1)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 18 :in 0))
               (:attributes (:color nil :style nil :modif (0 -1/27))))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 21 :out 0))
               (:to (:box 19 :in 0)))
              (:connection
               (:from (:box 25 :out 0))
               (:to (:box 21 :in 0)))
              (:connection
               (:from (:box 26 :out 0))
               (:to (:box 17 :in 2)))
              (:connection
               (:from (:box 27 :out 0))
               (:to (:box 17 :in 3)))
              (:connection
               (:from (:box 28 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 29 :out 0))
               (:to (:box 28 :in 1)))
              (:connection
               (:from (:box 30 :out 0))
               (:to (:box 29 :in 0)))
              (:connection
               (:from (:box 31 :out 0))
               (:to (:box 28 :in 0))))))
           (:group-id nil)
           (:name "remix")
           (:x 35)
           (:y 445)
           (:w 105)
           (:h 81)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOUNDS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEGMENTS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CROSSFADE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "list_dur")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "outfile")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 156)
           (:y 147)
           (:w 107)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "max_continuity")
           (:id 11))
          (:box
           (:type :special)
           (:reference loop-for)
           (:group-id nil)
           (:name "for")
           (:x 836)
           (:y 458)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "from")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "to")
             (:value 3)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "by")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 12))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 278)
           (:y 117)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 13))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 177)
           (:y 725)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 14))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 457)
           (:y 362)
           (:w 71)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "path_generated_sequence")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size (623 670)) (:position (126 161)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "name_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "name_scen")
               (:x 103)
               (:y 34)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "path")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "path")
               (:x 230)
               (:y 507)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "len_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "len_scen")
               (:x 222)
               (:y 34)
               (:w 74)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "cont_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_scen")
               (:x 315)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "idtf_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "idtf_gen")
               (:x 417)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "cont_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_gen")
               (:x 500)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 6)
                 (:name "path_output_directory")
                 (:doc "")))
               (:group-id nil)
               (:name "path_output_directory")
               (:x 602)
               (:y 37)
               (:w 148)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value
                  "/Users/nika/Desktop/OM7/OM-DYCI2_Tests/Results/")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :function)
               (:reference concatenate)
               (:group-id nil)
               (:name "concatenate")
               (:x 19)
               (:y 389)
               (:w 500)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "RESULT-TYPE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".aiff")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".wav")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 17)
               (:y 301)
               (:w 47)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value string)
               (:id 8))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 83)
               (:y 339)
               (:w 54)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "Scen")
               (:id 9))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 158)
               (:y 339)
               (:w 40)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_L")
               (:id 10))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 226)
               (:y 339)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 11))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 289)
               (:y 333)
               (:w 53)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "-Gen")
               (:id 12))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 363)
               (:y 333)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 13))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 203)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 299)
               (:y 110)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 401)
               (:y 174)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 525)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:type :function)
               (:reference pathname)
               (:group-id nil)
               (:name "pathname")
               (:x 266)
               (:y 445)
               (:w 91)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "P")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18))
              (:box
               (:type :function)
               (:reference namestring)
               (:group-id nil)
               (:name "namestring")
               (:x 53)
               (:y 199)
               (:w 97)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "P")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 19)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 7 :in 3)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 19 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 7 :in 2)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 7 :in 4)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 7 :in 6)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 7 :in 8)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 7 :in 10)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 7 :in 5)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 7 :in 7)))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 7 :in 9)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 7 :in 11)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 7 :in 1))))))
           (:group-id nil)
           (:name "path_generated_sequence")
           (:x 599)
           (:y 520)
           (:w 200)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "name_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "len_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "idtf_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "path_output_directory")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "path") (:reactive nil)))
           (:id 16))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 762)
           (:y 400)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 582)
           (:y 400)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 768)
           (:y 458)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 19))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 670)
           (:y 400)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 676)
           (:y 458)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 21))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 588)
           (:y 458)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 22))
          (:box
           (:type :function)
           (:reference format)
           (:group-id nil)
           (:name "format")
           (:x 578)
           (:y 329)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "DESTINATION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTROL-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 23))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 539)
           (:y 285)
           (:w 73)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "[L~DC~D]")
           (:id 24))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 796)
           (:y 627)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 25))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 739)
           (:y 555)
           (:w 102)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "ITERATION #~D")
           (:id 26))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 825)
           (:y 595)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 27))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 318)
           (:y 639)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 28))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 237)
           (:y 607)
           (:w 100)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "OUTPUT ~A")
           (:id 29))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 347)
           (:y 580)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 30))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "filter-output")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (output) "
               "  (if "
               "      (and (> (length output) 0) (nth 0 output)) "
               "      output "
               "    ;(if "
               "     ;   (and (> (length output) 0) (nth 1 output))"
               "        ;(list \"(1 0 200)\" \"(1 301 600)\")"
               "    (loop for i from 0 to 5 collect \"(1 0 100)\")"
               "      ;)"
               "    )"
               "  )"))))
           (:group-id nil)
           (:name "filter-output")
           (:x 156)
           (:y 316)
           (:w 98)
           (:h 28)
           (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock :eval-once)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "OUTPUT")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 31))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 119)
           (:y 351)
           (:w 78)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 32))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 524)
           (:y 638)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 33))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 457)
           (:y 604)
           (:w 120)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "original output ~A")
           (:id 34))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 553)
           (:y 579)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 35))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2SETPARAM" "DYCI2"))
           (:group-id nil)
           (:name "dyci2setparam")
           (:x 52)
           (:y 239)
           (:w 116)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PARAMETER")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "VALUE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 36))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2QUERY" "DYCI2"))
           (:group-id nil)
           (:name "dyci2query")
           (:x 157)
           (:y 276)
           (:w 96)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "QUERY")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 37))
          (:box
           (:type :function)
           (:reference om+)
           (:group-id nil)
           (:name "om+")
           (:x 833)
           (:y 507)
           (:w 62)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 38)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 20 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/495))))
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 23 :in 2))
           (:attributes (:color nil :style nil :modif (0 -6/91))))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 17 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/496))))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 23 :in 3))
           (:attributes (:color nil :style nil :modif (0 17/87))))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 15 :in 0))
           (:attributes (:color nil :style nil :modif (0 -3/41))))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 13 :in 0))
           (:attributes (:color nil :style nil :modif (0 -11/60))))
          (:connection (:from (:box 4 :out 0)) (:to (:box 16 :in 5)))
          (:connection
           (:from (:box 5 :out 0))
           (:to (:box 10 :in 2))
           (:attributes
            (:color nil :style nil :modif (0 -0.09545457))))
          (:connection (:from (:box 6 :out 0)) (:to (:box 37 :in 1)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 36 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 3)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 36 :in 1)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 38 :in 0)))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 16 :in 4))
           (:attributes (:color nil :style nil :modif (0 -1/4))))
          (:connection (:from (:box 13 :out 0)) (:to (:box 36 :in 2)))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 12 :in 1))
           (:attributes
            (:color nil :style nil :modif (0 45973/277033))))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 17 :in 0))
           (:attributes (:color nil :style nil :modif (0 190/429))))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 18 :in 0))
           (:attributes
            (:color nil :style nil :modif (0 26489/59345))))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 20 :in 0))
           (:attributes (:color nil :style nil :modif (0 0.445338))))
          (:connection (:from (:box 16 :out 0)) (:to (:box 10 :in 4)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 19 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 22 :in 0)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 16 :in 2)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 16 :in 1)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 16 :in 0)))
          (:connection (:from (:box 23 :out 0)) (:to (:box 18 :in 1)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 23 :in 1)))
          (:connection
           (:from (:box 25 :out 0))
           (:to (:box 14 :in 1))
           (:attributes (:color nil :style nil :modif (0 -8/77))))
          (:connection (:from (:box 26 :out 0)) (:to (:box 25 :in 0)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 25 :in 1)))
          (:connection
           (:from (:box 28 :out 0))
           (:to (:box 14 :in 3))
           (:attributes (:color nil :style nil :modif (0 14/65))))
          (:connection (:from (:box 29 :out 0)) (:to (:box 28 :in 0)))
          (:connection (:from (:box 30 :out 0)) (:to (:box 28 :in 1)))
          (:connection (:from (:box 31 :out 0)) (:to (:box 32 :in 1)))
          (:connection (:from (:box 31 :out 0)) (:to (:box 35 :in 0)))
          (:connection
           (:from (:box 32 :out 0))
           (:to (:box 10 :in 1))
           (:attributes (:color nil :style nil :modif (0 -3/16))))
          (:connection (:from (:box 32 :out 0)) (:to (:box 30 :in 0)))
          (:connection
           (:from (:box 33 :out 0))
           (:to (:box 14 :in 2))
           (:attributes (:color nil :style nil :modif (0 1/33))))
          (:connection (:from (:box 34 :out 0)) (:to (:box 33 :in 0)))
          (:connection (:from (:box 35 :out 0)) (:to (:box 33 :in 1)))
          (:connection (:from (:box 36 :out 0)) (:to (:box 37 :in 0)))
          (:connection (:from (:box 37 :out 0)) (:to (:box 31 :in 0)))
          (:connection (:from (:box 38 :out 0)) (:to (:box 16 :in 3)))
          (:connection
           (:from (:box 38 :out 0))
           (:to (:box 27 :in 0))))))
       (:group-id nil)
       (:name "generate_and_write_variations_with_stretch")
       (:x 623)
       (:y 328)
       (:w 273)
       (:h 104)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "len_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_gen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "path_output_directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "xfade")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "query")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GENERATOR")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "snd_database")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "list_dur")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 12 :in 5)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 12 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 12 :in 6)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 12 :in 7)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 12 :in 4)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 12 :in 3)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 12 :in 8)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 3 :in 0))))))
   (:group-id nil)
   (:name "loop-scenarios-with-stretch_2")
   (:x 531)
   (:y 794)
   (:w 200)
   (:h 30)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "QUERY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LENGTH")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTINUITY-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE-MAX-CONT-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICEGENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND_DB")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "XFADE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RES_DIR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_dur")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-process-dataset")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (1180 635)) (:position (618 678)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "lab_files") (:doc "")))
       (:group-id nil)
       (:name "lab_files")
       (:x 327)
       (:y 65)
       (:w 66)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "mem") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "mem")
       (:x 279)
       (:y 467)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "list_activation_labels")
         (:doc "")))
       (:group-id nil)
       (:name "list_activation_labels")
       (:x 411)
       (:y 76)
       (:w 141)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "function_process_labels")
         (:doc "")))
       (:group-id nil)
       (:name "function_process_labels")
       (:x 588)
       (:y 76)
       (:w 161)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name "TEXTBUFFER")
       (:x 219)
       (:y 176)
       (:w 148)
       (:h 82)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params (:read-mode :lines-cols))
       (:value
        (:object
         (:class textbuffer)
         (:slots ((:contents nil)))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 4))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 182)
       (:y 122)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 5))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 172)
       (:y 443)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 6))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 275)
       (:y 362)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 276)
       (:y 423)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 448)
       (:y 304)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value box)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value name)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "select-labels")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines list_activation_labels)"
           "  (loop for line in lines "
           "        collect (append "
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
           "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
           "                 ;(list (- (second line) (first line)))"
           "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
           "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
           "                       collect (nth (+ i 1) line)"
           "                       )"
           "                 )"
           "        into labels"
           "        finally return labels"
           "        )"
           "  )"
           ""))))
       (:group-id nil)
       (:name "select-labels")
       (:x 438)
       (:y 264)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST_ACTIVATION_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 4 :out 1)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 7 :out 1)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1))))))
   (:group-id nil)
   (:name "loop-process-dataset")
   (:x 1229)
   (:y 358)
   (:w 150)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "lab_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_activation_labels")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function_process_labels")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "mem") (:reactive nil)))
   (:id 8))
  (:box
   (:type :function)
   (:reference format)
   (:group-id nil)
   (:name "format")
   (:x 1182)
   (:y 693)
   (:w 125)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "DESTINATION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTROL-STRING")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1034)
   (:y 672)
   (:w 118)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "~a_~a_[~A][~a]")
   (:id 10))
  (:box
   (:type :function)
   (:reference file-namestring)
   (:group-id nil)
   (:name "file-namestring")
   (:x 1434)
   (:y 338)
   (:w 117)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "P")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 1307)
   (:y 301)
   (:w 65)
   (:h 42)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 12))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 1231)
   (:y 304)
   (:w 53)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:type :special)
   (:reference iterate)
   (:group-id nil)
   (:name "iterate")
   (:x 617)
   (:y 872)
   (:w 58)
   (:h 42)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.6266593337059021D0
       0.011445105075836182D0
       0.044897355139255524D0
       0.4))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 14))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 1153)
   (:y 396)
   (:w 226)
   (:h 113)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(16 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"))
       (:labls
        (:list
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(16 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"))))))
   (:id 15))
  (:box
   (:type :function)
   (:reference format)
   (:group-id nil)
   (:name "format")
   (:x 222)
   (:y 560)
   (:w 80)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "DESTINATION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTROL-STRING")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 198)
   (:y 279)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 0 15 0 0))
   (:id 17))
  (:box
   (:type :function)
   (:reference split)
   (:group-id nil)
   (:name "split")
   (:x 217)
   (:y 497)
   (:w 100)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "out1") (:reactive nil))
    (:output (:name "out2") (:reactive nil))
    (:output (:name "out3") (:reactive nil))
    (:output (:name "out4") (:reactive nil)))
   (:id 18))
  (:comment
   (:x 159)
   (:y 3)
   (:w 894)
   (:h 96)
   (:fgcolor nil)
   (:bgcolor
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.48235294))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 18) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "OM-DYCI2 B2a: LOOPED AUTOMATIC GENERATION OF SCENARIOS ON SINGLE FILES
- 1st track generated with \"memory = file used to generate the scenario\"
& other tracks allowed to use events from the file used to generate the scenario (see patches B1)
- the events are stretched so that all the tracks are syncronized on track 1 (see patch B2b)")
   (:id 19))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1078)
   (:y 644)
   (:w 335)
   (:h 30)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "B2")
   (:id 20))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "function_process_label")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (e list_activation_labels) "
       "  (let ("
       "        (div_dur (nth 0 list_activation_labels))"
       "        (mod_12 (nth 1 list_activation_labels))"
       "        (div_intens  (nth 2 list_activation_labels))"
       "        (vc (nth 3 list_activation_labels))"
       "        (nmf (nth 4 list_activation_labels))"
       "        (query_dur (nth 0 e))"
       "        (query_pitch (nth 1 e))"
       "        (query_intens  (nth 2 e))"
       "        (query_vc (nth 3 e))"
       "        (query_nmf (nth 4 e))"
       "        )"
       "    (write-to-string"
       "     (list "
       "      ;duration label"
       "      (if (and (> div_dur 0) (> query_dur -1))"
       "          (round (/ query_dur div_dur)) "
       "        -1)"
       "      ;pitch label"
       "     (if (and (> mod_12 0) (> query_pitch -1))"
       "         (if (= mod_12 2) "
       "             (if (= (round query_pitch) 0) -1 (mod (round query_pitch)12))"
       "           (round query_pitch))"
       "       -1)"
       "      ;intensity label"
       "      (if (and (> div_intens 0)  (> query_intens -1))"
       "          (round (/ query_intens div_intens)) "
       "        -1)"
       "      ;voice casting label"
       "      (if (and (> vc 0)  (> query_vc -1)) "
       "          (round (/ query_vc vc)) "
       "        -1)"
       "      ;nmf label"
       "      (if (and (> nmf 0)  (> query_nmf -1)) "
       "          (round (/ query_nmf nmf)) "
       "        -1)"
       "      )"
       "     )"
       "    ))"))))
   (:group-id nil)
   (:name "function_process_label")
   (:x 296)
   (:y 287)
   (:w 161)
   (:h 28)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.7890212535858154D0
       0.8168872594833374D0
       0.6561802625656128D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input (:type :standard) (:name "E") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST_ACTIVATION_LABELS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:type :function)
   (:reference (:symbol "OM-DIRECTORY" "OM-API"))
   (:group-id nil)
   (:name "om-directory")
   (:x 630)
   (:y 269)
   (:w 105)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATH")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "type") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 751)
   (:y 224)
   (:w 100)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "seg_desc")
   (:id 23))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "make-local-dyci2-path")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (500 500)) (:position (815 433)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (folder corpus_subfolder) "
       "  (namestring "
       "   (merge-pathnames "
       "    (string+ folder \"Corpus/\" corpus_subfolder \"/\") "
       "    ;(om-user-home)"
       "    )))"
       "  "))))
   (:group-id nil)
   (:name "make-local-dyci2-path")
   (:x 578)
   (:y 231)
   (:w 155)
   (:h 29)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "FOLDER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CORPUS_SUBFOLDER")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-process-dataset")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (913 500)) (:position (105 138)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "lab_files") (:doc "")))
       (:group-id nil)
       (:name "lab_files")
       (:x 212)
       (:y 2)
       (:w 66)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "sound") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "sound")
       (:x 229)
       (:y 509)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "mem") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "mem")
       (:x 489)
       (:y 512)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "list_activation_labels")
         (:doc "")))
       (:group-id nil)
       (:name "list_activation_labels")
       (:x 545)
       (:y 6)
       (:w 141)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "labels") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "labels")
       (:x 594)
       (:y 507)
       (:w 53)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "extension_audio_files")
         (:doc "")))
       (:group-id nil)
       (:name "extension_audio_files")
       (:x 717)
       (:y 2)
       (:w 147)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "function_process_label")
         (:doc "")))
       (:group-id nil)
       (:name "function_process_label")
       (:x 956)
       (:y 38)
       (:w 155)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name "TEXTBUFFER")
       (:x 284)
       (:y 115)
       (:w 148)
       (:h 82)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params (:read-mode :lines-cols))
       (:value
        (:object
         (:class textbuffer)
         (:slots ((:contents nil)))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 7))
      (:box
       (:type :object)
       (:reference sound)
       (:group-id nil)
       (:name nil)
       (:x 114)
       (:y 312)
       (:w 300)
       (:h 71)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value :choose-file)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "markers")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "access-from-file")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "markers") (:reactive nil))
        (:output (:name "access-from-file") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class sound)
         (:slots
          ((:onset 0)
           (:duration 0)
           (:n-samples nil)
           (:n-channels nil)
           (:sample-rate nil)
           (:smpl-type :float)
           (:sample-size 16)))
         (:add-slots
          ((:markers nil)
           (:gain 1.0)
           (:access-from-file nil)
           (:file-pathname nil)))))
       (:id 8))
      (:box
       (:type :function)
       (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
       (:group-id nil)
       (:name "om-make-pathname")
       (:x 93)
       (:y 205)
       (:w 145)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :key)
         (:name "directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "name")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "type")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference pathname-name)
       (:group-id nil)
       (:name "pathname-name")
       (:x 97)
       (:y 119)
       (:w 125)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:comment
       (:x 21)
       (:y 324)
       (:w 63)
       (:h 50)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "le même nom mais en .wav")
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-markers")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines processed_labels)"
           "  (loop for i from 0 to (- (length lines) 1)"
           "        collect"
           "         (list"
           "          (sec->ms (first (nth i lines)))"
           "          ;(first (nth i lines))"
           "          (write-to-string (nth i processed_labels))"
           "          )         "
           "         )"
           "  )"
           ""
           ";(lambda (lines list_activation_labels)"
           ";  (loop for line in lines collect"
           ";        (list"
           ";         (sec->ms (first line))"
           ";         (number-to-string (round (fourth line)))"
           ";         )"
           ";        ))"))))
       (:group-id nil)
       (:name "make-markers")
       (:x 271)
       (:y 279)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 213)
       (:y 54)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 13))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 357)
       (:y 461)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 14))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 235)
       (:y 400)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 15))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-memory")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines n processed_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        ;collect (write-to-string (list n (first line) (second line)))"
           "        into mem-segments"
           "        finally return (list mem-segments processed_labels))"
           ")"
           "                                 "
           "#|"
           "(lambda (lines n  list_activation_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        into mem-segments"
           "        ;collect (write-to-string (round (/ (fourth line) div_intens)))"
           "        ;collect (write-to-string (list (round (/ (fourth line) div_intens))))"
           "        collect (write-to-string"
           "                 (list "
           "                 ; duree"
           "                  (if (> div_dur 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) div_dur)) -1)"
           "                 ;pitch"
           "                  (if (= mod_12 1) "
           "                      (if (= (round (third line)) 0) -1 (mod (round (third line))12))"
           "                    (if (< mod_12 0) -1 (round (third line)))"
           "                    )"
           "                 ;inten"
           "                  (if (> div_intens 0) (round (/ (fourth line) div_intens)) -1)"
           "                 ;voice casting"
           "                  (if (> vc 0) (round (/ (fifth line) vc)) -1)"
           "                 ;nmf"
           "                  (if (> nmf 0) (round (/ (sixth line) nmf)) -1)"
           "                 ))"
           "        into labels"
           "        finally return (list mem-segments labels)))"
           "|#"
           "                                 "))))
       (:group-id nil)
       (:name "make-memory")
       (:x 461)
       (:y 281)
       (:w 200)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 485)
       (:y 387)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 17))
      (:box
       (:type :special)
       (:reference loop-for)
       (:group-id nil)
       (:name "for")
       (:x 508)
       (:y 92)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "from")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "to")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 18))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 375)
       (:y 51)
       (:w 71)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 502)
       (:y 57)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 20))
      (:comment
       (:x 556)
       (:y 102)
       (:w 47)
       (:h 22)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "#sound")
       (:id 21))
      (:box
       (:type :function)
       (:reference split)
       (:group-id nil)
       (:name "split")
       (:x 554)
       (:y 335)
       (:w 59)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 22))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 592)
       (:y 388)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 23))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 486)
       (:y 468)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 593)
       (:y 462)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 25))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "select-labels")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines list_activation_labels)"
           "  (loop for line in lines "
           "        collect (append "
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
           "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
           "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
           "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
           "                       collect (nth (+ i 1) line)"
           "                       )"
           "                 )"
           "        into labels"
           "        finally return labels"
           "        )"
           "  )"
           ""))))
       (:group-id nil)
       (:name "select-labels")
       (:x 767)
       (:y 243)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST_ACTIVATION_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 26))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 753)
       (:y 294)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value box)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value name)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 27))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "value box")
       (:x 399)
       (:y 280)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value t)
       (:id 28)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 0 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 26 :in 1)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 9 :in 2))
       (:attributes (:color nil :style nil :modif (0 1/3))))
      (:connection (:from (:box 6 :out 0)) (:to (:box 27 :in 0)))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/92))))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 16 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/94))))
      (:connection (:from (:box 7 :out 1)) (:to (:box 26 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 15 :out 1)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 22 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 17 :out 1)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 16 :in 1)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 22 :out 1)) (:to (:box 23 :in 0)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 14 :in 2)))
      (:connection (:from (:box 23 :out 1)) (:to (:box 25 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 27 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 16 :in 2)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 8 :in 2))))))
   (:group-id nil)
   (:name "loop-process-dataset")
   (:x 656)
   (:y 357)
   (:w 150)
   (:h 39)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "lab_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_activation_labels")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "extension_audio_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function_process_label")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "sound") (:reactive nil))
    (:output (:name "mem") (:reactive nil))
    (:output (:name "labels") (:reactive nil)))
   (:id 25))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 571)
   (:y 183)
   (:w 155)
   (:h 31)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "All_files")
   (:id 26))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 753)
   (:y 261)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "wav")
   (:id 27))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 601)
   (:y 398)
   (:w 231)
   (:h 102)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(1 0 472)"
         "(1 472 2636)"
         "(1 2636 3316)"
         "(1 3316 3648)"
         "(1 3648 6636)"
         "(1 6636 7146)"
         "(1 7146 8636)"
         "(1 8636 9316)"
         "(1 9316 11970)"
         "(1 11970 12650)"
         "(1 12650 12986)"
         "(1 12986 17304)"
         "(1 17304 17650)"
         "(1 17650 18472)"
         "(1 18472 18782)"
         "(1 18782 21318)"
         "(1 21318 23636)"
         "(1 23636 23978)"
         "(1 23978 25318)"
         "(1 25318 25646)"
         "(1 25646 29304)"
         "(1 29304 30648)"
         "(1 30648 31970)"
         "(1 31970 32486)"
         "(1 32486 34470)"
         "(1 34470 35986)"
         "(1 35986 37304)"
         "(1 37304 37972)"
         "(1 37972 38316)"
         "(1 38316 39970)"
         "(1 39970 41148)"
         "(1 41148 42636)"
         "(1 42636 43814)"
         "(1 43814 45304)"
         "(1 45304 45530)"
         "(1 45530 45762)"
         "(1 45762 45984)"
         "(1 45984 48152)"
         "(1 48152 50636)"
         "(1 50636 51980)"
         "(2 0 2622)"
         "(2 2622 4746)"
         "(2 4746 5402)"
         "(2 5402 6666)"
         "(2 6666 9304)"
         "(2 9304 9664)"
         "(2 9664 10318)"
         "(2 10318 10594)"
         "(2 10594 11276)"
         "(2 11276 11970)"
         "(2 11970 12330)"
         "(2 12330 12636)"
         "(2 12636 12876)"
         "(2 12876 13326)"
         "(2 13326 13944)"
         "(2 13944 14276)"
         "(2 14276 14896)"
         "(2 14896 16998)"
         "(2 16998 17342)"
         "(2 17342 18634)"
         "(2 18634 23972)"
         "(2 23972 25304)"
         "(2 25304 29304)"
         "(2 29304 34640)"
         "(2 34640 37290)"
         "(2 37290 39996)"
         "(2 39996 42098)"
         "(2 42098 42660)"
         "(2 42660 45322)"
         "(2 45322 47982)"
         "(2 47982 50648)"
         "(3 11480 11728)"
         "(3 11728 12100)"
         "(3 12100 12518)"
         "(3 12518 12796)"
         "(3 12796 13198)"
         "(3 13198 13648)"
         "(3 13648 14010)"
         "(3 14010 14532)"
         "(3 14532 14820)"
         "(3 14820 15198)"
         "(3 15198 15590)"
         "(3 15590 16096)"
         "(3 16096 16420)"
         "(3 16420 16652)"
         "(3 16652 17012)"
         "(3 17012 17350)"
         "(3 17350 17636)"
         "(3 17636 17996)"
         "(3 17996 18456)"
         "(3 18456 18966)"
         "(3 18966 19374)"
         "(3 19374 19758)"
         "(3 19758 19998)"
         "(3 19998 20362)"
         "(3 20362 20762)"
         "(3 20762 21080)"
         "(3 21080 21362)"
         "(3 21362 21712)"
         "(3 21712 21952)"
         "(3 21952 22292)"
         "(3 22292 22948)"
         "(3 22948 23740)"
         "(3 23740 24138)"
         "(3 24138 24426)"
         "(3 24426 24830)"
         "(3 24830 25294)"
         "(3 25294 25490)"
         "(3 25490 25902)"
         "(3 25902 26262)"
         "(3 26262 26588)"
         "(3 26588 26944)"
         "(3 26944 27366)"
         "(3 27366 27714)"
         "(3 27714 27980)"
         "(3 27980 28328)"
         "(3 28328 28572)"
         "(3 28572 28908)"
         "(3 28908 29500)"
         "(3 29500 29818)"
         "(3 29818 30290)"
         "(3 30290 30532)"
         "(3 30532 30872)"
         "(3 30872 31222)"
         "(3 31222 31444)"
         "(3 31444 31654)"
         "(3 31654 31916)"
         "(3 31916 32192)"
         "(3 32192 33014)"
         "(3 33014 33360)"
         "(3 33360 33622)"
         "(3 33622 34844)"
         "(3 34844 35546)"
         "(3 35546 35764)"
         "(3 35764 36260)"
         "(3 36260 36498)"
         "(3 36498 36782)"
         "(3 36782 37224)"
         "(3 37224 37732)"
         "(3 37732 38104)"
         "(3 38104 38384)"
         "(3 38384 38634)"
         "(3 38634 39176)"
         "(3 39176 39874)"
         "(3 39874 40214)"
         "(3 40214 40482)"
         "(3 40482 42016)"
         "(3 42016 42380)"
         "(3 42380 42728)"
         "(3 42728 42922)"
         "(3 42922 43422)"
         "(3 43422 44168)"
         "(3 44168 45078)"
         "(3 45078 45632)"
         "(3 45632 45992)"
         "(3 45992 46312)"
         "(3 46312 47012)"
         "(3 47012 47222)"
         "(3 47222 47800)"
         "(3 47800 48506)"
         "(3 48506 48826)"
         "(3 48826 49252)"
         "(3 49252 49618)"
         "(3 49618 49978)"
         "(3 49978 50328)"
         "(3 50328 50636)"
         "(3 50636 50910)"
         "(3 50910 51374)"
         "(3 51374 51742)"
         "(3 51742 52112)"
         "(3 52112 52448)"
         "(3 52448 52736)"
         "(3 52736 52930)"
         "(3 52930 53326)"
         "(3 53326 53872)"
         "(3 53872 54240)"
         "(3 54240 54588)"
         "(3 54588 54988)"
         "(3 54988 55238)"
         "(3 55238 55686)"
         "(3 55686 56010)"
         "(3 56010 56402)"
         "(3 56402 56768)"
         "(3 56768 57014)"
         "(3 57014 57480)"
         "(3 57480 57906)"
         "(3 57906 58230)"
         "(3 58230 58526)"
         "(3 58526 58770)"
         "(3 58770 59634)"
         "(3 59634 60000)"
         "(3 60000 60334)"
         "(3 60334 60702)"
         "(3 60702 60930)"
         "(3 60930 61544)"
         "(3 61544 62090)"
         "(3 62090 62378)"
         "(3 62378 63006)"
         "(3 63006 63536)"
         "(3 63536 63866)"
         "(3 63866 64804)"
         "(3 64804 64956)"
         "(3 64956 65194)"
         "(3 65194 65756)"
         "(3 65756 66092)"
         "(3 66092 66904)"
         "(3 66904 67204)"
         "(3 67204 67560)"
         "(3 67560 67886)"
         "(3 67886 68194)"
         "(3 68194 68532)"
         "(3 68532 69002)"
         "(3 69002 69362)"
         "(3 69362 69684)"
         "(3 69684 70092)"
         "(3 70092 70330)"
         "(3 70330 70552)"
         "(3 70552 70882)"
         "(3 70882 71236)"
         "(3 71236 71496)"
         "(3 71496 71854)"
         "(3 71854 72236)"
         "(3 72236 72438)"
         "(3 72438 72704)"
         "(3 72704 73244)"
         "(3 73244 73546)"
         "(3 73546 73904)"
         "(3 73904 74410)"
         "(3 74410 74716)"
         "(3 74716 75246)"
         "(3 75246 75540)"
         "(3 75540 75828)"
         "(3 75828 76156)"
         "(3 76156 76480)"
         "(3 76480 76778)"
         "(3 76778 77290)"
         "(3 77290 77588)"
         "(3 77588 77944)"
         "(3 77944 78358)"
         "(3 78358 78674)"
         "(3 78674 79206)"
         "(3 79206 79662)"
         "(3 79662 79928)"
         "(3 79928 80428)"
         "(3 80428 80646)"
         "(3 80646 81182)"
         "(3 81182 81424)"
         "(3 81424 81878)"
         "(3 81878 82252)"
         "(3 82252 82558)"
         "(3 82558 82992)"
         "(3 82992 83346)"
         "(3 83346 83666)"
         "(3 83666 84074)"
         "(3 84074 84424)"
         "(3 84424 84802)"
         "(3 84802 85162)"
         "(3 85162 86058)"
         "(3 86058 86518)"
         "(3 86518 86930)"
         "(3 86930 87450)"
         "(3 87450 87988)"
         "(3 87988 88552)"
         "(3 88552 88738)"
         "(3 88738 89088)"
         "(3 89088 89408)"
         "(3 89408 89676)"
         "(3 89676 90042)"
         "(3 90042 90882)"
         "(3 90882 91072)"
         "(3 91072 91728)"
         "(3 91728 92076)"
         "(3 92076 92330)"
         "(3 92330 92760)"
         "(3 92760 93038)"
         "(3 93038 93258)"
         "(3 93258 93748)"
         "(3 93748 93964)"
         "(3 93964 94280)"
         "(3 94280 94680)"
         "(3 94680 94946)"
         "(3 94946 95218)"
         "(3 95218 95632)"
         "(3 95632 95866)"
         "(3 95866 96110)"
         "(3 96110 96628)"
         "(3 96628 97326)"
         "(3 97326 97702)"
         "(3 97702 97968)"
         "(3 97968 99494)"
         "(3 99494 99880)"
         "(3 99880 100226)"
         "(3 100226 100622)"
         "(3 100622 100906)"
         "(3 100906 101092)"
         "(3 101092 101646)"
         "(3 101646 102368)"
         "(3 102368 102564)"
         "(3 102564 103128)"
         "(3 103128 103482)"
         "(3 103482 103808)"
         "(3 103808 104492)"
         "(3 104492 104704)"
         "(3 104704 105278)"
         "(3 105278 105518)"
         "(3 105518 105990)"
         "(3 105990 106302)"
         "(3 106302 106736)"
         "(3 106736 107098)"
         "(3 107098 107462)"
         "(3 107462 107808)"
         "(3 107808 108110)"
         "(3 108110 108400)"
         "(3 108400 108862)"
         "(3 108862 109226)"
         "(3 109226 109606)"
         "(3 109606 109934)"
         "(3 109934 110218)"
         "(3 110218 110686)"
         "(3 110686 111350)"
         "(3 111350 111736)"
         "(3 111736 112078)"
         "(3 112078 112474)"
         "(3 112474 112714)"
         "(3 112714 113144)"
         "(3 113144 113436)"
         "(3 113436 113944)"
         "(3 113944 114230)"
         "(3 114230 114500)"
         "(3 114500 114974)"
         "(3 114974 115394)"
         "(3 115394 115706)"
         "(3 115706 116024)"
         "(3 116024 116234)"
         "(3 116234 116856)"
         "(3 116856 117104)"
         "(3 117104 117484)"
         "(3 117484 117840)"
         "(3 117840 118180)"
         "(3 118180 118466)"
         "(3 118466 119028)"
         "(3 119028 119576)"
         "(3 119576 119820)"
         "(3 119820 120584)"
         "(3 120584 121012)"
         "(3 121012 121314)"
         "(3 121314 122442)"
         "(3 122442 122708)"
         "(3 122708 123240)"
         "(3 123240 123568)"
         "(3 123568 124466)"
         "(3 124466 124726)"
         "(4 376 2796)"
         "(4 2796 3068)"
         "(4 3068 3268)"
         "(4 3268 3514)"
         "(4 3514 3726)"
         "(4 3726 3982)"
         "(4 3982 4198)"
         "(4 4198 4430)"
         "(4 4430 4652)"
         "(4 4652 5532)"
         "(4 5532 5744)"
         "(4 5744 5982)"
         "(4 5982 6254)"
         "(4 6254 6462)"
         "(4 6462 6860)"
         "(4 6860 7312)"
         "(4 7312 7530)"
         "(4 7530 7746)"
         "(4 7746 7984)"
         "(4 7984 8334)"
         "(4 8334 8554)"
         "(4 8554 8792)"
         "(4 8792 10250)"
         "(4 10250 10458)"
         "(4 10458 10924)"
         "(4 10924 11280)"
         "(4 11280 11496)"
         "(4 11496 11704)"
         "(4 11704 11916)"
         "(4 11916 12134)"
         "(4 12134 12348)"
         "(4 12348 12914)"
         "(4 12914 13310)"
         "(4 13310 13546)"
         "(4 13546 13758)"
         "(4 13758 14238)"
         "(4 14238 14526)"
         "(4 14526 14802)"
         "(4 14802 15078)"
         "(4 15078 15394)"
         "(4 15394 15656)"
         "(4 15656 16140)"
         "(4 16140 16344)"
         "(4 16344 16820)"
         "(4 16820 17714)"
         "(4 17714 17998)"
         "(4 17998 18462)"
         "(4 18462 19214)"
         "(4 19214 19550)"
         "(4 19550 20510)"
         "(4 20510 21100)"
         "(4 21100 21340)"
         "(4 21340 21556)"
         "(4 21556 21770)"
         "(4 21770 21990)"
         "(4 21990 22218)"
         "(4 22218 22454)"
         "(4 22454 22774)"
         "(4 22774 23008)"
         "(4 23008 23466)"
         "(4 23466 24136)"
         "(4 24136 24820)"
         "(4 24820 25428)"
         "(4 25428 26414)"
         "(4 26414 26664)"
         "(4 26664 27102)"
         "(4 27102 27438)"
         "(4 27438 27654)"
         "(4 27654 28142)"
         "(4 28142 28640)"
         "(4 28640 28978)"
         "(4 28978 29210)"
         "(4 29210 29486)"
         "(4 29486 29714)"
         "(4 29714 29962)"
         "(4 29962 30188)"
         "(4 30188 30422)"
         "(4 30422 30624)"
         "(4 30624 30848)"
         "(4 30848 31054)"
         "(4 31054 31282)"
         "(4 31282 31494)"
         "(4 31494 31926)"
         "(4 31926 32162)"
         "(4 32162 32388)"
         "(4 32388 32862)"
         "(4 32862 33094)"
         "(4 33094 33734)"
         "(4 33734 34094)"
         "(4 34094 34310)"
         "(4 34310 34626)"
         "(4 34626 34986)"
         "(4 34986 35332)"
         "(4 35332 35662)"
         "(4 35662 35898)"
         "(4 35898 36140)"
         "(4 36140 36348)"
         "(4 36348 36864)"
         "(4 36864 37074)"
         "(4 37074 37350)"
         "(4 37350 37880)"
         "(4 37880 38314)"
         "(4 38314 38624)"
         "(4 38624 39770)"
         "(4 39770 40360)"
         "(4 40360 41174)"
         "(4 41174 41522)"
         "(4 41522 41968)"
         "(4 41968 43254)"
         "(4 43254 43548)"
         "(4 43548 43926)"
         "(4 43926 44230)"
         "(4 44230 44464)"
         "(4 44464 44704)"
         "(4 44704 44924)"
         "(4 44924 45602)"
         "(4 45602 45848)"
         "(4 45848 46184)"
         "(4 46184 46520)"
         "(4 46520 46772)"
         "(4 46772 47094)"
         "(4 47094 47300)"
         "(4 47300 47608)"
         "(4 47608 47814)"
         "(4 47814 48188)"
         "(4 48188 48426)"
         "(4 48426 48662)"
         "(4 48662 49188)"
         "(4 49188 49388)"
         "(4 49388 49748)"
         "(4 49748 50072)"
         "(4 50072 50404)"
         "(4 50404 50658)"
         "(4 50658 50958)"
         "(4 50958 51330)"
         "(4 51330 51564)"
         "(4 51564 51872)"
         "(4 51872 52188)"
         "(4 52188 52534)"
         "(4 52534 52832)"
         "(4 52832 53332)"
         "(4 53332 53582)"
         "(4 53582 54956)"
         "(4 54956 55298)"
         "(4 55298 55540)"
         "(4 55540 55886)"
         "(4 55886 56340)"
         "(4 56340 57188)"
         "(4 57188 57392)"
         "(4 57392 57778)"
         "(4 57778 58568)"
         "(4 58568 58794)"
         "(4 58794 59004)"
         "(4 59004 59480)"
         "(4 59480 59684)"
         "(4 59684 59940)"
         "(4 59940 60146)"
         "(4 60146 60416)"
         "(4 60416 60864)"
         "(4 60864 61326)"
         "(4 61326 61950)"
         "(4 61950 62308)"
         "(4 62308 62738)"
         "(4 62738 63100)"
         "(4 63100 63424)"
         "(4 63424 64070)"
         "(4 64070 64300)"
         "(4 64300 64646)"
         "(4 64646 64832)"
         "(4 64832 65104)"
         "(4 65104 65294)"
         "(4 65294 65510)"
         "(4 65510 65780)"
         "(4 65780 65974)"
         "(4 65974 66354)"
         "(4 66354 66564)"
         "(4 66564 66994)"
         "(4 66994 67228)"
         "(4 67228 67434)"
         "(4 67434 67650)"
         "(4 67650 67886)"
         "(4 67886 68332)"
         "(4 68332 68628)"
         "(4 68628 68858)"
         "(4 68858 69102)"
         "(4 69102 69322)"
         "(4 69322 69654)"
         "(4 69654 69894)"
         "(4 69894 70108)"
         "(4 70108 70338)"
         "(4 70338 70616)"
         "(4 70616 70886)"
         "(4 70886 71124)"
         "(4 71124 71534)"
         "(4 71534 71790)"
         "(4 71790 71992)"
         "(4 71992 72426)"
         "(4 72426 72788)"
         "(4 72788 73012)"
         "(4 73012 73248)"
         "(4 73248 73476)"
         "(4 73476 73788)"
         "(4 73788 73994)"
         "(4 73994 74242)"
         "(4 74242 74488)"
         "(4 74488 74714)"
         "(4 74714 75128)"
         "(4 75128 75396)"
         "(4 75396 75578)"
         "(4 75578 75946)"
         "(4 75946 76190)"
         "(4 76190 76410)"
         "(4 76410 76706)"
         "(4 76706 76922)"
         "(4 76922 77386)"
         "(4 77386 77594)"
         "(4 77594 77820)"
         "(4 77820 78262)"
         "(4 78262 78552)"
         "(4 78552 79120)"
         "(4 79120 79648)"
         "(4 79648 79848)"
         "(4 79848 80336)"
         "(4 80336 80520)"
         "(4 80520 80758)"
         "(4 80758 80972)"
         "(4 80972 81238)"
         "(4 81238 81416)"
         "(4 81416 81660)"
         "(4 81660 81868)"
         "(4 81868 82336)"
         "(4 82336 82538)"
         "(4 82538 82806)"
         "(4 82806 83006)"
         "(4 83006 83212)"
         "(4 83212 84100)"
         "(4 84100 84538)"
         "(4 84538 85010)"
         "(4 85010 85900)"
         "(4 85900 86442)"
         "(4 86442 86802)"
         "(4 86802 87222)"
         "(4 87222 87906)"
         "(4 87906 88576)"
         "(4 88576 88788)"
         "(4 88788 89042)"
         "(4 89042 89482)"
         "(4 89482 89916)"
         "(4 89916 90270)"
         "(4 90270 90626)"
         "(4 90626 91458)"
         "(4 91458 91820)"
         "(4 91820 92264)"
         "(4 92264 92584)"
         "(4 92584 92830)"
         "(4 92830 93280)"
         "(4 93280 93720)"
         "(4 93720 93952)"
         "(4 93952 94640)"
         "(4 94640 95052)"
         "(4 95052 95674)"
         "(4 95674 96150)"
         "(4 96150 96388)"
         "(4 96388 97012)"
         "(4 97012 97308)"
         "(4 97308 97546)"
         "(4 97546 98208)"
         "(4 98208 98416)"
         "(4 98416 98794)"
         "(4 98794 99142)"
         "(4 99142 99478)"
         "(4 99478 99836)"
         "(4 99836 100678)"
         "(4 100678 101028)"
         "(4 101028 101506)"
         "(4 101506 101738)"
         "(4 101738 102372)"
         "(4 102372 102636)"
         "(4 102636 103638)"
         "(4 103638 104082)"
         "(4 104082 104652)"
         "(4 104652 105112)"
         "(4 105112 106122)"
         "(4 106122 107180)"
         "(4 107180 107380)"
         "(4 107380 107714)"
         "(4 107714 108068)"
         "(4 108068 108390)"
         "(4 108390 108634)"
         "(4 108634 109460)"
         "(4 109460 109852)"
         "(4 109852 110056)"
         "(4 110056 110306)"
         "(4 110306 110544)"
         "(4 110544 110872)"
         "(4 110872 111308)"
         "(4 111308 111556)"
         "(4 111556 112132)"
         "(4 112132 112310)"
         "(4 112310 113014)"
         "(4 113014 113234)"
         "(4 113234 113596)"
         "(4 113596 114072)"
         "(4 114072 115000)"
         "(4 115000 116872)"
         "(4 116872 117142)"
         "(4 117142 117340)"
         "(4 117340 117558)"
         "(4 117558 117780)"
         "(4 117780 118008)"
         "(4 118008 118600)"
         "(4 118600 119120)"
         "(4 119120 120050)"
         "(4 120050 120364)"
         "(4 120364 120588)"
         "(4 120588 121030)"
         "(4 121030 121458)"
         "(4 121458 123304)"
         "(4 123304 123514)"
         "(4 123514 123752)"
         "(4 123752 124076)"
         "(4 124076 124318)"
         "(4 124318 124744)"
         "(4 124744 125232)"
         "(4 125232 125660)"
         "(4 125660 125866)"
         "(4 125866 126432)"
         "(4 126432 126962)"
         "(4 126962 127858)"
         "(4 127858 128092)"
         "(4 128092 128312)"
         "(4 128312 128676)"
         "(4 128676 129146)"
         "(4 129146 129474)"
         "(4 129474 129932)"
         "(4 129932 130344)"
         "(4 130344 130646)"
         "(4 130646 131044)"
         "(4 131044 131790)"
         "(4 131790 132066)"
         "(4 132066 132552)"
         "(4 132552 132866)"
         "(4 132866 133226)"
         "(4 133226 133550)"
         "(4 133550 133852)"
         "(4 133852 134096)"
         "(4 134096 134308)"
         "(4 134308 134528)"
         "(4 134528 134768)"
         "(4 134768 134992)"
         "(4 134992 135200)"
         "(4 135200 135660)"
         "(4 135660 135886)"
         "(4 135886 136254)"
         "(4 136254 136508)"
         "(4 136508 136822)"
         "(4 136822 137352)"
         "(4 137352 137706)"
         "(4 137706 137926)"
         "(4 137926 138160)"
         "(4 138160 138914)"
         "(4 138914 139366)"
         "(4 139366 139690)"
         "(4 139690 139908)"
         "(4 139908 140386)"
         "(4 140386 140586)"
         "(4 140586 140818)"
         "(4 140818 141176)"
         "(4 141176 141404)"
         "(4 141404 141640)"
         "(4 141640 141990)"
         "(4 141990 142252)"
         "(4 142252 142766)"
         "(4 142766 143214)"
         "(4 143214 143420)"
         "(4 143420 143740)"
         "(4 143740 144192)"
         "(4 144192 144442)"
         "(4 144442 144692)"
         "(4 144692 144896)"
         "(4 144896 145108)"
         "(4 145108 145548)"
         "(4 145548 145762)"
         "(4 145762 145990)"
         "(4 145990 146206)"
         "(4 146206 146446)"
         "(4 146446 146690)"
         "(4 146690 146900)"
         "(4 146900 147146)"
         "(4 147146 147344)"
         "(4 147344 147582)"
         "(4 147582 148038)"
         "(4 148038 148356)"
         "(4 148356 148686)"
         "(4 148686 148892)"
         "(4 148892 149250)"
         "(4 149250 149482)"
         "(4 149482 149696)"
         "(4 149696 149934)"
         "(4 149934 150164)"
         "(4 150164 150472)"
         "(4 150472 150718)"
         "(4 150718 150900)"
         "(4 150900 151126)"
         "(4 151126 151350)"
         "(4 151350 151624)"
         "(4 151624 151854)"
         "(4 151854 152094)"
         "(4 152094 152392)"
         "(4 152392 152750)"
         "(4 152750 152950)"
         "(4 152950 154090)"
         "(4 154090 154522)"
         "(4 154522 154850)"
         "(4 154850 155086)"
         "(4 155086 155304)"
         "(4 155304 155530)"
         "(4 155530 155760)"
         "(4 155760 155984)"
         "(4 155984 156536)"
         "(4 156536 156738)"
         "(4 156738 157364)"
         "(4 157364 157924)"
         "(4 157924 158120)"
         "(4 158120 158458)"
         "(4 158458 158700)"
         "(4 158700 158928)"
         "(4 158928 159282)"
         "(4 159282 160212)"
         "(4 160212 160518)"
         "(4 160518 160768)"
         "(4 160768 161210)"
         "(4 161210 161542)"
         "(4 161542 161788)"
         "(4 161788 162134)"
         "(4 162134 162614)"
         "(4 162614 162932)"
         "(4 162932 163168)"
         "(4 163168 163388)"
         "(4 163388 163610)"
         "(4 163610 163930)"
         "(4 163930 164170)"
         "(4 164170 164366)"
         "(4 164366 164696)"
         "(4 164696 165244)"
         "(4 165244 166050)"
         "(4 166050 166358)"
         "(4 166358 166596)"
         "(4 166596 166820)"
         "(4 166820 167252)"
         "(4 167252 167698)"
         "(4 167698 167962)"
         "(4 167962 168256)"
         "(4 168256 168514)"
         "(4 168514 168736)"
         "(4 168736 168960)"
         "(4 168960 169336)"
         "(4 169336 169726)"
         "(4 169726 170148)"
         "(4 170148 170396)"
         "(4 170396 170592)"
         "(4 170592 170840)"
         "(4 170840 171042)"
         "(4 171042 171802)"
         "(4 171802 172168)"
         "(4 172168 172540)"
         "(4 172540 172902)"
         "(4 172902 173104)"
         "(4 173104 173324)"
         "(4 173324 174046)"
         "(4 174046 174674)"
         "(4 174674 174952)"
         "(4 174952 175182)"
         "(4 175182 175676)"
         "(4 175676 176034)"
         "(4 176034 176414)"
         "(4 176414 176738)"
         "(4 176738 177586)"
         "(4 177586 177904)"
         "(4 177904 178676)"
         "(4 178676 178950)"
         "(4 178950 179432)"
         "(4 179432 179828)"
         "(4 179828 180054)"
         "(4 180054 180746)"
         "(4 180746 181218)"
         "(4 181218 181810)"
         "(4 181810 182296)"
         "(4 182296 182514)"
         "(4 182514 182834)"
         "(4 182834 183140)"
         "(4 183140 183418)"
         "(4 183418 183650)"
         "(4 183650 184292)"
         "(4 184292 184466)"
         "(4 184466 184868)"
         "(4 184868 185260)"
         "(4 185260 185578)"
         "(4 185578 185910)"
         "(4 185910 186746)"
         "(4 186746 187102)"
         "(4 187102 187546)"
         "(4 187546 187826)"
         "(4 187826 188432)"
         "(4 188432 188684)"
         "(4 188684 189474)"
         "(4 189474 189672)"
         "(4 189672 190118)"
         "(4 190118 190746)"
         "(4 190746 191184)"
         "(4 191184 192286)"
         "(4 192286 193424)"
         "(4 193424 193832)"
         "(4 193832 194124)"
         "(4 194124 194432)"
         "(4 194432 194682)"
         "(4 194682 195426)"
         "(4 195426 195878)"
         "(4 195878 196472)"
         "(4 196472 197032)"
         "(4 197032 197344)"
         "(4 197344 197612)"
         "(4 197612 198162)"
         "(4 198162 198436)"
         "(4 198436 199026)"
         "(4 199026 199414)"
         "(4 199414 200104)"
         "(5 0 1696)"
         "(5 1696 2114)"
         "(5 2114 2428)"
         "(5 2428 3522)"
         "(5 3522 4192)"
         "(5 4192 4622)"
         "(5 4622 4896)"
         "(5 4896 5508)"
         "(5 5508 6112)"
         "(5 6112 9402)"
         "(5 9402 9730)"
         "(5 9730 10642)"
         "(5 10642 10974)"
         "(5 10974 11378)"
         "(5 11378 11616)"
         "(5 11616 12234)"
         "(5 12234 12608)"
         "(5 12608 13000)"
         "(5 13000 13462)"
         "(5 13462 13782)"
         "(5 13782 14392)"
         "(5 14392 14794)"
         "(5 14794 15394)"
         "(5 15394 15960)"
         "(5 15960 16156)"
         "(5 16156 16578)"
         "(5 16578 17144)"
         "(5 17144 17372)"
         "(5 17372 18800)"
         "(5 18800 20162)"
         "(5 20162 22196)"
         "(5 22196 23912)"
         "(5 23912 24318)"
         "(5 24318 25190)"
         "(5 25190 26958)"
         "(5 26958 27464)"
         "(5 27464 27828)"
         "(5 27828 28152)"
         "(5 28152 28786)"
         "(5 28786 29024)"
         "(5 29024 29592)"
         "(5 29592 30342)"
         "(5 30342 31180)"
         "(5 31180 31734)"
         "(5 31734 32216)"
         "(5 32216 32824)"
         "(5 32824 33068)"
         "(5 33068 33482)"
         "(5 33482 36138)"
         "(5 36138 36964)"
         "(5 36964 37646)"
         "(5 37646 39188)"
         "(5 39188 40482)"
         "(5 40482 41402)"
         "(5 41402 42306)"
         "(5 42306 42872)"
         "(5 42872 43468)"
         "(5 43468 43724)"
         "(5 43724 44194)"
         "(5 44194 44636)"
         "(5 44636 44876)"
         "(5 44876 45162)"
         "(5 45162 45394)"
         "(5 45394 45622)"
         "(5 45622 45906)"
         "(5 45906 46228)"
         "(5 46228 46584)"
         "(5 46584 47214)"
         "(5 47214 47624)"
         "(5 47624 48236)"
         "(5 48236 48470)"
         "(5 48470 49418)"
         "(5 49418 50830)"
         "(5 50830 52708)"
         "(5 52708 53152)"
         "(5 53152 54296)"
         "(5 54296 55974)"
         "(5 55974 56440)"
         "(5 56440 56770)"
         "(5 56770 57846)"
         "(5 57846 58516)"
         "(5 58516 58946)"
         "(5 58946 59220)"
         "(5 59220 59836)"
         "(5 59836 63702)"
         "(5 63702 64244)"
         "(5 64244 64964)"
         "(5 64964 65282)"
         "(5 65282 65702)"
         "(5 65702 65938)"
         "(5 65938 66274)"
         "(5 66274 66558)"
         "(5 66558 66926)"
         "(5 66926 67680)"
         "(5 67680 68074)"
         "(5 68074 68606)"
         "(5 68606 68880)"
         "(5 68880 69122)"
         "(5 69122 69690)"
         "(5 69690 70268)"
         "(5 70268 70908)"
         "(5 70908 71468)"
         "(5 71468 71732)"
         "(5 71732 74444)"
         "(5 74444 76510)"
         "(5 76510 78198)"
         "(5 78198 78628)"
         "(5 78628 79506)"
         "(5 79506 81292)"
         "(5 81292 81948)"
         "(5 81948 82478)"
         "(5 82478 83110)"
         "(5 83110 83916)"
         "(5 83916 84668)"
         "(5 84668 85184)"
         "(5 85184 85620)"
         "(5 85620 87148)"
         "(5 87148 87370)"
         "(5 87370 87794)"
         "(5 87794 90458)"
         "(5 90458 91282)"
         "(5 91282 91968)"
         "(5 91968 94800)"
         "(5 94800 95720)"
         "(5 95720 96626)"
         "(5 96626 97192)"
         "(5 97192 97790)"
         "(5 97790 98046)"
         "(5 98046 98514)"
         "(5 98514 98998)"
         "(5 98998 99392)"
         "(5 99392 99710)"
         "(5 99710 99952)"
         "(5 99952 100232)"
         "(5 100232 100538)"
         "(5 100538 100866)"
         "(5 100866 101536)"
         "(5 101536 101934)"
         "(5 101934 102258)"
         "(5 102258 102566)"
         "(5 102566 102794)"
         "(5 102794 103748)"
         "(5 103748 105116)"
         "(5 105116 106996)"
         "(5 106996 107472)"
         "(5 107472 108616)"
         "(5 108616 110298)"
         "(5 110298 110764)"
         "(5 110764 111058)"
         "(5 111058 112170)"
         "(5 112170 112842)"
         "(5 112842 113268)"
         "(5 113268 113534)"
         "(5 113534 114152)"
         "(5 114152 118034)"
         "(5 118034 118602)"
         "(5 118602 119250)"
         "(5 119250 119612)"
         "(5 119612 120024)"
         "(5 120024 120268)"
         "(5 120268 120606)"
         "(5 120606 120878)"
         "(5 120878 121344)"
         "(5 121344 121648)"
         "(5 121648 122108)"
         "(5 122108 122400)"
         "(5 122400 122798)"
         "(5 122798 123204)"
         "(5 123204 123438)"
         "(5 123438 123974)"
         "(5 123974 124588)"
         "(5 124588 125190)"
         "(5 125190 125788)"
         "(5 125788 126056)"
         "(5 126056 127430)"
         "(5 127430 128766)"
         "(5 128766 130840)"
         "(5 130840 132560)"
         "(5 132560 132962)"
         "(5 132962 133830)"
         "(5 133830 135608)"
         "(5 135608 136272)"
         "(5 136272 136800)"
         "(5 136800 137430)"
         "(5 137430 138240)"
         "(5 138240 138990)"
         "(5 138990 139506)"
         "(5 139506 139974)"
         "(5 139974 141464)"
         "(5 141464 141702)"
         "(5 141702 142018)"
         "(5 142018 144780)"
         "(5 144780 146298)"
         "(5 146298 149130)"
         "(5 149130 150046)"
         "(5 150046 150950)"
         "(5 150950 151524)"
         "(5 151524 152110)"
         "(5 152110 152352)"
         "(5 152352 152840)"
         "(5 152840 153322)"
         "(5 153322 153802)"
         "(5 153802 154032)"
         "(5 154032 154268)"
         "(5 154268 154554)"
         "(5 154554 154874)"
         "(5 154874 155190)"
         "(5 155190 155860)"
         "(5 155860 156262)"
         "(5 156262 156578)"
         "(5 156578 156894)"
         "(5 156894 157114)"
         "(5 157114 158064)"
         "(5 158064 159424)"
         "(5 159424 161358)"
         "(5 161358 161798)"
         "(6 232 662)"
         "(6 662 1072)"
         "(6 1072 1262)"
         "(6 1262 1520)"
         "(6 1520 1806)"
         "(6 1806 2092)"
         "(6 2092 2366)"
         "(6 2366 2640)"
         "(6 2640 2904)"
         "(6 2904 3188)"
         "(6 3188 3454)"
         "(6 3454 3744)"
         "(6 3744 4028)"
         "(6 4028 4288)"
         "(6 4288 4556)"
         "(6 4556 4828)"
         "(6 4828 5602)"
         "(6 5602 5866)"
         "(6 5866 6144)"
         "(6 6144 6430)"
         "(6 6430 6708)"
         "(6 6708 6994)"
         "(6 6994 7268)"
         "(6 7268 7556)"
         "(6 7556 7826)"
         "(6 7826 8104)"
         "(6 8104 8386)"
         "(6 8386 8634)"
         "(6 8634 8916)"
         "(6 8916 9200)"
         "(6 9200 9486)"
         "(6 9486 10000)"
         "(6 10000 10266)"
         "(6 10266 10532)"
         "(6 10532 10814)"
         "(6 10814 11078)"
         "(6 11078 11352)"
         "(6 11352 11616)"
         "(6 11616 11882)"
         "(6 11882 12144)"
         "(6 12144 12400)"
         "(6 12400 12672)"
         "(6 12672 12960)"
         "(6 12960 13268)"
         "(6 13268 13528)"
         "(6 13528 13804)"
         "(6 13804 14170)"
         "(6 14170 14480)"
         "(6 14480 14866)"
         "(6 14866 15158)"
         "(6 15158 15546)"
         "(6 15546 15828)"
         "(6 15828 16202)"
         "(6 16202 16612)"
         "(6 16612 17442)"
         "(6 17442 17636)"
         "(6 17636 18096)"
         "(6 18096 18508)"
         "(6 18508 19872)"
         "(6 19872 20336)"
         "(6 20336 20618)"
         "(6 20618 20864)"
         "(6 20864 21150)"
         "(6 21150 21840)"
         "(6 21840 22270)"
         "(6 22270 22556)"
         "(6 22556 22814)"
         "(6 22814 23086)"
         "(6 23086 23442)"
         "(6 23442 23682)"
         "(6 23682 23946)"
         "(6 23946 24196)"
         "(6 24196 24582)"
         "(6 24582 24854)"
         "(6 24854 25292)"
         "(6 25292 25688)"
         "(6 25688 25926)"
         "(6 25926 26350)"
         "(6 26350 26612)"
         "(6 26612 27068)"
         "(6 27068 27332)"
         "(6 27332 27868)"
         "(6 27868 28286)"
         "(6 28286 28576)"
         "(6 28576 28864)"
         "(6 28864 29254)"
         "(6 29254 29910)"
         "(6 29910 30846)"
         "(6 30846 31266)"
         "(6 31266 31628)"
         "(6 31628 32098)"
         "(6 32098 32332)"
         "(6 32332 32874)"
         "(6 32874 33128)"
         "(6 33128 33640)"
         "(6 33640 33910)"
         "(6 33910 34182)"
         "(6 34182 34586)"
         "(6 34586 34870)"
         "(6 34870 35134)"
         "(6 35134 35556)"
         "(6 35556 35980)"
         "(6 35980 36400)"
         "(6 36400 36674)"
         "(6 36674 37104)"
         "(6 37104 37522)"
         "(6 37522 38074)"
         "(6 38074 38306)"
         "(6 38306 38624)"
         "(6 38624 39018)"
         "(6 39018 39266)"
         "(6 39266 39682)"
         "(6 39682 40212)"
         "(6 40212 40646)"
         "(6 40646 40974)"
         "(6 40974 41258)"
         "(6 41258 41594)"
         "(6 41594 41878)"
         "(6 41878 42278)"
         "(6 42278 42538)"
         "(6 42538 43804)"
         "(6 43804 44090)"
         "(6 44090 44334)"
         "(6 44334 44862)"
         "(6 44862 45140)"
         "(6 45140 45674)"
         "(6 45674 45982)"
         "(6 45982 46248)"
         "(6 46248 46520)"
         "(6 46520 46792)"
         "(6 46792 47072)"
         "(6 47072 47388)"
         "(6 47388 47662)"
         "(6 47662 48156)"
         "(6 48156 48452)"
         "(6 48452 48858)"
         "(6 48858 49094)"
         "(6 49094 49374)"
         "(6 49374 49634)"
         "(6 49634 49930)"
         "(6 49930 50346)"
         "(6 50346 50624)"
         "(6 50624 51034)"
         "(6 51034 51278)"
         "(6 51278 51548)"
         "(6 51548 51860)"
         "(6 51860 52282)"
         "(6 52282 52664)"
         "(6 52664 52964)"
         "(6 52964 53224)"
         "(6 53224 53544)"
         "(6 53544 53770)"
         "(6 53770 54000)"
         "(6 54000 54860)"
         "(6 54860 55274)"
         "(6 55274 55686)"
         "(6 55686 55896)"
         "(6 55896 56338)"
         "(6 56338 56768)"
         "(6 56768 57026)"
         "(6 57026 57288)"
         "(6 57288 57498)"
         "(6 57498 57950)"
         "(6 57950 58232)"
         "(6 58232 58478)"
         "(6 58478 58896)"
         "(6 58896 59266)"
         "(6 59266 59672)"
         "(6 59672 59900)"
         "(6 59900 60168)"
         "(6 60168 60358)"
         "(6 60358 60688)"
         "(6 60688 61012)"
         "(6 61012 61590)"
         "(6 61590 61802)"
         "(6 61802 62138)"
         "(6 62138 62498)"
         "(6 62498 62706)"
         "(6 62706 63050)"
         "(6 63050 63400)"
         "(6 63400 63662)"
         "(6 63662 64666)"
         "(6 64666 65066)"
         "(6 65066 65314)"
         "(6 65314 65604)"
         "(6 65604 65880)"
         "(6 65880 66156)"
         "(6 66156 66440)"
         "(6 66440 66832)"
         "(6 66832 67104)"
         "(6 67104 67692)"
         "(6 67692 68138)"
         "(6 68138 68552)"
         "(6 68552 68914)"
         "(6 68914 69210)"
         "(6 69210 69618)"
         "(6 69618 69912)"
         "(6 69912 70296)"
         "(6 70296 70668)"
         "(6 70668 70964)"
         "(6 70964 71388)"
         "(6 71388 71654)"
         "(6 71654 71914)"
         "(6 71914 72410)"
         "(6 72410 73028)"
         "(6 73028 73284)"
         "(6 73284 73536)"
         "(6 73536 73792)"
         "(6 73792 74056)"
         "(6 74056 74318)"
         "(6 74318 74612)"
         "(6 74612 74864)"
         "(6 74864 75420)"
         "(6 75420 75682)"
         "(6 75682 75940)"
         "(6 75940 76220)"
         "(6 76220 76496)"
         "(6 76496 76790)"
         "(6 76790 77076)"
         "(6 77076 77324)"
         "(6 77324 78004)"
         "(6 78004 78458)"
         "(6 78458 78828)"
         "(6 78828 79242)"
         "(6 79242 79650)"
         "(6 79650 79930)"
         "(6 79930 80220)"
         "(6 80220 80710)"
         "(6 80710 81008)"
         "(6 81008 81260)"
         "(6 81260 81680)"
         "(6 81680 81968)"
         "(6 81968 82226)"
         "(6 82226 82470)"
         "(6 82470 82924)"
         "(6 82924 83146)"
         "(6 83146 83556)"
         "(6 83556 83974)"
         "(6 83974 84400)"
         "(6 84400 84698)"
         "(6 84698 84950)"
         "(6 84950 85244)"
         "(6 85244 85672)"
         "(6 85672 85994)"
         "(6 85994 86352)"
         "(6 86352 86726)"
         "(6 86726 86970)"
         "(6 86970 87278)"
         "(6 87278 88416)"
         "(6 88416 88818)"
         "(6 88818 89204)"
         "(6 89204 89438)"
         "(6 89438 89728)"
         "(6 89728 89884)"
         "(6 89884 90178)"
         "(6 90178 90536)"
         "(6 90536 94066)"
         "(6 94066 94458)"
         "(6 94458 94874)"
         "(6 94874 95094)"
         "(6 95094 95368)"
         "(6 95368 95636)"
         "(6 95636 95894)"
         "(6 95894 96176)"
         "(6 96176 96464)"
         "(6 96464 96738)"
         "(6 96738 97028)"
         "(6 97028 97290)"
         "(6 97290 97596)"
         "(6 97596 97852)"
         "(6 97852 98114)"
         "(6 98114 98398)"
         "(6 98398 98684)"
         "(6 98684 98932)"
         "(6 98932 99436)"
         "(6 99436 99688)"
         "(6 99688 99958)"
         "(6 99958 100244)"
         "(6 100244 100536)"
         "(6 100536 100794)"
         "(6 100794 101072)"
         "(6 101072 101354)"
         "(6 101354 101628)"
         "(6 101628 101870)"
         "(6 101870 102162)"
         "(6 102162 102424)"
         "(6 102424 102690)"
         "(6 102690 102976)"
         "(6 102976 103240)"
         "(6 103240 103800)"
         "(6 103800 104044)"
         "(6 104044 104326)"
         "(6 104326 104574)"
         "(6 104574 104854)"
         "(6 104854 105152)"
         "(6 105152 105428)"
         "(6 105428 105686)"
         "(6 105686 105950)"
         "(6 105950 106226)"
         "(6 106226 106496)"
         "(6 106496 106750)"
         "(6 106750 107060)"
         "(6 107060 107322)"
         "(6 107322 107588)"
         "(6 107588 107960)"
         "(6 107960 108664)"
         "(6 108664 108960)"
         "(6 108960 109334)"
         "(6 109334 109628)"
         "(6 109628 109864)"
         "(6 109864 110270)"
         "(6 110270 110572)"
         "(6 110572 110848)"
         "(6 110848 111232)"
         "(6 111232 111890)"
         "(6 111890 112164)"
         "(6 112164 113976)"
         "(6 113976 114420)"
         "(6 114420 114800)"
         "(6 114800 115002)"
         "(6 115002 115234)"
         "(6 115234 115526)"
         "(6 115526 115798)"
         "(6 115798 116124)"
         "(6 116124 116362)"
         "(6 116362 116666)"
         "(6 116666 116920)"
         "(6 116920 117220)"
         "(6 117220 117486)"
         "(6 117486 117778)"
         "(6 117778 118038)"
         "(6 118038 118324)"
         "(6 118324 118566)"
         "(6 118566 118846)"
         "(6 118846 119374)"
         "(6 119374 119640)"
         "(6 119640 119888)"
         "(6 119888 120158)"
         "(6 120158 120438)"
         "(6 120438 120706)"
         "(6 120706 120998)"
         "(6 120998 121240)"
         "(6 121240 121502)"
         "(6 121502 121800)"
         "(6 121800 122056)"
         "(6 122056 122320)"
         "(6 122320 122606)"
         "(6 122606 122872)"
         "(6 122872 123138)"
         "(6 123138 123396)"
         "(6 123396 123702)"
         "(6 123702 123960)"
         "(6 123960 124214)"
         "(6 124214 124478)"
         "(6 124478 124762)"
         "(6 124762 125020)"
         "(6 125020 125308)"
         "(6 125308 125554)"
         "(6 125554 125846)"
         "(6 125846 126092)"
         "(6 126092 126374)"
         "(6 126374 126650)"
         "(6 126650 126950)"
         "(6 126950 127200)"
         "(6 127200 127466)"
         "(6 127466 127862)"
         "(6 127862 128164)"
         "(6 128164 128566)"
         "(6 128566 128888)"
         "(6 128888 129236)"
         "(6 129236 129506)"
         "(6 129506 129920)"
         "(6 129920 130322)"
         "(6 130322 130702)"
         "(6 130702 131142)"
         "(6 131142 131440)"
         "(6 131440 131826)"
         "(6 131826 132224)"
         "(6 132224 137320)"
         "(6 137320 137656)"
         "(6 137656 137872)"
         "(6 137872 138180)"
         "(6 138180 138544)"
         "(6 138544 138938)"
         "(6 138938 139228)"
         "(6 139228 139446)"
         "(6 139446 140426)"
         "(6 140426 140826)"
         "(6 140826 141112)"
         "(6 141112 141674)"
         "(6 141674 142082)"
         "(6 142082 142510)"
         "(6 142510 142712)"
         "(6 142712 143038)"
         "(6 143038 143314)"
         "(6 143314 143598)"
         "(6 143598 143980)"
         "(6 143980 144220)"
         "(6 144220 144482)"
         "(6 144482 145508)"
         "(6 145508 145954)"
         "(6 145954 146160)"
         "(6 146160 146538)"
         "(6 146538 146762)"
         "(6 146762 147080)"
         "(6 147080 147402)"
         "(6 147402 149640)"
         "(6 149640 149916)"
         "(6 149916 150358)"
         "(6 150358 150630)"
         "(6 150630 151036)"
         "(6 151036 151388)"
         "(6 151388 151972)"
         "(6 151972 152440)"
         "(6 152440 153058)"
         "(6 153058 153514)"
         "(6 153514 156492)"
         "(6 156492 156924)"
         "(6 156924 158632)"
         "(6 158632 158916)"
         "(6 158916 159182)"
         "(6 159182 159454)"
         "(6 159454 159738)"
         "(6 159738 160172)"
         "(6 160172 160456)"
         "(6 160456 160720)"
         "(6 160720 161926)"
         "(6 161926 162520)"
         "(6 162520 162808)"
         "(6 162808 163178)"
         "(6 163178 163372)"
         "(6 163372 163810)"
         "(6 163810 165412)"
         "(6 165412 165762)"
         "(6 165762 165982)"
         "(6 165982 166568)"
         "(6 166568 166978)"
         "(6 166978 167222)"
         "(6 167222 167636)"
         "(6 167636 167922)"
         "(6 167922 169270)"
         "(6 169270 169488)"
         "(6 169488 169802)"
         "(6 169802 170336)"
         "(6 170336 170834)"
         "(6 170834 171312)"
         "(6 171312 171596)"
         "(6 171596 178442)"
         "(6 178442 178852)"
         "(6 178852 179132)"
         "(6 179132 180574)"
         "(6 180574 181020)"
         "(6 181020 181274)"
         "(6 181274 181552)"
         "(6 181552 181810)"
         "(6 181810 182092)"
         "(6 182092 182342)"
         "(6 182342 182616)"
         "(6 182616 182878)"
         "(6 182878 183166)"
         "(6 183166 183416)"
         "(6 183416 183690)"
         "(6 183690 183960)"
         "(6 183960 184246)"
         "(6 184246 184472)"
         "(6 184472 184892)"
         "(6 184892 185174)"
         "(6 185174 185490)"
         "(6 185490 185732)"
         "(6 185732 186030)"
         "(6 186030 186470)"
         "(6 186470 187042)"
         "(6 187042 187714)"
         "(6 187714 187966)"
         "(6 187966 189322)"
         "(6 189322 189748)"
         "(6 189748 189994)"
         "(6 189994 190262)"
         "(6 190262 190522)"
         "(6 190522 190842)"
         "(6 190842 191110)"
         "(6 191110 191364)"
         "(6 191364 191636)"
         "(6 191636 191950)"
         "(6 191950 192492)"
         "(6 192492 193000)"
         "(6 193000 193356)"
         "(6 193356 193694)"
         "(6 193694 194076)"
         "(7 16 1578)"
         "(7 1578 3024)"
         "(7 3024 4318)"
         "(7 4318 5514)"
         "(7 5514 7054)"
         "(7 7054 8524)"
         "(7 8524 9786)"
         "(7 9786 11020)"
         "(7 11020 14528)"
         "(7 14528 17528)"
         "(7 17528 21014)"
         "(7 21014 23516)"
         "(7 23516 26018)"
         "(7 26018 28282)"
         "(7 28282 30514)"
         "(7 30514 34012)"
         "(7 34012 37006)"
         "(7 37006 40014)"
         "(7 40014 42274)"
         "(7 42274 44514)"
         "(7 44514 47516)"
         "(7 47516 50006)"
         "(7 50006 52508)"
         "(7 52508 56000)"
         "(7 56000 58490)"
         "(7 58490 60268)"
         "(7 60268 62004)"
         "(7 62004 63136)"
         "(7 63136 64268)"
         "(7 64268 65382)"
         "(7 65382 66488)"
         "(7 66488 69500)"
         "(7 69500 71982)"
         "(7 71982 75498)"
         "(7 75498 77994)"
         "(7 77994 79544)"
         "(7 79544 80988)"
         "(7 80988 82254)"
         "(7 82254 83478)"
         "(7 83478 85028)"
         "(7 85028 86488)"
         "(7 86488 87744)"
         "(7 87744 88984)"
         "(7 88984 92486)"
         "(7 92486 95492)"
         "(7 95492 98978)"
         "(7 98978 101480)"
         "(7 101480 103982)"
         "(7 103982 106262)"
         "(7 106262 108478)"
         "(7 108478 111976)"
         "(7 111976 114970)"
         "(7 114970 117986)"
         "(7 117986 120262)"
         "(7 120262 122480)"
         "(7 122480 125482)"
         "(7 125482 127984)"
         "(7 127984 130472)"
         "(7 130472 132266)"
         "(7 132266 133964)"
         "(7 133964 136454)"
         "(7 136454 138268)"
         "(7 138268 139968)"
         "(7 139968 141120)"
         "(7 141120 142246)"
         "(7 142246 143362)"
         "(7 143362 144450)"
         "(7 144450 146022)"
         "(7 146022 147462)"
         "(7 147462 149946)"
         "(7 149946 153464)"
         "(8 106 510)"
         "(8 510 848)"
         "(8 848 1190)"
         "(8 1190 1546)"
         "(8 1546 1892)"
         "(8 1892 2290)"
         "(8 2290 2694)"
         "(8 2694 2928)"
         "(8 2928 3186)"
         "(8 3186 3460)"
         "(8 3460 3664)"
         "(8 3664 3902)"
         "(8 3902 4162)"
         "(8 4162 4634)"
         "(8 4634 4886)"
         "(8 4886 5534)"
         "(8 5534 5936)"
         "(8 5936 6392)"
         "(8 6392 6758)"
         "(8 6758 7186)"
         "(8 7186 7610)"
         "(8 7610 7896)"
         "(8 7896 8084)"
         "(8 8084 8470)"
         "(8 8470 8816)"
         "(8 8816 9158)"
         "(8 9158 9408)"
         "(8 9408 9822)"
         "(8 9822 10086)"
         "(8 10086 10450)"
         "(8 10450 10716)"
         "(8 10716 11068)"
         "(8 11068 11310)"
         "(8 11310 11796)"
         "(8 11796 12176)"
         "(8 12176 12452)"
         "(8 12452 13040)"
         "(8 13040 13276)"
         "(8 13276 13638)"
         "(8 13638 13894)"
         "(8 13894 14142)"
         "(8 14142 14502)"
         "(8 14502 14922)"
         "(8 14922 15268)"
         "(8 15268 15632)"
         "(8 15632 16040)"
         "(8 16040 16402)"
         "(8 16402 16780)"
         "(8 16780 17180)"
         "(8 17180 17518)"
         "(8 17518 17782)"
         "(8 17782 18036)"
         "(8 18036 18292)"
         "(8 18292 18666)"
         "(8 18666 18908)"
         "(8 18908 19174)"
         "(8 19174 19466)"
         "(8 19466 20158)"
         "(8 20158 20888)"
         "(8 20888 21732)"
         "(8 21732 22228)"
         "(8 22228 22650)"
         "(8 22650 22916)"
         "(8 22916 23242)"
         "(8 23242 23500)"
         "(8 23500 23836)"
         "(8 23836 24176)"
         "(8 24176 24566)"
         "(8 24566 24870)"
         "(8 24870 25096)"
         "(8 25096 25418)"
         "(8 25418 25730)"
         "(8 25730 26052)"
         "(8 26052 26280)"
         "(8 26280 26554)"
         "(8 26554 26782)"
         "(8 26782 27186)"
         "(8 27186 27484)"
         "(8 27484 27748)"
         "(8 27748 27968)"
         "(8 27968 28254)"
         "(8 28254 28554)"
         "(8 28554 28810)"
         "(8 28810 29146)"
         "(8 29146 29544)"
         "(8 29544 29920)"
         "(8 29920 30324)"
         "(8 30324 30582)"
         "(8 30582 30836)"
         "(8 30836 31274)"
         "(8 31274 31680)"
         "(8 31680 32482)"
         "(8 32482 32884)"
         "(8 32884 33118)"
         "(8 33118 33386)"
         "(8 33386 33644)"
         "(8 33644 33996)"
         "(8 33996 34412)"
         "(8 34412 34892)"
         "(8 34892 35500)"
         "(8 35500 35910)"
         "(8 35910 36424)"
         "(8 36424 36660)"
         "(8 36660 37024)"
         "(8 37024 37410)"
         "(8 37410 37790)"
         "(8 37790 38178)"
         "(8 38178 38502)"
         "(8 38502 38818)"
         "(8 38818 39036)"
         "(8 39036 39274)"
         "(8 39274 40004)"
         "(8 40004 40278)"
         "(8 40278 40844)"
         "(8 40844 41118)"
         "(8 41118 42272)"
         "(8 42272 42584)"
         "(8 42584 42792)"
         "(8 42792 43236)"
         "(8 43236 43538)"
         "(8 43538 43922)"
         "(8 43922 44266)"
         "(8 44266 44520)"
         "(8 44520 44898)"
         "(8 44898 45246)"
         "(8 45246 45656)"
         "(8 45656 46022)"
         "(8 46022 46384)"
         "(8 46384 46778)"
         "(8 46778 47040)"
         "(8 47040 47286)"
         "(8 47286 47546)"
         "(8 47546 47820)"
         "(8 47820 48082)"
         "(8 48082 48412)"
         "(8 48412 48628)"
         "(8 48628 48858)"
         "(8 48858 49066)"
         "(8 49066 49308)"
         "(8 49308 49532)"
         "(8 49532 50170)"
         "(8 50170 50450)"
         "(8 50450 51142)"
         "(8 51142 51382)"
         "(8 51382 51598)"
         "(8 51598 51958)"
         "(8 51958 52220)"
         "(8 52220 52510)"
         "(8 52510 52846)"
         "(8 52846 53412)"
         "(8 53412 54090)"
         "(8 54090 54506)"
         "(8 54506 55578)"
         "(8 55578 55968)"
         "(8 55968 56680)"
         "(8 56680 57326)"
         "(8 57326 57990)"
         "(8 57990 58506)"
         "(8 58506 58772)"
         "(8 58772 59030)"
         "(8 59030 59414)"
         "(8 59414 59948)"
         "(8 59948 60486)"
         "(8 60486 60778)"
         "(8 60778 61132)"
         "(8 61132 61924)"
         "(8 61924 62416)"
         "(8 62416 64270)"
         "(8 64270 64552)"
         "(8 64552 64792)"
         "(8 64792 65118)"
         "(8 65118 65474)"
         "(8 65474 65772)"
         "(8 65772 66066)"
         "(8 66066 66324)"
         "(8 66324 66722)"
         "(8 66722 67276)"
         "(8 67276 68066)"
         "(8 68066 68306)"
         "(8 68306 69268)"
         "(8 69268 69534)"
         "(8 69534 70158)"
         "(8 70158 70754)"
         "(8 70754 71398)"
         "(8 71398 72028)"
         "(8 72028 72234)"
         "(8 72234 72528)"
         "(8 72528 72898)"
         "(8 72898 73136)"
         "(8 73136 73412)"
         "(8 73412 73798)"
         "(8 73798 74194)"
         "(8 74194 74440)"
         "(8 74440 74782)"
         "(8 74782 75042)"
         "(8 75042 75332)"
         "(8 75332 75636)"
         "(8 75636 76724)"
         "(8 76724 77142)"
         "(8 77142 77518)"
         "(8 77518 77738)"
         "(8 77738 77988)"
         "(8 77988 78412)"
         "(8 78412 78756)"
         "(8 78756 79148)"
         "(8 79148 79514)"
         "(8 79514 79884)"
         "(8 79884 80242)"
         "(8 80242 80642)"
         "(8 80642 81008)"
         "(8 81008 81260)"
         "(8 81260 81684)"
         "(8 81684 81926)"
         "(8 81926 82286)"
         "(8 82286 82546)"
         "(8 82546 82906)"
         "(8 82906 83188)"
         "(8 83188 83564)"
         "(8 83564 83926)"
         "(8 83926 84166)"
         "(8 84166 84372)"
         "(8 84372 84608)"
         "(8 84608 84964)"
         "(8 84964 85560)"
         "(8 85560 85838)"
         "(8 85838 86202)"
         "(8 86202 86456)"
         "(8 86456 86976)"
         "(8 86976 87444)"
         "(8 87444 87710)"
         "(8 87710 88002)"
         "(8 88002 88390)"
         "(8 88390 88602)"
         "(8 88602 88902)"
         "(8 88902 89278)"
         "(8 89278 89666)"
         "(8 89666 89862)"
         "(8 89862 90124)"
         "(8 90124 91018)"
         "(8 91018 91392)"
         "(8 91392 91628)"
         "(8 91628 91900)"
         "(8 91900 92140)"
         "(8 92140 92478)"
         "(8 92478 92882)"
         "(8 92882 93246)"
         "(8 93246 93604)"
         "(8 93604 93990)"
         "(8 93990 94352)"
         "(8 94352 94746)"
         "(8 94746 95104)"
         "(8 95104 95418)"
         "(8 95418 95732)"
         "(8 95732 96148)"
         "(8 96148 96394)"
         "(8 96394 96628)"
         "(8 96628 96884)"
         "(8 96884 97230)"
         "(8 97230 97512)"
         "(8 97512 97744)"
         "(8 97744 98116)"
         "(8 98116 98376)"
         "(8 98376 98628)"
         "(8 98628 99002)"
         "(8 99002 99340)"
         "(8 99340 99560)"
         "(8 99560 99990)"
         "(8 99990 100240)"
         "(8 100240 100464)"
         "(8 100464 100704)"
         "(8 100704 100934)"
         "(8 100934 101162)"
         "(8 101162 101426)"
         "(8 101426 102372)"
         "(8 102372 102762)"
         "(8 102762 103008)"
         "(8 103008 103246)"
         "(8 103246 103646)"
         "(8 103646 103970)"
         "(8 103970 104328)"
         "(8 104328 104526)"
         "(8 104526 105130)"
         "(8 105130 105468)"
         "(8 105468 105832)"
         "(8 105832 106252)"
         "(8 106252 106748)"
         "(8 106748 107096)"
         "(8 107096 107488)"
         "(8 107488 108012)"
         "(8 108012 108250)"
         "(8 108250 108498)"
         "(8 108498 108930)"
         "(8 108930 109272)"
         "(8 109272 109518)"
         "(8 109518 110002)"
         "(8 110002 110354)"
         "(8 110354 110840)"
         "(8 110840 111040)"
         "(8 111040 111426)"
         "(8 111426 111746)"
         "(8 111746 111974)"
         "(8 111974 112392)"
         "(8 112392 112746)"
         "(8 112746 113138)"
         "(8 113138 113498)"
         "(8 113498 113884)"
         "(8 113884 114230)"
         "(8 114230 114530)"
         "(8 114530 114764)"
         "(8 114764 115010)"
         "(8 115010 115268)"
         "(8 115268 115720)"
         "(8 115720 116066)"
         "(8 116066 116338)"
         "(8 116338 116544)"
         "(8 116544 116852)"
         "(8 116852 117194)"
         "(8 117194 117594)"
         "(8 117594 117890)"
         "(8 117890 118128)"
         "(8 118128 118332)"
         "(8 118332 118684)"
         "(8 118684 119140)"
         "(8 119140 119596)"
         "(8 119596 120216)"
         "(8 120216 120474)"
         "(8 120474 120898)"
         "(8 120898 121260)"
         "(8 121260 121494)"
         "(8 121494 121898)"
         "(8 121898 122268)"
         "(8 122268 122502)"
         "(8 122502 122894)"
         "(8 122894 123128)"
         "(8 123128 123386)"
         "(8 123386 123624)"
         "(8 123624 123908)"
         "(8 123908 124138)"
         "(8 124138 124378)"
         "(8 124378 124618)"
         "(8 124618 124902)"
         "(8 124902 125108)"
         "(8 125108 125330)"
         "(8 125330 125546)"
         "(8 125546 126050)"
         "(8 126050 126348)"
         "(8 126348 126832)"
         "(8 126832 127090)"
         "(8 127090 127306)"
         "(8 127306 127692)"
         "(8 127692 128042)"
         "(8 128042 128714)"
         "(8 128714 129244)"
         "(8 129244 129924)"
         "(8 129924 130474)"
         "(8 130474 130878)"
         "(8 130878 131342)"
         "(8 131342 131628)"
         "(8 131628 131854)"
         "(8 131854 132080)"
         "(8 132080 132260)"
         "(8 132260 132520)"
         "(8 132520 132882)"
         "(8 132882 133120)"
         "(8 133120 133582)"
         "(8 133582 133968)"
         "(8 133968 134214)"
         "(8 134214 134622)"
         "(8 134622 134874)"
         "(8 134874 135244)"
         "(8 135244 135486)"
         "(8 135486 135894)"
         "(8 135894 136132)"
         "(8 136132 136476)"
         "(8 136476 136692)"
         "(8 136692 137022)"
         "(8 137022 137244)"
         "(8 137244 137928)"
         "(8 137928 138224)"
         "(8 138224 138550)"
         "(8 138550 138962)"
         "(8 138962 139372)"
         "(8 139372 139618)"
         "(8 139618 139858)"
         "(8 139858 140230)"
         "(8 140230 140848)"
         "(8 140848 141290)"
         "(8 141290 141682)"
         "(8 141682 142170)"
         "(8 142170 142676)"
         "(8 142676 142898)"
         "(8 142898 143326)"
         "(8 143326 143566)"
         "(8 143566 143856)"
         "(8 143856 144216)"
         "(8 144216 144810)"
         "(8 144810 145980)"
         "(8 145980 146376)"
         "(8 146376 146722)"
         "(8 146722 147068)"
         "(8 147068 147492)"
         "(8 147492 147758)"
         "(8 147758 148016)"
         "(8 148016 148364)"
         "(8 148364 148602)"
         "(8 148602 148972)"
         "(8 148972 149384)"
         "(8 149384 149826)"
         "(8 149826 150064)"
         "(8 150064 150344)"
         "(8 150344 150908)"
         "(8 150908 151160)"
         "(8 151160 151570)"
         "(8 151570 151950)"
         "(8 151950 152368)"
         "(8 152368 152602)"
         "(8 152602 152850)"
         "(8 152850 153144)"
         "(8 153144 153376)"
         "(8 153376 153650)"
         "(8 153650 154112)"
         "(8 154112 154370)"
         "(8 154370 154776)"
         "(8 154776 155028)"
         "(8 155028 155374)"
         "(8 155374 155626)"
         "(8 155626 155952)"
         "(8 155952 156404)"))
       (:labls
        (:list
         "(6 -1 2 -1 -1)"
         "(29 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(40 -1 0 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(20 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(35 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(58 -1 0 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(34 -1 0 -1 -1)"
         "(31 -1 0 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(18 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(49 -1 0 -1 -1)"
         "(18 -1 1 -1 -1)"
         "(18 -1 0 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(26 -1 1 -1 -1)"
         "(20 -1 1 -1 -1)"
         "(18 -1 0 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(22 -1 0 -1 -1)"
         "(16 -1 2 -1 -1)"
         "(20 -1 1 -1 -1)"
         "(16 -1 2 -1 -1)"
         "(20 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(29 -1 1 -1 -1)"
         "(33 -1 0 -1 -1)"
         "(18 -1 1 -1 -1)"
         "(35 -1 1 -1 -1)"
         "(28 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(17 -1 0 -1 -1)"
         "(35 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(28 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(17 -1 2 -1 -1)"
         "(71 -1 1 -1 -1)"
         "(18 -1 2 -1 -1)"
         "(53 -1 1 -1 -1)"
         "(71 -1 1 -1 -1)"
         "(35 -1 1 -1 -1)"
         "(36 -1 1 -1 -1)"
         "(28 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(35 -1 1 -1 -1)"
         "(35 -1 2 -1 -1)"
         "(36 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(11 -1 3 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(16 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(20 -1 1 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 5 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(10 -1 3 -1 -1)"
         "(12 -1 3 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(9 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(13 -1 2 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(11 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(12 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(11 -1 2 -1 -1)"
         "(3 -1 5 -1 -1)"
         "(9 -1 4 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(20 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(2 -1 4 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(10 -1 3 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(10 -1 2 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(15 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(32 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(19 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(11 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(17 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(18 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(23 -1 2 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(15 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(44 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(12 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(19 -1 2 -1 -1)"
         "(18 -1 3 -1 -1)"
         "(27 -1 2 -1 -1)"
         "(23 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(12 -1 2 -1 -1)"
         "(24 -1 2 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(11 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(8 -1 4 -1 -1)"
         "(3 -1 5 -1 -1)"
         "(6 -1 5 -1 -1)"
         "(35 -1 3 -1 -1)"
         "(11 -1 3 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(21 -1 2 -1 -1)"
         "(17 -1 3 -1 -1)"
         "(12 -1 2 -1 -1)"
         "(12 -1 3 -1 -1)"
         "(8 -1 4 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(19 -1 2 -1 -1)"
         "(25 -1 2 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(22 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(14 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(52 -1 1 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(10 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(10 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(36 -1 3 -1 -1)"
         "(28 -1 2 -1 -1)"
         "(23 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(12 -1 2 -1 -1)"
         "(24 -1 2 -1 -1)"
         "(9 -1 3 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(11 -1 3 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(20 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(36 -1 3 -1 -1)"
         "(11 -1 3 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(38 -1 2 -1 -1)"
         "(12 -1 2 -1 -1)"
         "(12 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(18 -1 2 -1 -1)"
         "(25 -1 2 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(22 -1 2 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(15 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(52 -1 1 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(18 -1 2 -1 -1)"
         "(18 -1 3 -1 -1)"
         "(28 -1 2 -1 -1)"
         "(23 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(12 -1 2 -1 -1)"
         "(24 -1 2 -1 -1)"
         "(9 -1 3 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(11 -1 3 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(20 -1 3 -1 -1)"
         "(3 -1 5 -1 -1)"
         "(4 -1 5 -1 -1)"
         "(37 -1 3 -1 -1)"
         "(20 -1 3 -1 -1)"
         "(38 -1 2 -1 -1)"
         "(12 -1 2 -1 -1)"
         "(12 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(18 -1 1 -1 -1)"
         "(26 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(18 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(17 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(47 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(24 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(68 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(30 -1 0 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(40 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(23 -1 0 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(16 -1 0 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(21 -1 0 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(18 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(91 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(19 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(18 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(21 -1 3 -1 -1)"
         "(19 -1 3 -1 -1)"
         "(17 -1 1 -1 -1)"
         "(16 -1 1 -1 -1)"
         "(21 -1 3 -1 -1)"
         "(20 -1 3 -1 -1)"
         "(17 -1 1 -1 -1)"
         "(16 -1 1 -1 -1)"
         "(47 -1 3 -1 -1)"
         "(40 -1 1 -1 -1)"
         "(46 -1 3 -1 -1)"
         "(33 -1 3 -1 -1)"
         "(33 -1 3 -1 -1)"
         "(30 -1 1 -1 -1)"
         "(30 -1 1 -1 -1)"
         "(47 -1 3 -1 -1)"
         "(40 -1 1 -1 -1)"
         "(40 -1 3 -1 -1)"
         "(30 -1 1 -1 -1)"
         "(30 -1 1 -1 -1)"
         "(40 -1 1 -1 -1)"
         "(33 -1 3 -1 -1)"
         "(33 -1 3 -1 -1)"
         "(47 -1 2 -1 -1)"
         "(33 -1 1 -1 -1)"
         "(24 -1 1 -1 -1)"
         "(23 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(40 -1 3 -1 -1)"
         "(33 -1 1 -1 -1)"
         "(47 -1 3 -1 -1)"
         "(33 -1 1 -1 -1)"
         "(21 -1 3 -1 -1)"
         "(19 -1 3 -1 -1)"
         "(17 -1 1 -1 -1)"
         "(16 -1 1 -1 -1)"
         "(21 -1 3 -1 -1)"
         "(19 -1 3 -1 -1)"
         "(17 -1 1 -1 -1)"
         "(17 -1 1 -1 -1)"
         "(47 -1 3 -1 -1)"
         "(40 -1 1 -1 -1)"
         "(46 -1 3 -1 -1)"
         "(33 -1 3 -1 -1)"
         "(33 -1 3 -1 -1)"
         "(30 -1 1 -1 -1)"
         "(30 -1 1 -1 -1)"
         "(47 -1 3 -1 -1)"
         "(40 -1 1 -1 -1)"
         "(40 -1 3 -1 -1)"
         "(30 -1 1 -1 -1)"
         "(30 -1 1 -1 -1)"
         "(40 -1 1 -1 -1)"
         "(33 -1 3 -1 -1)"
         "(33 -1 3 -1 -1)"
         "(24 -1 3 -1 -1)"
         "(23 -1 2 -1 -1)"
         "(33 -1 1 -1 -1)"
         "(24 -1 1 -1 -1)"
         "(23 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(21 -1 3 -1 -1)"
         "(19 -1 2 -1 -1)"
         "(33 -1 1 -1 -1)"
         "(47 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(9 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 5 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(10 -1 3 -1 -1)"
         "(11 -1 3 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(3 -1 5 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(7 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(10 -1 2 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(9 -1 3 -1 -1)"
         "(3 -1 5 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 5 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(9 -1 4 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(14 -1 3 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(9 -1 4 -1 -1)"
         "(9 -1 3 -1 -1)"
         "(9 -1 4 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(11 -1 4 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(11 -1 3 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(13 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(9 -1 4 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(3 -1 5 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 5 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(7 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(3 -1 5 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(3 -1 5 -1 -1)"
         "(5 -1 5 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 5 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(3 -1 5 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(7 -1 4 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(9 -1 3 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(9 -1 4 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(5 -1 5 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(3 -1 5 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 5 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(7 -1 4 -1 -1)"
         "(7 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(16 -1 0 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(3 -1 5 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 5 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 5 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(6 -1 2 -1 -1)"))))))
   (:id 28))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 280)
   (:y 466)
   (:w 291)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "(dur=~a)(pitch=~a)(int=~a)")
   (:id 29))
  (:comment
   (:x 183)
   (:y 230)
   (:w 305)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "1) SET THE ACTIVE DIMENSIONS OF THE LABELS
(duration pitchmode intensity voice_casting nmf)")
   (:id 30))
  (:box
   (:type :function)
   (:reference (:symbol "OM-DIRECTORY" "OM-API"))
   (:group-id nil)
   (:name "om-directory")
   (:x 1278)
   (:y 261)
   (:w 105)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATH")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "type") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 31))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1391)
   (:y 233)
   (:w 100)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "seg_desc")
   (:id 32))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "make-local-dyci2-path")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (500 500)) (:position (-742 194)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (folder corpus_subfolder) "
       "  (namestring "
       "   (merge-pathnames "
       "    (string+ folder \"Corpus/\" corpus_subfolder \"/\") "
       "    ;(om-user-home)"
       "    )))"
       "  "))))
   (:group-id nil)
   (:name "make-local-dyci2-path")
   (:x 1226)
   (:y 229)
   (:w 155)
   (:h 29)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "FOLDER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CORPUS_SUBFOLDER")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 33))
  (:comment
   (:x 617)
   (:y 919)
   (:w 129)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "7) EVALUATE")
   (:id 34))
  (:box
   (:type :function)
   (:reference (:symbol "OM-CREATE-DIRECTORY" "OM-API"))
   (:group-id nil)
   (:name "om-create-directory")
   (:x 1133)
   (:y 748)
   (:w 142)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATHNAME")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 35))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "make-local-dyci2-path")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (500 500)) (:position (-1008 218)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (folder results_subfolder) "
       "  (namestring "
       "   (merge-pathnames "
       "   (string+ folder \"Results/\" results_subfolder \"/\") "
       "    ;(om-user-home)"
       "    )))"
       ""))))
   (:group-id nil)
   (:name "make-local-dyci2-path")
   (:x 1126)
   (:y 722)
   (:w 155)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "FOLDER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RESULTS_SUBFOLDER")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 36))
  (:comment
   (:x 693)
   (:y 644)
   (:w 94)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Crossfade (ms)")
   (:id 37))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-process-dataset")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (689 507)) (:position (84 115)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "lab_files") (:doc "")))
       (:group-id nil)
       (:name "lab_files")
       (:x 212)
       (:y 2)
       (:w 66)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "sound") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "sound")
       (:x 229)
       (:y 509)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "mem") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "mem")
       (:x 489)
       (:y 512)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "list_activation_labels")
         (:doc "")))
       (:group-id nil)
       (:name "list_activation_labels")
       (:x 545)
       (:y 6)
       (:w 141)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "labels") (:index 3) (:doc "")))
       (:group-id nil)
       (:name "labels")
       (:x 594)
       (:y 507)
       (:w 53)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "extension_audio_files")
         (:doc "")))
       (:group-id nil)
       (:name "extension_audio_files")
       (:x 717)
       (:y 2)
       (:w 147)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "function_process_label")
         (:doc "")))
       (:group-id nil)
       (:name "function_process_label")
       (:x 956)
       (:y 38)
       (:w 155)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name "TEXTBUFFER")
       (:x 284)
       (:y 115)
       (:w 148)
       (:h 82)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params (:read-mode :lines-cols))
       (:value
        (:object
         (:class textbuffer)
         (:slots ((:contents nil)))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 7))
      (:box
       (:type :object)
       (:reference sound)
       (:group-id nil)
       (:name nil)
       (:x 114)
       (:y 312)
       (:w 300)
       (:h 71)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value :choose-file)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "markers")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "access-from-file")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "markers") (:reactive nil))
        (:output (:name "access-from-file") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class sound)
         (:slots
          ((:onset 0)
           (:duration 0)
           (:n-samples nil)
           (:n-channels nil)
           (:sample-rate nil)
           (:smpl-type :float)
           (:sample-size 16)))
         (:add-slots
          ((:markers nil)
           (:gain 1.0)
           (:access-from-file nil)
           (:file-pathname nil)))))
       (:id 8))
      (:box
       (:type :function)
       (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
       (:group-id nil)
       (:name "om-make-pathname")
       (:x 93)
       (:y 205)
       (:w 145)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :key)
         (:name "directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "name")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "type")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference pathname-name)
       (:group-id nil)
       (:name "pathname-name")
       (:x 97)
       (:y 119)
       (:w 125)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:comment
       (:x 21)
       (:y 324)
       (:w 63)
       (:h 50)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "le même nom mais en .wav")
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-markers")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines processed_labels)"
           "  (loop for i from 0 to (- (length lines) 1)"
           "        collect"
           "         (list"
           "          (sec->ms (first (nth i lines)))"
           "          ;(first (nth i lines))"
           "          (write-to-string (nth i processed_labels))"
           "          )         "
           "         )"
           "  )"
           ""
           ";(lambda (lines list_activation_labels)"
           ";  (loop for line in lines collect"
           ";        (list"
           ";         (sec->ms (first line))"
           ";         (number-to-string (round (fourth line)))"
           ";         )"
           ";        ))"))))
       (:group-id nil)
       (:name "make-markers")
       (:x 271)
       (:y 279)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 213)
       (:y 54)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 13))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 357)
       (:y 461)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 14))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 235)
       (:y 400)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 15))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-memory")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines n processed_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        ;collect (write-to-string (list n (first line) (second line)))"
           "        into mem-segments"
           "        finally return (list mem-segments processed_labels))"
           ")"
           "                                 "
           "#|"
           "(lambda (lines n  list_activation_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        into mem-segments"
           "        ;collect (write-to-string (round (/ (fourth line) div_intens)))"
           "        ;collect (write-to-string (list (round (/ (fourth line) div_intens))))"
           "        collect (write-to-string"
           "                 (list "
           "                 ; duree"
           "                  (if (> div_dur 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) div_dur)) -1)"
           "                 ;pitch"
           "                  (if (= mod_12 1) "
           "                      (if (= (round (third line)) 0) -1 (mod (round (third line))12))"
           "                    (if (< mod_12 0) -1 (round (third line)))"
           "                    )"
           "                 ;inten"
           "                  (if (> div_intens 0) (round (/ (fourth line) div_intens)) -1)"
           "                 ;voice casting"
           "                  (if (> vc 0) (round (/ (fifth line) vc)) -1)"
           "                 ;nmf"
           "                  (if (> nmf 0) (round (/ (sixth line) nmf)) -1)"
           "                 ))"
           "        into labels"
           "        finally return (list mem-segments labels)))"
           "|#"
           "                                 "))))
       (:group-id nil)
       (:name "make-memory")
       (:x 461)
       (:y 281)
       (:w 200)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 485)
       (:y 387)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 17))
      (:box
       (:type :special)
       (:reference loop-for)
       (:group-id nil)
       (:name "for")
       (:x 508)
       (:y 92)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "from")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "to")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 18))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 375)
       (:y 51)
       (:w 71)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 502)
       (:y 57)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 20))
      (:comment
       (:x 556)
       (:y 102)
       (:w 47)
       (:h 22)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "#sound")
       (:id 21))
      (:box
       (:type :function)
       (:reference split)
       (:group-id nil)
       (:name "split")
       (:x 554)
       (:y 335)
       (:w 59)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 22))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 592)
       (:y 388)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 23))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 486)
       (:y 468)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 593)
       (:y 462)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 25))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "select-labels")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines list_activation_labels)"
           "  (loop for line in lines "
           "        collect (append "
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
           "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
           "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
           "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
           "                       collect (nth (+ i 1) line)"
           "                       )"
           "                 )"
           "        into labels"
           "        finally return labels"
           "        )"
           "  )"
           ""))))
       (:group-id nil)
       (:name "select-labels")
       (:x 767)
       (:y 243)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST_ACTIVATION_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 26))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 753)
       (:y 294)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value box)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value name)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 27))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "value box")
       (:x 416)
       (:y 277)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value t)
       (:id 28)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 0 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 26 :in 1)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 9 :in 2))
       (:attributes (:color nil :style nil :modif (0 1/3))))
      (:connection (:from (:box 6 :out 0)) (:to (:box 27 :in 0)))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/92))))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 16 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/94))))
      (:connection (:from (:box 7 :out 1)) (:to (:box 26 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 15 :out 1)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 22 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 17 :out 1)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 16 :in 1)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 22 :out 1)) (:to (:box 23 :in 0)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 14 :in 2)))
      (:connection (:from (:box 23 :out 1)) (:to (:box 25 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 27 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 16 :in 2)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 8 :in 2))))))
   (:group-id nil)
   (:name "loop-process-dataset")
   (:x 930)
   (:y 357)
   (:w 150)
   (:h 39)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "lab_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_activation_labels")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "extension_audio_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function_process_label")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "sound") (:reactive nil))
    (:output (:name "mem") (:reactive nil))
    (:output (:name "labels") (:reactive nil)))
   (:id 38))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1027)
   (:y 298)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "wav")
   (:id 39))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 875)
   (:y 398)
   (:w 231)
   (:h 102)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(1 106 510)"
         "(1 510 848)"
         "(1 848 1190)"
         "(1 1190 1546)"
         "(1 1546 1892)"
         "(1 1892 2290)"
         "(1 2290 2694)"
         "(1 2694 2928)"
         "(1 2928 3186)"
         "(1 3186 3460)"
         "(1 3460 3664)"
         "(1 3664 3902)"
         "(1 3902 4162)"
         "(1 4162 4634)"
         "(1 4634 4886)"
         "(1 4886 5534)"
         "(1 5534 5936)"
         "(1 5936 6392)"
         "(1 6392 6758)"
         "(1 6758 7186)"
         "(1 7186 7610)"
         "(1 7610 7896)"
         "(1 7896 8084)"
         "(1 8084 8470)"
         "(1 8470 8816)"
         "(1 8816 9158)"
         "(1 9158 9408)"
         "(1 9408 9822)"
         "(1 9822 10086)"
         "(1 10086 10450)"
         "(1 10450 10716)"
         "(1 10716 11068)"
         "(1 11068 11310)"
         "(1 11310 11796)"
         "(1 11796 12176)"
         "(1 12176 12452)"
         "(1 12452 13040)"
         "(1 13040 13276)"
         "(1 13276 13638)"
         "(1 13638 13894)"
         "(1 13894 14142)"
         "(1 14142 14502)"
         "(1 14502 14922)"
         "(1 14922 15268)"
         "(1 15268 15632)"
         "(1 15632 16040)"
         "(1 16040 16402)"
         "(1 16402 16780)"
         "(1 16780 17180)"
         "(1 17180 17518)"
         "(1 17518 17782)"
         "(1 17782 18036)"
         "(1 18036 18292)"
         "(1 18292 18666)"
         "(1 18666 18908)"
         "(1 18908 19174)"
         "(1 19174 19466)"
         "(1 19466 20158)"
         "(1 20158 20888)"
         "(1 20888 21732)"
         "(1 21732 22228)"
         "(1 22228 22650)"
         "(1 22650 22916)"
         "(1 22916 23242)"
         "(1 23242 23500)"
         "(1 23500 23836)"
         "(1 23836 24176)"
         "(1 24176 24566)"
         "(1 24566 24870)"
         "(1 24870 25096)"
         "(1 25096 25418)"
         "(1 25418 25730)"
         "(1 25730 26052)"
         "(1 26052 26280)"
         "(1 26280 26554)"
         "(1 26554 26782)"
         "(1 26782 27186)"
         "(1 27186 27484)"
         "(1 27484 27748)"
         "(1 27748 27968)"
         "(1 27968 28254)"
         "(1 28254 28554)"
         "(1 28554 28810)"
         "(1 28810 29146)"
         "(1 29146 29544)"
         "(1 29544 29920)"
         "(1 29920 30324)"
         "(1 30324 30582)"
         "(1 30582 30836)"
         "(1 30836 31274)"
         "(1 31274 31680)"
         "(1 31680 32482)"
         "(1 32482 32884)"
         "(1 32884 33118)"
         "(1 33118 33386)"
         "(1 33386 33644)"
         "(1 33644 33996)"
         "(1 33996 34412)"
         "(1 34412 34892)"
         "(1 34892 35500)"
         "(1 35500 35910)"
         "(1 35910 36424)"
         "(1 36424 36660)"
         "(1 36660 37024)"
         "(1 37024 37410)"
         "(1 37410 37790)"
         "(1 37790 38178)"
         "(1 38178 38502)"
         "(1 38502 38818)"
         "(1 38818 39036)"
         "(1 39036 39274)"
         "(1 39274 40004)"
         "(1 40004 40278)"
         "(1 40278 40844)"
         "(1 40844 41118)"
         "(1 41118 42272)"
         "(1 42272 42584)"
         "(1 42584 42792)"
         "(1 42792 43236)"
         "(1 43236 43538)"
         "(1 43538 43922)"
         "(1 43922 44266)"
         "(1 44266 44520)"
         "(1 44520 44898)"
         "(1 44898 45246)"
         "(1 45246 45656)"
         "(1 45656 46022)"
         "(1 46022 46384)"
         "(1 46384 46778)"
         "(1 46778 47040)"
         "(1 47040 47286)"
         "(1 47286 47546)"
         "(1 47546 47820)"
         "(1 47820 48082)"
         "(1 48082 48412)"
         "(1 48412 48628)"
         "(1 48628 48858)"
         "(1 48858 49066)"
         "(1 49066 49308)"
         "(1 49308 49532)"
         "(1 49532 50170)"
         "(1 50170 50450)"
         "(1 50450 51142)"
         "(1 51142 51382)"
         "(1 51382 51598)"
         "(1 51598 51958)"
         "(1 51958 52220)"
         "(1 52220 52510)"
         "(1 52510 52846)"
         "(1 52846 53412)"
         "(1 53412 54090)"
         "(1 54090 54506)"
         "(1 54506 55578)"
         "(1 55578 55968)"
         "(1 55968 56680)"
         "(1 56680 57326)"
         "(1 57326 57990)"
         "(1 57990 58506)"
         "(1 58506 58772)"
         "(1 58772 59030)"
         "(1 59030 59414)"
         "(1 59414 59948)"
         "(1 59948 60486)"
         "(1 60486 60778)"
         "(1 60778 61132)"
         "(1 61132 61924)"
         "(1 61924 62416)"
         "(1 62416 64270)"
         "(1 64270 64552)"
         "(1 64552 64792)"
         "(1 64792 65118)"
         "(1 65118 65474)"
         "(1 65474 65772)"
         "(1 65772 66066)"
         "(1 66066 66324)"
         "(1 66324 66722)"
         "(1 66722 67276)"
         "(1 67276 68066)"
         "(1 68066 68306)"
         "(1 68306 69268)"
         "(1 69268 69534)"
         "(1 69534 70158)"
         "(1 70158 70754)"
         "(1 70754 71398)"
         "(1 71398 72028)"
         "(1 72028 72234)"
         "(1 72234 72528)"
         "(1 72528 72898)"
         "(1 72898 73136)"
         "(1 73136 73412)"
         "(1 73412 73798)"
         "(1 73798 74194)"
         "(1 74194 74440)"
         "(1 74440 74782)"
         "(1 74782 75042)"
         "(1 75042 75332)"
         "(1 75332 75636)"
         "(1 75636 76724)"
         "(1 76724 77142)"
         "(1 77142 77518)"
         "(1 77518 77738)"
         "(1 77738 77988)"
         "(1 77988 78412)"
         "(1 78412 78756)"
         "(1 78756 79148)"
         "(1 79148 79514)"
         "(1 79514 79884)"
         "(1 79884 80242)"
         "(1 80242 80642)"
         "(1 80642 81008)"
         "(1 81008 81260)"
         "(1 81260 81684)"
         "(1 81684 81926)"
         "(1 81926 82286)"
         "(1 82286 82546)"
         "(1 82546 82906)"
         "(1 82906 83188)"
         "(1 83188 83564)"
         "(1 83564 83926)"
         "(1 83926 84166)"
         "(1 84166 84372)"
         "(1 84372 84608)"
         "(1 84608 84964)"
         "(1 84964 85560)"
         "(1 85560 85838)"
         "(1 85838 86202)"
         "(1 86202 86456)"
         "(1 86456 86976)"
         "(1 86976 87444)"
         "(1 87444 87710)"
         "(1 87710 88002)"
         "(1 88002 88390)"
         "(1 88390 88602)"
         "(1 88602 88902)"
         "(1 88902 89278)"
         "(1 89278 89666)"
         "(1 89666 89862)"
         "(1 89862 90124)"
         "(1 90124 91018)"
         "(1 91018 91392)"
         "(1 91392 91628)"
         "(1 91628 91900)"
         "(1 91900 92140)"
         "(1 92140 92478)"
         "(1 92478 92882)"
         "(1 92882 93246)"
         "(1 93246 93604)"
         "(1 93604 93990)"
         "(1 93990 94352)"
         "(1 94352 94746)"
         "(1 94746 95104)"
         "(1 95104 95418)"
         "(1 95418 95732)"
         "(1 95732 96148)"
         "(1 96148 96394)"
         "(1 96394 96628)"
         "(1 96628 96884)"
         "(1 96884 97230)"
         "(1 97230 97512)"
         "(1 97512 97744)"
         "(1 97744 98116)"
         "(1 98116 98376)"
         "(1 98376 98628)"
         "(1 98628 99002)"
         "(1 99002 99340)"
         "(1 99340 99560)"
         "(1 99560 99990)"
         "(1 99990 100240)"
         "(1 100240 100464)"
         "(1 100464 100704)"
         "(1 100704 100934)"
         "(1 100934 101162)"
         "(1 101162 101426)"
         "(1 101426 102372)"
         "(1 102372 102762)"
         "(1 102762 103008)"
         "(1 103008 103246)"
         "(1 103246 103646)"
         "(1 103646 103970)"
         "(1 103970 104328)"
         "(1 104328 104526)"
         "(1 104526 105130)"
         "(1 105130 105468)"
         "(1 105468 105832)"
         "(1 105832 106252)"
         "(1 106252 106748)"
         "(1 106748 107096)"
         "(1 107096 107488)"
         "(1 107488 108012)"
         "(1 108012 108250)"
         "(1 108250 108498)"
         "(1 108498 108930)"
         "(1 108930 109272)"
         "(1 109272 109518)"
         "(1 109518 110002)"
         "(1 110002 110354)"
         "(1 110354 110840)"
         "(1 110840 111040)"
         "(1 111040 111426)"
         "(1 111426 111746)"
         "(1 111746 111974)"
         "(1 111974 112392)"
         "(1 112392 112746)"
         "(1 112746 113138)"
         "(1 113138 113498)"
         "(1 113498 113884)"
         "(1 113884 114230)"
         "(1 114230 114530)"
         "(1 114530 114764)"
         "(1 114764 115010)"
         "(1 115010 115268)"
         "(1 115268 115720)"
         "(1 115720 116066)"
         "(1 116066 116338)"
         "(1 116338 116544)"
         "(1 116544 116852)"
         "(1 116852 117194)"
         "(1 117194 117594)"
         "(1 117594 117890)"
         "(1 117890 118128)"
         "(1 118128 118332)"
         "(1 118332 118684)"
         "(1 118684 119140)"
         "(1 119140 119596)"
         "(1 119596 120216)"
         "(1 120216 120474)"
         "(1 120474 120898)"
         "(1 120898 121260)"
         "(1 121260 121494)"
         "(1 121494 121898)"
         "(1 121898 122268)"
         "(1 122268 122502)"
         "(1 122502 122894)"
         "(1 122894 123128)"
         "(1 123128 123386)"
         "(1 123386 123624)"
         "(1 123624 123908)"
         "(1 123908 124138)"
         "(1 124138 124378)"
         "(1 124378 124618)"
         "(1 124618 124902)"
         "(1 124902 125108)"
         "(1 125108 125330)"
         "(1 125330 125546)"
         "(1 125546 126050)"
         "(1 126050 126348)"
         "(1 126348 126832)"
         "(1 126832 127090)"
         "(1 127090 127306)"
         "(1 127306 127692)"
         "(1 127692 128042)"
         "(1 128042 128714)"
         "(1 128714 129244)"
         "(1 129244 129924)"
         "(1 129924 130474)"
         "(1 130474 130878)"
         "(1 130878 131342)"
         "(1 131342 131628)"
         "(1 131628 131854)"
         "(1 131854 132080)"
         "(1 132080 132260)"
         "(1 132260 132520)"
         "(1 132520 132882)"
         "(1 132882 133120)"
         "(1 133120 133582)"
         "(1 133582 133968)"
         "(1 133968 134214)"
         "(1 134214 134622)"
         "(1 134622 134874)"
         "(1 134874 135244)"
         "(1 135244 135486)"
         "(1 135486 135894)"
         "(1 135894 136132)"
         "(1 136132 136476)"
         "(1 136476 136692)"
         "(1 136692 137022)"
         "(1 137022 137244)"
         "(1 137244 137928)"
         "(1 137928 138224)"
         "(1 138224 138550)"
         "(1 138550 138962)"
         "(1 138962 139372)"
         "(1 139372 139618)"
         "(1 139618 139858)"
         "(1 139858 140230)"
         "(1 140230 140848)"
         "(1 140848 141290)"
         "(1 141290 141682)"
         "(1 141682 142170)"
         "(1 142170 142676)"
         "(1 142676 142898)"
         "(1 142898 143326)"
         "(1 143326 143566)"
         "(1 143566 143856)"
         "(1 143856 144216)"
         "(1 144216 144810)"
         "(1 144810 145980)"
         "(1 145980 146376)"
         "(1 146376 146722)"
         "(1 146722 147068)"
         "(1 147068 147492)"
         "(1 147492 147758)"
         "(1 147758 148016)"
         "(1 148016 148364)"
         "(1 148364 148602)"
         "(1 148602 148972)"
         "(1 148972 149384)"
         "(1 149384 149826)"
         "(1 149826 150064)"
         "(1 150064 150344)"
         "(1 150344 150908)"
         "(1 150908 151160)"
         "(1 151160 151570)"
         "(1 151570 151950)"
         "(1 151950 152368)"
         "(1 152368 152602)"
         "(1 152602 152850)"
         "(1 152850 153144)"
         "(1 153144 153376)"
         "(1 153376 153650)"
         "(1 153650 154112)"
         "(1 154112 154370)"
         "(1 154370 154776)"
         "(1 154776 155028)"
         "(1 155028 155374)"
         "(1 155374 155626)"
         "(1 155626 155952)"
         "(1 155952 156404)"))
       (:labls
        (:list
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(16 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"))))))
   (:id 40))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-scenarios-with-stretch_1")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (963 660)) (:position (0 23)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "GENERATOR") (:doc "")))
       (:group-id nil)
       (:name "GENERATOR")
       (:x 0)
       (:y 42)
       (:w 104)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "LENGTH") (:doc "")))
       (:group-id nil)
       (:name "LENGTH")
       (:x 361)
       (:y 15)
       (:w 71)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "CONTINUITY-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "CONTINUITY-LIST")
       (:x 197)
       (:y 18)
       (:w 125)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 139)
       (:y 464)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "VOICE-MAX-CONT-MASTER")
         (:doc "")))
       (:group-id nil)
       (:name "VOICE-MAX-CONT-MASTER")
       (:x 424)
       (:y 36)
       (:w 195)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 5)
         (:name "VOICEGENERATOR")
         (:doc "")))
       (:group-id nil)
       (:name "VOICEGENERATOR")
       (:x 561)
       (:y 54)
       (:w 135)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 6) (:name "SOUND_DB") (:doc "")))
       (:group-id nil)
       (:name "SOUND_DB")
       (:x 603)
       (:y 118)
       (:w 89)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 7) (:name "XFADE") (:doc "")))
       (:group-id nil)
       (:name "XFADE")
       (:x 546)
       (:y 131)
       (:w 62)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 8) (:name "RES_DIR") (:doc "")))
       (:group-id nil)
       (:name "RES_DIR")
       (:x 517)
       (:y 15)
       (:w 74)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "list_dur") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "list_dur")
       (:x 478)
       (:y 528)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 9))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "query") (:index 3) (:doc "")))
       (:group-id nil)
       (:name "query")
       (:x 288)
       (:y 527)
       (:w 55)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 10))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 337)
       (:y 88)
       (:w 111)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 92)
       (:y 266)
       (:w 131)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value
        (:list
         "69"
         "67"
         "65"
         "67"
         "64"
         "66"
         "69"
         "65"
         "53"
         "53"
         "46"
         "46"
         "53"
         "51"
         "52"
         "64"
         "66"
         "68"
         "64"
         "64"
         "65"
         "64"
         "59"
         "64"
         "66"
         "68"
         "64"
         "66"
         "66"
         "68"
         "69"
         "68"
         "65"
         "69"
         "67"
         "67"
         "66"
         "67"
         "67"
         "65"
         "-12723"
         "65"
         "65"
         "65"
         "65"
         "67"
         "65"
         "60"
         "65"
         "65"))
       (:id 12))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 57)
       (:y 98)
       (:w 107)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "max_continuity")
       (:id 13))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 367)
       (:y 122)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :function)
       (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
       (:group-id nil)
       (:name "om-print-format")
       (:x 104)
       (:y 375)
       (:w 120)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FORMAT-STRING")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "args")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "prompt")
         (:value "DYCI2")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 7)
       (:y 339)
       (:w 123)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "NEW SCENARIO: ~A")
       (:id 16))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 132)
       (:y 340)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:library "om-dyci2")
       (:type :function)
       (:reference (:symbol "DYCI2QUERY" "DYCI2"))
       (:group-id nil)
       (:name "dyci2query")
       (:x 83)
       (:y 192)
       (:w 96)
       (:h 30)
       (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "QUERY")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:library "om-dyci2")
       (:type :function)
       (:reference (:symbol "DYCI2SETPARAM" "DYCI2"))
       (:group-id nil)
       (:name "dyci2setparam")
       (:x 15)
       (:y 158)
       (:w 116)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PARAMETER")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "VALUE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :function)
       (:reference remove)
       (:group-id nil)
       (:name "remove")
       (:x 74)
       (:y 228)
       (:w 89)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "generate_and_write_variations")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size (889 723)) (:position (0 23)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "len_scen") (:doc "")))
           (:group-id nil)
           (:name "len_scen")
           (:x 653)
           (:y 154)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 147)
           (:y 784)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "cont_scen")
             (:doc "")))
           (:group-id nil)
           (:name "cont_scen")
           (:x 737)
           (:y 158)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "list_dur")
             (:index 2)
             (:doc "")))
           (:group-id nil)
           (:name "list_dur")
           (:x 61)
           (:y 529)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "cont_gen") (:doc "")))
           (:group-id nil)
           (:name "cont_gen")
           (:x 393)
           (:y 41)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "path_output_directory")
             (:doc "")))
           (:group-id nil)
           (:name "path_output_directory")
           (:x 822)
           (:y 311)
           (:w 148)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "xfade") (:doc "")))
           (:group-id nil)
           (:name "xfade")
           (:x 277)
           (:y 343)
           (:w 51)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 6) (:name "query") (:doc "")))
           (:group-id nil)
           (:name "query")
           (:x 305)
           (:y 269)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 7)
             (:name "GENERATOR")
             (:doc "")))
           (:group-id nil)
           (:name "GENERATOR")
           (:x 77)
           (:y 112)
           (:w 98)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 8)
             (:name "snd_database")
             (:doc "")))
           (:group-id nil)
           (:name "snd_database")
           (:x 10)
           (:y 355)
           (:w 104)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "remix")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size (728 709)) (:position (0 23)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "SOUNDS")
                 (:doc "")))
               (:group-id nil)
               (:name "SOUNDS")
               (:x 38)
               (:y 145)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "SEGMENTS")
                 (:doc "")))
               (:group-id nil)
               (:name "SEGMENTS")
               (:x 156)
               (:y 20)
               (:w 89)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "list_dur")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "list_dur")
               (:x 491)
               (:y 651)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "CROSSFADE")
                 (:doc "")))
               (:group-id nil)
               (:name "CROSSFADE")
               (:x 414)
               (:y 68)
               (:w 103)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "out")
                 (:index 2)
                 (:doc "")))
               (:group-id nil)
               (:name "out")
               (:x 207)
               (:y 638)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "outfile")
                 (:doc "")))
               (:group-id nil)
               (:name "outfile")
               (:x 253)
               (:y 509)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 36)
               (:y 600)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 164)
               (:y 78)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 7))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 115)
               (:y 533)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference split)
               (:group-id nil)
               (:name "split")
               (:x 166)
               (:y 160)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "out1") (:reactive nil))
                (:output (:name "out2") (:reactive nil)))
               (:id 9))
              (:box
               (:type :function)
               (:reference om+)
               (:group-id nil)
               (:name "om+")
               (:x 218)
               (:y 269)
               (:w 62)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 131)
               (:y 273)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 11))
              (:box
               (:type :function)
               (:reference nth)
               (:group-id nil)
               (:name "nth")
               (:x 39)
               (:y 267)
               (:w 55)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ORIG-N")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ORIG-LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 12))
              (:box
               (:type :function)
               (:reference read-from-string)
               (:group-id nil)
               (:name "read-from-string")
               (:x 134)
               (:y 125)
               (:w 123)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "STRING")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 13))
              (:box
               (:type :function)
               (:reference 1-)
               (:group-id nil)
               (:name "1-")
               (:x 19)
               (:y 234)
               (:w 49)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 308)
               (:y 243)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 2)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 505)
               (:y 342)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 16))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 478)
               (:y 274)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-processing)
               (:group-id nil)
               (:name "supervp-processing")
               (:x 56)
               (:y 384)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SRC")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PROCESSINGS")
                 (:value "")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "BEGIN")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "END")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "FFTSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSTEP-OVERSAMP")
                 (:value 8)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOW-TYPE")
                 (:value "hanning")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SHAPE-INVARIANT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PRESERVE-TRANSIENT")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NORMALIZE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "OUTFILE")
                 (:value "out.aiff")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-timestretch)
               (:group-id nil)
               (:name "supervp-timestretch")
               (:x 297)
               (:y 335)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 19))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 565)
               (:y 178)
               (:w 46)
               (:h 32)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 20))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 296)
               (:y 216)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 21))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 559)
               (:y 151)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 22))
              (:comment
               (:x 593)
               (:y 124)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "duration event")
               (:id 23))
              (:comment
               (:x 498)
               (:y 122)
               (:w 87)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "target duration")
               (:id 24))
              (:comment
               (:x 613)
               (:y 183)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "coef stretch")
               (:id 25))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 89)
               (:y 314)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 26))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 192)
               (:y 313)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 27))
              (:box
               (:type :function)
               (:reference (:symbol "CONCAT-AUDIOFILES" "DYCI2"))
               (:group-id nil)
               (:name "concat-audiofiles")
               (:x 136)
               (:y 587)
               (:w 128)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FILES")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "crossfade")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "out")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 28))
              (:box
               (:type :function)
               (:reference seq)
               (:group-id nil)
               (:name "seq")
               (:x 289)
               (:y 622)
               (:w 57)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OP")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "op+1") (:reactive nil)))
               (:id 29))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 404)
               (:y 585)
               (:w 78)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 30))
              (:box
               (:type :function)
               (:reference (:symbol "OM-DELETE-FILE" "OM-API"))
               (:group-id nil)
               (:name "om-delete-file")
               (:x 361)
               (:y 529)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NAME")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 31)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 12 :in 1)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 21 :in 0))
               (:attributes (:color nil :style nil :modif (0 0))))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 28 :in 1)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 28 :in 2)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 28 :in 0)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 30 :in 1)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 17 :in 1))
               (:attributes (:color nil :style nil :modif (0 -0.45))))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 17 :in 0))
               (:attributes
                (:color nil :style nil :modif (0 -1683/4277))))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 27 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 26 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 12 :in 0)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 10 :in 1)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 11 :in 1))
               (:attributes (:color nil :style nil :modif (0 -1/20))))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 6 :in 1))
               (:attributes (:color nil :style nil :modif (0 30/233))))
              (:connection
               (:from (:box 16 :out 1))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 22 :in 1))
               (:attributes
                (:color nil :style nil :modif (-221/2622 0))))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 22 :in 0)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 18 :in 1)))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 21 :in 1)))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 19 :in 0))
               (:attributes (:color nil :style nil :modif (0 -1/9))))
              (:connection
               (:from (:box 21 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 26 :out 0))
               (:to (:box 18 :in 2)))
              (:connection
               (:from (:box 27 :out 0))
               (:to (:box 18 :in 3)))
              (:connection
               (:from (:box 28 :out 0))
               (:to (:box 29 :in 0)))
              (:connection
               (:from (:box 29 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 30 :out 0))
               (:to (:box 29 :in 1)))
              (:connection
               (:from (:box 31 :out 0))
               (:to (:box 30 :in 0))))))
           (:group-id nil)
           (:name "remix")
           (:x 60)
           (:y 406)
           (:w 105)
           (:h 81)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOUNDS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEGMENTS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CROSSFADE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "outfile")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "list_dur") (:reactive nil))
            (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 165)
           (:y 200)
           (:w 107)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "max_continuity")
           (:id 11))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "path_generated_sequence")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size (707 565)) (:position (0 181)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "name_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "name_scen")
               (:x 103)
               (:y 34)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "path")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "path")
               (:x 230)
               (:y 507)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "len_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "len_scen")
               (:x 222)
               (:y 34)
               (:w 74)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "cont_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_scen")
               (:x 315)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "idtf_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "idtf_gen")
               (:x 417)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "cont_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_gen")
               (:x 500)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 6)
                 (:name "path_output_directory")
                 (:doc "")))
               (:group-id nil)
               (:name "path_output_directory")
               (:x 602)
               (:y 37)
               (:w 148)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value
                  "/Users/nika/Desktop/OM7/OM-DYCI2_Tests/Results/")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :function)
               (:reference concatenate)
               (:group-id nil)
               (:name "concatenate")
               (:x 19)
               (:y 389)
               (:w 500)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "RESULT-TYPE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".aiff")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".wav")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 17)
               (:y 301)
               (:w 47)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value string)
               (:id 8))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 83)
               (:y 339)
               (:w 54)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "Scen")
               (:id 9))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 158)
               (:y 339)
               (:w 40)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_L")
               (:id 10))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 226)
               (:y 339)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 11))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 289)
               (:y 333)
               (:w 53)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "-Gen")
               (:id 12))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 363)
               (:y 333)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 13))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 203)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 299)
               (:y 110)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 401)
               (:y 174)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 525)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:type :function)
               (:reference pathname)
               (:group-id nil)
               (:name "pathname")
               (:x 398)
               (:y 448)
               (:w 91)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "P")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18))
              (:box
               (:type :function)
               (:reference namestring)
               (:group-id nil)
               (:name "namestring")
               (:x 60)
               (:y 149)
               (:w 97)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "P")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 19)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 7 :in 3)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 19 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 7 :in 2)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 7 :in 4)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 7 :in 6)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 7 :in 8)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 7 :in 10)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 7 :in 5)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 7 :in 7)))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 7 :in 9)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 7 :in 11)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 7 :in 1))))))
           (:group-id nil)
           (:name "path_generated_sequence")
           (:x 599)
           (:y 520)
           (:w 200)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "name_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "len_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "idtf_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "path_output_directory")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "path") (:reactive nil)))
           (:id 12))
          (:box
           (:type :function)
           (:reference format)
           (:group-id nil)
           (:name "format")
           (:x 574)
           (:y 277)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "DESTINATION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTROL-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 582)
           (:y 233)
           (:w 73)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "[L~DC~D]")
           (:id 14))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 906)
           (:y 627)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 848)
           (:y 555)
           (:w 102)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "ITERATION #~D")
           (:id 16))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 934)
           (:y 595)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 318)
           (:y 647)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 247)
           (:y 615)
           (:w 100)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "OUTPUT ~A")
           (:id 19))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 347)
           (:y 580)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "filter-output")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (output) "
               "  (if "
               "      (and (> (length output) 0) (nth 0 output)) "
               "      output "
               "    ;(if "
               "     ;   (and (> (length output) 0) (nth 1 output))"
               "        ;(list \"(1 0 200)\" \"(1 301 600)\")"
               "    (loop for i from 0 to 5 collect \"(1 0 100)\")"
               "      ;)"
               "    )"
               "  )"))))
           (:group-id nil)
           (:name "filter-output")
           (:x 156)
           (:y 316)
           (:w 98)
           (:h 28)
           (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock :eval-once)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "OUTPUT")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 21))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 119)
           (:y 351)
           (:w 78)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 22))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 524)
           (:y 638)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 23))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 437)
           (:y 605)
           (:w 120)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "original output ~A")
           (:id 24))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 553)
           (:y 579)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 25))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2SETPARAM" "DYCI2"))
           (:group-id nil)
           (:name "dyci2setparam")
           (:x 52)
           (:y 239)
           (:w 116)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PARAMETER")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "VALUE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 26))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2QUERY" "DYCI2"))
           (:group-id nil)
           (:name "dyci2query")
           (:x 157)
           (:y 276)
           (:w 96)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "QUERY")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 27))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 699)
           (:y 468)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 28))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 249)
           (:y 755)
           (:w 133)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 29)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 13 :in 2)))
          (:connection (:from (:box 0 :out 0)) (:to (:box 12 :in 1)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 13 :in 3)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 12 :in 2)))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 26 :in 2))
           (:attributes (:color nil :style nil :modif (0 -4/83))))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 12 :in 4))
           (:attributes (:color nil :style nil :modif (0 -1/3))))
          (:connection (:from (:box 5 :out 0)) (:to (:box 12 :in 5)))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 10 :in 2))
           (:attributes
            (:color nil :style nil :modif (0 -0.09545457))))
          (:connection (:from (:box 7 :out 0)) (:to (:box 27 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 26 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
          (:connection
           (:from (:box 10 :out 0))
           (:to (:box 3 :in 0))
           (:attributes (:color nil :style nil :modif (0 -41/12374))))
          (:connection (:from (:box 10 :out 1)) (:to (:box 29 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 26 :in 1)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 10 :in 3)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 29 :in 3)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 15 :in 1)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 29 :in 1)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 0)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 1)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 22 :in 1)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 25 :in 0)))
          (:connection
           (:from (:box 22 :out 0))
           (:to (:box 10 :in 1))
           (:attributes (:color nil :style nil :modif (0 -3/16))))
          (:connection
           (:from (:box 22 :out 0))
           (:to (:box 20 :in 0))
           (:attributes (:color nil :style nil :modif (0 -79/209))))
          (:connection (:from (:box 23 :out 0)) (:to (:box 29 :in 2)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 23 :in 0)))
          (:connection (:from (:box 25 :out 0)) (:to (:box 23 :in 1)))
          (:connection (:from (:box 26 :out 0)) (:to (:box 27 :in 0)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 28 :out 0)) (:to (:box 12 :in 3)))
          (:connection
           (:from (:box 28 :out 0))
           (:to (:box 17 :in 0))
           (:attributes (:color nil :style nil :modif (0 -36/107))))
          (:connection
           (:from (:box 29 :out 0))
           (:to (:box 1 :in 0))))))
       (:group-id nil)
       (:name "generate_and_write_variations")
       (:x 359)
       (:y 327)
       (:w 202)
       (:h 91)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "len_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_gen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "path_output_directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "xfade")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "query")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GENERATOR")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "snd_database")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "list_dur") (:reactive nil)))
       (:id 21)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 11 :in 0)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 19 :in 2))
       (:attributes (:color nil :style nil :modif (0 7/27))))
      (:connection (:from (:box 2 :out 0)) (:to (:box 21 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 21 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 21 :in 6)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 21 :in 7)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 21 :in 4)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 21 :in 3)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 17 :in 0)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 21 :in 5))
       (:attributes (:color nil :style nil :modif (-3/337 0))))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 10 :in 0))
       (:attributes (:color nil :style nil :modif (0 -83/241))))
      (:connection (:from (:box 13 :out 0)) (:to (:box 19 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 21 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 15 :in 1)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 20 :in 1)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 18 :in 0))
       (:attributes (:color nil :style nil :modif (0 29/105))))
      (:connection (:from (:box 20 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 21 :out 1)) (:to (:box 9 :in 0))))))
   (:group-id nil)
   (:name "loop-scenarios-with-stretch_1")
   (:x 773)
   (:y 723)
   (:w 200)
   (:h 30)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "GENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LENGTH")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTINUITY-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE-MAX-CONT-MASTER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICEGENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND_DB")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "XFADE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RES_DIR")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "list_dur") (:reactive nil))
    (:output (:name "query") (:reactive nil)))
   (:id 41))
  (:box
   (:type :function)
   (:reference car)
   (:group-id nil)
   (:name "car")
   (:x 833)
   (:y 693)
   (:w 55)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "X")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 42))
  (:box
   (:type :function)
   (:reference cdr)
   (:group-id nil)
   (:name "cdr")
   (:x 591)
   (:y 760)
   (:w 55)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "X")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 43))
  (:box
   (:type :function)
   (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
   (:group-id nil)
   (:name "om-make-pathname")
   (:x 1473)
   (:y 466)
   (:w 145)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :key)
     (:name "directory")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "name") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "type") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 44))
  (:box
   (:type :function)
   (:reference pathname-name)
   (:group-id nil)
   (:name "pathname-name")
   (:x 1451)
   (:y 379)
   (:w 125)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "P")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 45))
  (:box
   (:type :function)
   (:reference pathname-type)
   (:group-id nil)
   (:name "pathname-type")
   (:x 1582)
   (:y 378)
   (:w 118)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "P")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 46))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1285)
   (:y 193)
   (:w 110)
   (:h 31)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "All_files")
   (:id 47))
  (:box
   (:type :function)
   (:reference reverse)
   (:group-id nil)
   (:name "reverse")
   (:x 1523)
   (:y 272)
   (:w 78)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 48))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "function_process_label")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (e list_activation_labels) "
       "  (let ("
       "        (div_dur (nth 0 list_activation_labels))"
       "        (mod_12 (nth 1 list_activation_labels))"
       "        (div_intens  (nth 2 list_activation_labels))"
       "        (vc (nth 3 list_activation_labels))"
       "        (nmf (nth 4 list_activation_labels))"
       "        (query_dur (nth 0 e))"
       "        (query_pitch (nth 1 e))"
       "        (query_intens  (nth 2 e))"
       "        (query_vc (nth 3 e))"
       "        (query_nmf (nth 4 e))"
       "        )"
       "    (write-to-string"
       "     (list "
       "      ;duration label"
       "      (if (and (> div_dur 0) (> query_dur -1))"
       "          (round (/ query_dur div_dur)) "
       "        -1)"
       "      ;pitch label"
       "     (if (and (> mod_12 0) (> query_pitch -1))"
       "         (if (= mod_12 2) "
       "             (if (= (round query_pitch) 0) -1 (mod (round query_pitch)12))"
       "           (round query_pitch))"
       "       -1)"
       "      ;intensity label"
       "      (if (and (> div_intens 0)  (> query_intens -1))"
       "          (round (/ (/ query_intens 3) div_intens)) "
       "        -1)"
       "      ;voice casting label"
       "      (if (and (> vc 0)  (> query_vc -1)) "
       "          (round (/ query_vc vc)) "
       "        -1)"
       "      ;nmf label"
       "      (if (and (> nmf 0)  (> query_nmf -1)) "
       "          (round (/ query_nmf nmf)) "
       "        -1)"
       "      )"
       "     )"
       "    ))"))))
   (:group-id nil)
   (:name "function_process_label")
   (:x 465)
   (:y 287)
   (:w 161)
   (:h 28)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.7890212535858154D0
       0.8168872594833374D0
       0.6561802625656128D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input (:type :standard) (:name "E") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST_ACTIVATION_LABELS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 49))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 671)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 2 10 0 0))
   (:id 50))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 950)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 2 20 0 0))
   (:id 51))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 924)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 2 10 0 0))
   (:id 52))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 898)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 2 5 0 0))
   (:id 53))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 845)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 1 10 0 0))
   (:id 54))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 872)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 1 15 0 0))
   (:id 55))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 818)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 1 5 0 0))
   (:id 56))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 645)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 2 5 0 0))
   (:id 57))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 696)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 2 20 0 0))
   (:id 58))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 5)
   (:y 596)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 1 10 0 0))
   (:id 59))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 570)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 1 5 0 0))
   (:id 60))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 621)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 1 20 0 0))
   (:id 61))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 352)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 1 10 0 0))
   (:id 62))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 326)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 1 5 0 0))
   (:id 63))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 377)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 1 15 0 0))
   (:id 64))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 0)
   (:y 430)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 2 10 0 0))
   (:id 65))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 404)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 2 5 0 0))
   (:id 66))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 455)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 2 20 0 0))
   (:id 67))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 112)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 1 10 0 0))
   (:id 68))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 88)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 1 5 0 0))
   (:id 69))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 137)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 1 15 0 0))
   (:id 70))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 191)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 2 10 0 0))
   (:id 71))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 165)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 2 5 0 0))
   (:id 72))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 216)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 2 20 0 0))
   (:id 73))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 765)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 0 10 0 0))
   (:id 74))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 792)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 0 15 0 0))
   (:id 75))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 738)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 0 5 0 0))
   (:id 76))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 37)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 0 10 0 0))
   (:id 77))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 5)
   (:y 11)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 0 5 0 0))
   (:id 78))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 62)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 0 15 0 0))
   (:id 79))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 276)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 0 10 0 0))
   (:id 80))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 3)
   (:y 250)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 0 5 0 0))
   (:id 81))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 3)
   (:y 301)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 0 15 0 0))
   (:id 82))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 5)
   (:y 520)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 0 10 0 0))
   (:id 83))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 494)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 0 5 0 0))
   (:id 84))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 545)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 0 20 0 0))
   (:id 85))
  (:comment
   (:x 746)
   (:y 856)
   (:w 336)
   (:h 64)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Yellow boxes: generation parameters
Blue boxes: other parameters (titles, crossfades, etc.)
Green boxes: for advanced users
Red boxes: run (selection then « v »)")
   (:id 86))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "this_patch_parent_directory")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference mypathname)
       (:group-id nil)
       (:name "mypathname")
       (:x 97)
       (:y 136)
       (:w 107)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OMPERSISTANTOBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :function)
       (:reference container)
       (:group-id nil)
       (:name "container")
       (:x 107)
       (:y 103)
       (:w 87)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OMBOX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference directory-namestring)
       (:group-id nil)
       (:name "directory-namestring")
       (:x 77)
       (:y 193)
       (:w 147)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omselfin) (:index 0) (:name "BOX") (:doc "")))
       (:group-id nil)
       (:name "BOX")
       (:x 127)
       (:y 58)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:out
         (:type omout)
         (:name "this_patch_parent_directory")
         (:index 1)
         (:doc "")))
       (:group-id nil)
       (:name "this_patch_parent_directory")
       (:x 60)
       (:y 247)
       (:w 182)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 1 :in 0))))))
   (:group-id nil)
   (:name "this_patch_parent_directory")
   (:x 263)
   (:y 144)
   (:w 186)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs
    (:output (:name "this_patch_parent_directory") (:reactive nil)))
   (:id 87)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 7 :in 1))
   (:attributes (:color nil :style nil :modif (0 40/99))))
  (:connection (:from (:box 0 :out 0)) (:to (:box 41 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 6)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 41 :in 6)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 7 :in 2))
   (:attributes (:color nil :style nil :modif (0 145/374))))
  (:connection (:from (:box 4 :out 0)) (:to (:box 41 :in 2)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 43 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 42 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 15 :in 1)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 15 :in 2)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 36 :in 1)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 9 :in 4))
   (:attributes (:color nil :style nil :modif (0 67/336))))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif (0 -0.40283018))))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 11 :in 0))
   (:attributes (:color nil :style nil :modif (0 11120/28987))))
  (:connection (:from (:box 12 :out 0)) (:to (:box 45 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 46 :in 0)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 8 :in 0)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 38 :in 0))
   (:attributes (:color nil :style nil :modif (0 -2/33))))
  (:connection (:from (:box 15 :out 0)) (:to (:box 41 :in 0)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 9 :in 3))
   (:attributes (:color nil :style nil :modif (0 -55/207))))
  (:connection (:from (:box 17 :out 0)) (:to (:box 18 :in 0)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 8 :in 1))
   (:attributes (:color nil :style nil :modif (0 0.41721314))))
  (:connection (:from (:box 17 :out 0)) (:to (:box 21 :in 1)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 25 :in 1))
   (:attributes (:color nil :style nil :modif (0 1/5))))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 38 :in 1))
   (:attributes (:color nil :style nil :modif (0 47/290))))
  (:connection (:from (:box 17 :out 0)) (:to (:box 49 :in 1)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 16 :in 2)))
  (:connection (:from (:box 18 :out 1)) (:to (:box 16 :in 3)))
  (:connection (:from (:box 18 :out 2)) (:to (:box 16 :in 4)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 9 :in 2)))
  (:connection
   (:from (:box 21 :out 0))
   (:to (:box 25 :in 3))
   (:attributes (:color nil :style nil :modif (0 2/27))))
  (:connection (:from (:box 22 :out 0)) (:to (:box 25 :in 0)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 22 :in 1)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 22 :in 0)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 44 :in 0)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 7 :in 5)))
  (:connection (:from (:box 25 :out 1)) (:to (:box 28 :in 1)))
  (:connection (:from (:box 25 :out 2)) (:to (:box 28 :in 2)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 24 :in 1)))
  (:connection
   (:from (:box 26 :out 0))
   (:to (:box 9 :in 5))
   (:attributes (:color nil :style nil :modif (0 0.44790366))))
  (:connection
   (:from (:box 27 :out 0))
   (:to (:box 25 :in 2))
   (:attributes (:color nil :style nil :modif (0 5/19))))
  (:connection (:from (:box 28 :out 0)) (:to (:box 7 :in 4)))
  (:connection
   (:from (:box 29 :out 0))
   (:to (:box 16 :in 1))
   (:attributes (:color nil :style nil :modif (0 1/12))))
  (:connection (:from (:box 31 :out 0)) (:to (:box 48 :in 0)))
  (:connection
   (:from (:box 32 :out 0))
   (:to (:box 31 :in 1))
   (:attributes (:color nil :style nil :modif (0 19/100))))
  (:connection (:from (:box 33 :out 0)) (:to (:box 31 :in 0)))
  (:connection (:from (:box 35 :out 0)) (:to (:box 41 :in 7)))
  (:connection
   (:from (:box 35 :out 0))
   (:to (:box 7 :in 7))
   (:attributes (:color nil :style nil :modif (0 -2/13))))
  (:connection (:from (:box 36 :out 0)) (:to (:box 35 :in 0)))
  (:connection
   (:from (:box 38 :out 0))
   (:to (:box 41 :in 5))
   (:attributes (:color nil :style nil :modif (0 84/337))))
  (:connection (:from (:box 38 :out 1)) (:to (:box 40 :in 1)))
  (:connection (:from (:box 38 :out 2)) (:to (:box 40 :in 2)))
  (:connection
   (:from (:box 39 :out 0))
   (:to (:box 38 :in 2))
   (:attributes (:color nil :style nil :modif (0 5/19))))
  (:connection (:from (:box 40 :out 0)) (:to (:box 41 :in 4)))
  (:connection (:from (:box 41 :out 1)) (:to (:box 7 :in 8)))
  (:connection (:from (:box 41 :out 2)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 42 :out 0)) (:to (:box 41 :in 3)))
  (:connection (:from (:box 43 :out 0)) (:to (:box 7 :in 3)))
  (:connection (:from (:box 45 :out 0)) (:to (:box 44 :in 1)))
  (:connection (:from (:box 46 :out 0)) (:to (:box 44 :in 2)))
  (:connection (:from (:box 47 :out 0)) (:to (:box 33 :in 1)))
  (:connection (:from (:box 48 :out 0)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 49 :out 0)) (:to (:box 8 :in 2)))
  (:connection (:from (:box 49 :out 0)) (:to (:box 38 :in 3)))
  (:connection (:from (:box 82 :out 0)) (:to (:box 17 :in 0)))
  (:connection (:from (:box 87 :out 0)) (:to (:box 36 :in 0)))
  (:connection (:from (:box 87 :out 0)) (:to (:box 24 :in 0)))
  (:connection (:from (:box 87 :out 0)) (:to (:box 33 :in 0)))))