
(:patch
 (:name
  "Tuto3a---B1a-LoopGeneratedScenarioOnSingleFile_Synchro_RemoveScenFileForOtherTracks")
 (:doc "")
 (:info
  (:created "2018/10/12 13:57:27")
  (:modified "2021/07/05 14:41:55")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1672 1005)) (:position (499 112)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 141)
   (:y 629)
   (:w 53)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 50)
   (:id 0))
  (:comment
   (:x 141)
   (:y 614)
   (:w 177)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "4) SET LENGTH SCENARIOS")
   (:id 1))
  (:comment
   (:x 174)
   (:y 657)
   (:w 209)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "5) SET MAX CONTINUITY FOR THE SCENARIO")
   (:id 2))
  (:comment
   (:x 1187)
   (:y 105)
   (:w 305)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "3) SET THE SCENARIO GENERATION DIRECTORY
(then loop : 1 file --> 1 scenario)")
   (:id 3))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 670)
   (:y 616)
   (:w 38)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 80)
   (:id 4))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 173)
   (:y 688)
   (:w 201)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 50)
   (:id 5))
  (:comment
   (:x 275)
   (:y 718)
   (:w 275)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "6) SET MAX CONTINUITIES FOR THE VOICES (LOOP REPEATED FOR EACH SCENARIO)")
   (:id 6))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 277)
   (:y 751)
   (:w 356)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 50 10 8 5 3 2))
   (:id 7))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-scenarios-with-stretch_2")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (1110 723)) (:position (0 23)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "QUERY") (:doc "")))
       (:group-id nil)
       (:name "QUERY")
       (:x 0)
       (:y 42)
       (:w 104)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "LENGTH") (:doc "")))
       (:group-id nil)
       (:name "LENGTH")
       (:x 361)
       (:y 15)
       (:w 71)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "CONTINUITY-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "CONTINUITY-LIST")
       (:x 197)
       (:y 18)
       (:w 125)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 445)
       (:y 554)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "VOICE-MAX-CONT-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "VOICE-MAX-CONT-LIST")
       (:x 424)
       (:y 36)
       (:w 157)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "VOICEGENERATOR")
         (:doc "")))
       (:group-id nil)
       (:name "VOICEGENERATOR")
       (:x 561)
       (:y 54)
       (:w 135)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "SOUND_DB") (:doc "")))
       (:group-id nil)
       (:name "SOUND_DB")
       (:x 603)
       (:y 118)
       (:w 89)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "XFADE") (:doc "")))
       (:group-id nil)
       (:name "XFADE")
       (:x 546)
       (:y 131)
       (:w 62)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "RES_DIR") (:doc "")))
       (:group-id nil)
       (:name "RES_DIR")
       (:x 517)
       (:y 15)
       (:w 74)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "list_dur") (:doc "")))
       (:group-id nil)
       (:name "list_dur")
       (:x 849)
       (:y 88)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 337)
       (:y 88)
       (:w 111)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 367)
       (:y 122)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "generate_and_write_variations_with_stretch")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size (874 707)) (:position (0 23)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "len_scen") (:doc "")))
           (:group-id nil)
           (:name "len_scen")
           (:x 657)
           (:y 206)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 324)
           (:y 740)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "cont_scen")
             (:doc "")))
           (:group-id nil)
           (:name "cont_scen")
           (:x 741)
           (:y 210)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "cont_gen") (:doc "")))
           (:group-id nil)
           (:name "cont_gen")
           (:x 393)
           (:y 41)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "path_output_directory")
             (:doc "")))
           (:group-id nil)
           (:name "path_output_directory")
           (:x 822)
           (:y 311)
           (:w 148)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "xfade") (:doc "")))
           (:group-id nil)
           (:name "xfade")
           (:x 277)
           (:y 353)
           (:w 51)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 6) (:name "query") (:doc "")))
           (:group-id nil)
           (:name "query")
           (:x 305)
           (:y 269)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 7)
             (:name "GENERATOR")
             (:doc "")))
           (:group-id nil)
           (:name "GENERATOR")
           (:x 77)
           (:y 112)
           (:w 98)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 8)
             (:name "snd_database")
             (:doc "")))
           (:group-id nil)
           (:name "snd_database")
           (:x 6)
           (:y 341)
           (:w 104)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 9) (:name "list_dur") (:doc "")))
           (:group-id nil)
           (:name "list_dur")
           (:x 1088)
           (:y 88)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "remix")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size (1263 1005)) (:position (0 23)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "SOUNDS")
                 (:doc "")))
               (:group-id nil)
               (:name "SOUNDS")
               (:x 38)
               (:y 145)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "SEGMENTS")
                 (:doc "")))
               (:group-id nil)
               (:name "SEGMENTS")
               (:x 156)
               (:y 20)
               (:w 89)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "CROSSFADE")
                 (:doc "")))
               (:group-id nil)
               (:name "CROSSFADE")
               (:x 414)
               (:y 68)
               (:w 103)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "list_dur")
                 (:doc "")))
               (:group-id nil)
               (:name "list_dur")
               (:x 771)
               (:y 32)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "out")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "out")
               (:x 289)
               (:y 663)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "outfile")
                 (:doc "")))
               (:group-id nil)
               (:name "outfile")
               (:x 317)
               (:y 475)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 114)
               (:y 721)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 164)
               (:y 78)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 7))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 115)
               (:y 533)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference split)
               (:group-id nil)
               (:name "split")
               (:x 166)
               (:y 160)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "out1") (:reactive nil))
                (:output (:name "out2") (:reactive nil)))
               (:id 9))
              (:box
               (:type :function)
               (:reference om+)
               (:group-id nil)
               (:name "om+")
               (:x 220)
               (:y 280)
               (:w 62)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 156)
               (:y 281)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 11))
              (:box
               (:type :function)
               (:reference nth)
               (:group-id nil)
               (:name "nth")
               (:x 39)
               (:y 267)
               (:w 55)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ORIG-N")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ORIG-LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 12))
              (:box
               (:type :function)
               (:reference read-from-string)
               (:group-id nil)
               (:name "read-from-string")
               (:x 134)
               (:y 125)
               (:w 123)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "STRING")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 13))
              (:box
               (:type :function)
               (:reference 1-)
               (:group-id nil)
               (:name "1-")
               (:x 19)
               (:y 234)
               (:w 49)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 308)
               (:y 243)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 2)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 478)
               (:y 274)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-processing)
               (:group-id nil)
               (:name "supervp-processing")
               (:x 99)
               (:y 389)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SRC")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PROCESSINGS")
                 (:value "")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "BEGIN")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "END")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "FFTSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSTEP-OVERSAMP")
                 (:value 8)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOW-TYPE")
                 (:value "hanning")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SHAPE-INVARIANT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PRESERVE-TRANSIENT")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NORMALIZE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "OUTFILE")
                 (:value "out.aiff")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-timestretch)
               (:group-id nil)
               (:name "supervp-timestretch")
               (:x 297)
               (:y 335)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 565)
               (:y 178)
               (:w 46)
               (:h 32)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "in")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 19))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 296)
               (:y 216)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 20))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 559)
               (:y 151)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 21))
              (:comment
               (:x 593)
               (:y 124)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "duration event")
               (:id 22))
              (:comment
               (:x 498)
               (:y 122)
               (:w 87)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "target duration")
               (:id 23))
              (:comment
               (:x 613)
               (:y 183)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "coef stretch")
               (:id 24))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 771)
               (:y 95)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 25))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 114)
               (:y 314)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 26))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 215)
               (:y 312)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 27))
              (:box
               (:type :function)
               (:reference seq)
               (:group-id nil)
               (:name "seq")
               (:x 325)
               (:y 625)
               (:w 57)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OP")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "op+1") (:reactive nil)))
               (:id 28))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 650)
               (:y 591)
               (:w 78)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 29))
              (:box
               (:type :function)
               (:reference (:symbol "OM-DELETE-FILE" "OM-API"))
               (:group-id nil)
               (:name "om-delete-file")
               (:x 571)
               (:y 544)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NAME")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 30))
              (:box
               (:type :function)
               (:reference nil)
               (:group-id nil)
               (:name "concat-audiofiles")
               (:x 198)
               (:y 599)
               (:w 128)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FILES")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "crossfade")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "out")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 31)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 12 :in 1)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 20 :in 0))
               (:attributes (:color nil :style nil :modif (0 0))))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 31 :in 1)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 25 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 31 :in 2)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 29 :in 1)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 31 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 16 :in 1))
               (:attributes (:color nil :style nil :modif (0 -0.45))))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 16 :in 0))
               (:attributes
                (:color nil :style nil :modif (0 -1683/4277))))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 27 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 26 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 12 :in 0)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 10 :in 1)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 11 :in 1))
               (:attributes (:color nil :style nil :modif (0 -1/20))))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 21 :in 1))
               (:attributes
                (:color nil :style nil :modif (-221/2622 0))))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 17 :in 1)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 20 :in 1)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 18 :in 0))
               (:attributes (:color nil :style nil :modif (0 -1/27))))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 21 :out 0))
               (:to (:box 19 :in 0)))
              (:connection
               (:from (:box 25 :out 0))
               (:to (:box 21 :in 0)))
              (:connection
               (:from (:box 26 :out 0))
               (:to (:box 17 :in 2)))
              (:connection
               (:from (:box 27 :out 0))
               (:to (:box 17 :in 3)))
              (:connection
               (:from (:box 28 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 29 :out 0))
               (:to (:box 28 :in 1)))
              (:connection
               (:from (:box 30 :out 0))
               (:to (:box 29 :in 0)))
              (:connection
               (:from (:box 31 :out 0))
               (:to (:box 28 :in 0))))))
           (:group-id nil)
           (:name "remix")
           (:x 35)
           (:y 445)
           (:w 105)
           (:h 81)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOUNDS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEGMENTS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CROSSFADE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "list_dur")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "outfile")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 156)
           (:y 147)
           (:w 107)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "max_continuity")
           (:id 11))
          (:box
           (:type :special)
           (:reference loop-for)
           (:group-id nil)
           (:name "for")
           (:x 836)
           (:y 458)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "from")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "to")
             (:value 3)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "by")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 12))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 278)
           (:y 117)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 13))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 177)
           (:y 725)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 14))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 457)
           (:y 362)
           (:w 71)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "path_generated_sequence")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size (623 670)) (:position (126 161)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "name_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "name_scen")
               (:x 103)
               (:y 34)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "path")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "path")
               (:x 230)
               (:y 507)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "len_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "len_scen")
               (:x 222)
               (:y 34)
               (:w 74)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "cont_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_scen")
               (:x 315)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "idtf_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "idtf_gen")
               (:x 417)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "cont_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_gen")
               (:x 500)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 6)
                 (:name "path_output_directory")
                 (:doc "")))
               (:group-id nil)
               (:name "path_output_directory")
               (:x 602)
               (:y 37)
               (:w 148)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value
                  "/Users/nika/Desktop/OM7/OM-DYCI2_Tests/Results/")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :function)
               (:reference concatenate)
               (:group-id nil)
               (:name "concatenate")
               (:x 19)
               (:y 389)
               (:w 500)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "RESULT-TYPE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".aiff")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".wav")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 17)
               (:y 301)
               (:w 47)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value string)
               (:id 8))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 83)
               (:y 339)
               (:w 54)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "Scen")
               (:id 9))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 158)
               (:y 339)
               (:w 40)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_L")
               (:id 10))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 226)
               (:y 339)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 11))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 289)
               (:y 333)
               (:w 53)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "-Gen")
               (:id 12))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 363)
               (:y 333)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 13))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 203)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 299)
               (:y 110)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 401)
               (:y 174)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 525)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:type :function)
               (:reference pathname)
               (:group-id nil)
               (:name "pathname")
               (:x 266)
               (:y 445)
               (:w 91)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "P")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 7 :in 3)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 7 :in 1)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 7 :in 2)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 7 :in 4)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 7 :in 6)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 7 :in 8)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 7 :in 10)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 7 :in 5)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 7 :in 7)))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 7 :in 9)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 7 :in 11)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 1 :in 0))))))
           (:group-id nil)
           (:name "path_generated_sequence")
           (:x 599)
           (:y 520)
           (:w 200)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "name_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "len_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "idtf_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "path_output_directory")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "path") (:reactive nil)))
           (:id 16))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 762)
           (:y 400)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 582)
           (:y 400)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 768)
           (:y 458)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 19))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 670)
           (:y 400)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 676)
           (:y 458)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 21))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 588)
           (:y 458)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 22))
          (:box
           (:type :function)
           (:reference format)
           (:group-id nil)
           (:name "format")
           (:x 578)
           (:y 329)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "DESTINATION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTROL-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 23))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 539)
           (:y 285)
           (:w 73)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "[L~DC~D]")
           (:id 24))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 796)
           (:y 627)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 25))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 739)
           (:y 555)
           (:w 102)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "ITERATION #~D")
           (:id 26))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 825)
           (:y 595)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 27))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 318)
           (:y 639)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 28))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 237)
           (:y 607)
           (:w 100)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "OUTPUT ~A")
           (:id 29))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 347)
           (:y 580)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 30))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "filter-output")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (output) "
               "  (if "
               "      (and (> (length output) 0) (nth 0 output)) "
               "      output "
               "    ;(if "
               "     ;   (and (> (length output) 0) (nth 1 output))"
               "        ;(list \"(1 0 200)\" \"(1 301 600)\")"
               "    (loop for i from 0 to 5 collect \"(1 0 100)\")"
               "      ;)"
               "    )"
               "  )"))))
           (:group-id nil)
           (:name "filter-output")
           (:x 156)
           (:y 316)
           (:w 98)
           (:h 28)
           (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "OUTPUT")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 31))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 119)
           (:y 351)
           (:w 78)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 32))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 524)
           (:y 638)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 33))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 457)
           (:y 604)
           (:w 120)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "original output ~A")
           (:id 34))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 553)
           (:y 579)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 35))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2SETPARAM" "DYCI2"))
           (:group-id nil)
           (:name "dyci2setparam")
           (:x 52)
           (:y 239)
           (:w 116)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PARAMETER")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "VALUE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 36))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2QUERY" "DYCI2"))
           (:group-id nil)
           (:name "dyci2query")
           (:x 157)
           (:y 276)
           (:w 96)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "QUERY")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 37))
          (:box
           (:type :function)
           (:reference om+)
           (:group-id nil)
           (:name "om+")
           (:x 833)
           (:y 507)
           (:w 62)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 38)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 20 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/495))))
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 23 :in 2))
           (:attributes (:color nil :style nil :modif (0 -6/91))))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 17 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/496))))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 23 :in 3))
           (:attributes (:color nil :style nil :modif (0 17/87))))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 15 :in 0))
           (:attributes (:color nil :style nil :modif (0 -3/41))))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 13 :in 0))
           (:attributes (:color nil :style nil :modif (0 -11/60))))
          (:connection (:from (:box 4 :out 0)) (:to (:box 16 :in 5)))
          (:connection
           (:from (:box 5 :out 0))
           (:to (:box 10 :in 2))
           (:attributes
            (:color nil :style nil :modif (0 -0.09545457))))
          (:connection (:from (:box 6 :out 0)) (:to (:box 37 :in 1)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 36 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 3)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 36 :in 1)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 38 :in 0)))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 16 :in 4))
           (:attributes (:color nil :style nil :modif (0 -1/4))))
          (:connection (:from (:box 13 :out 0)) (:to (:box 36 :in 2)))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 12 :in 1))
           (:attributes
            (:color nil :style nil :modif (0 45973/277033))))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 17 :in 0))
           (:attributes (:color nil :style nil :modif (0 190/429))))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 18 :in 0))
           (:attributes
            (:color nil :style nil :modif (0 26489/59345))))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 20 :in 0))
           (:attributes (:color nil :style nil :modif (0 0.445338))))
          (:connection (:from (:box 16 :out 0)) (:to (:box 10 :in 4)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 19 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 22 :in 0)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 16 :in 2)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 16 :in 1)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 16 :in 0)))
          (:connection (:from (:box 23 :out 0)) (:to (:box 18 :in 1)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 23 :in 1)))
          (:connection
           (:from (:box 25 :out 0))
           (:to (:box 14 :in 1))
           (:attributes (:color nil :style nil :modif (0 -8/77))))
          (:connection (:from (:box 26 :out 0)) (:to (:box 25 :in 0)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 25 :in 1)))
          (:connection
           (:from (:box 28 :out 0))
           (:to (:box 14 :in 3))
           (:attributes (:color nil :style nil :modif (0 14/65))))
          (:connection (:from (:box 29 :out 0)) (:to (:box 28 :in 0)))
          (:connection (:from (:box 30 :out 0)) (:to (:box 28 :in 1)))
          (:connection (:from (:box 31 :out 0)) (:to (:box 32 :in 1)))
          (:connection (:from (:box 31 :out 0)) (:to (:box 35 :in 0)))
          (:connection
           (:from (:box 32 :out 0))
           (:to (:box 10 :in 1))
           (:attributes (:color nil :style nil :modif (0 -3/16))))
          (:connection (:from (:box 32 :out 0)) (:to (:box 30 :in 0)))
          (:connection
           (:from (:box 33 :out 0))
           (:to (:box 14 :in 2))
           (:attributes (:color nil :style nil :modif (0 1/33))))
          (:connection (:from (:box 34 :out 0)) (:to (:box 33 :in 0)))
          (:connection (:from (:box 35 :out 0)) (:to (:box 33 :in 1)))
          (:connection (:from (:box 36 :out 0)) (:to (:box 37 :in 0)))
          (:connection (:from (:box 37 :out 0)) (:to (:box 31 :in 0)))
          (:connection (:from (:box 38 :out 0)) (:to (:box 16 :in 3)))
          (:connection
           (:from (:box 38 :out 0))
           (:to (:box 27 :in 0))))))
       (:group-id nil)
       (:name "generate_and_write_variations_with_stretch")
       (:x 623)
       (:y 328)
       (:w 273)
       (:h 104)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "len_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_gen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "path_output_directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "xfade")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "query")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GENERATOR")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "snd_database")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "list_dur")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 12 :in 5)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 12 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 12 :in 6)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 12 :in 7)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 12 :in 4)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 12 :in 3)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 12 :in 8)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 3 :in 0))))))
   (:group-id nil)
   (:name "loop-scenarios-with-stretch_2")
   (:x 531)
   (:y 794)
   (:w 200)
   (:h 30)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "QUERY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LENGTH")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTINUITY-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE-MAX-CONT-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICEGENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND_DB")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "XFADE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RES_DIR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_dur")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-process-dataset")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (1180 635)) (:position (618 678)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "lab_files") (:doc "")))
       (:group-id nil)
       (:name "lab_files")
       (:x 327)
       (:y 65)
       (:w 66)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "mem") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "mem")
       (:x 279)
       (:y 467)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "list_activation_labels")
         (:doc "")))
       (:group-id nil)
       (:name "list_activation_labels")
       (:x 411)
       (:y 76)
       (:w 141)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "function_process_labels")
         (:doc "")))
       (:group-id nil)
       (:name "function_process_labels")
       (:x 588)
       (:y 76)
       (:w 161)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name "TEXTBUFFER")
       (:x 219)
       (:y 176)
       (:w 148)
       (:h 82)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params (:read-mode :lines-cols))
       (:value
        (:object
         (:class textbuffer)
         (:slots ((:contents nil)))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 4))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 182)
       (:y 122)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 5))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 172)
       (:y 443)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 6))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 275)
       (:y 362)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 276)
       (:y 423)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 448)
       (:y 304)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value box)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value name)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "select-labels")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines list_activation_labels)"
           "  (loop for line in lines "
           "        collect (append "
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
           "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
           "                 ;(list (- (second line) (first line)))"
           "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
           "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
           "                       collect (nth (+ i 1) line)"
           "                       )"
           "                 )"
           "        into labels"
           "        finally return labels"
           "        )"
           "  )"
           ""))))
       (:group-id nil)
       (:name "select-labels")
       (:x 438)
       (:y 264)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST_ACTIVATION_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 4 :out 1)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 7 :out 1)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1))))))
   (:group-id nil)
   (:name "loop-process-dataset")
   (:x 1229)
   (:y 358)
   (:w 150)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "lab_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_activation_labels")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function_process_labels")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "mem") (:reactive nil)))
   (:id 9))
  (:box
   (:type :function)
   (:reference format)
   (:group-id nil)
   (:name "format")
   (:x 1182)
   (:y 693)
   (:w 125)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "DESTINATION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTROL-STRING")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1034)
   (:y 672)
   (:w 118)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "~a_~a_[~A][~a]")
   (:id 11))
  (:box
   (:type :function)
   (:reference file-namestring)
   (:group-id nil)
   (:name "file-namestring")
   (:x 1434)
   (:y 338)
   (:w 117)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "P")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 1294)
   (:y 289)
   (:w 65)
   (:h 42)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 13))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 1231)
   (:y 304)
   (:w 53)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:type :special)
   (:reference iterate)
   (:group-id nil)
   (:name "iterate")
   (:x 617)
   (:y 872)
   (:w 58)
   (:h 42)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.6266593337059021D0
       0.011445105075836182D0
       0.044897355139255524D0
       0.4))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 15))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 1153)
   (:y 396)
   (:w 226)
   (:h 113)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(32 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(19 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(17 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(18 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"))
       (:labls
        (:list
         "(32 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(19 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(17 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(18 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"))))))
   (:id 16))
  (:box
   (:type :function)
   (:reference format)
   (:group-id nil)
   (:name "format")
   (:x 222)
   (:y 560)
   (:w 80)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "DESTINATION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTROL-STRING")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 198)
   (:y 279)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 0 10 0 0))
   (:id 18))
  (:box
   (:type :function)
   (:reference split)
   (:group-id nil)
   (:name "split")
   (:x 217)
   (:y 497)
   (:w 100)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "out1") (:reactive nil))
    (:output (:name "out2") (:reactive nil))
    (:output (:name "out3") (:reactive nil))
    (:output (:name "out4") (:reactive nil)))
   (:id 19))
  (:comment
   (:x 159)
   (:y 3)
   (:w 894)
   (:h 118)
   (:fgcolor nil)
   (:bgcolor
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.48235294))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 18) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "OM-DYCI2 B1a: LOOPED AUTOMATIC GENERATION OF SCENARIOS ON SINGLE FILES
- 1st track generated with \"memory = file used to generate the scenario\"
  other tracks are not allowed to use events from the file used to generate the scenario (see patches B2)
- the events are stretched so that all the tracks are syncronized on track 1 (see patch B1b)
")
   (:id 20))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1078)
   (:y 644)
   (:w 335)
   (:h 30)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "B1a")
   (:id 21))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "function_process_label")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (e list_activation_labels) "
       "  (let ("
       "        (div_dur (nth 0 list_activation_labels))"
       "        (mod_12 (nth 1 list_activation_labels))"
       "        (div_intens  (nth 2 list_activation_labels))"
       "        (vc (nth 3 list_activation_labels))"
       "        (nmf (nth 4 list_activation_labels))"
       "        (query_dur (nth 0 e))"
       "        (query_pitch (nth 1 e))"
       "        (query_intens  (nth 2 e))"
       "        (query_vc (nth 3 e))"
       "        (query_nmf (nth 4 e))"
       "        )"
       "    (write-to-string"
       "     (list "
       "      ;duration label"
       "      (if (and (> div_dur 0) (> query_dur -1))"
       "          (round (/ query_dur div_dur)) "
       "        -1)"
       "      ;pitch label"
       "     (if (and (> mod_12 0) (> query_pitch -1))"
       "         (if (= mod_12 2) "
       "             (if (= (round query_pitch) 0) -1 (mod (round query_pitch)12))"
       "           (round query_pitch))"
       "       -1)"
       "      ;intensity label"
       "      (if (and (> div_intens 0)  (> query_intens -1))"
       "          (round (/ query_intens div_intens)) "
       "        -1)"
       "      ;voice casting label"
       "      (if (and (> vc 0)  (> query_vc -1)) "
       "          (round (/ query_vc vc)) "
       "        -1)"
       "      ;nmf label"
       "      (if (and (> nmf 0)  (> query_nmf -1)) "
       "          (round (/ query_nmf nmf)) "
       "        -1)"
       "      )"
       "     )"
       "    ))"))))
   (:group-id nil)
   (:name "function_process_label")
   (:x 296)
   (:y 287)
   (:w 161)
   (:h 28)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.7890212535858154D0
       0.8168872594833374D0
       0.6561802625656128D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input (:type :standard) (:name "E") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST_ACTIVATION_LABELS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:comment
   (:x 574)
   (:y 125)
   (:w 275)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "2) SET THE VOICE GENERATION CORPUS")
   (:id 23))
  (:box
   (:type :function)
   (:reference (:symbol "OM-DIRECTORY" "OM-API"))
   (:group-id nil)
   (:name "om-directory")
   (:x 630)
   (:y 269)
   (:w 105)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATH")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "type") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 751)
   (:y 224)
   (:w 100)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "seg_desc")
   (:id 25))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "make-local-dyci2-path")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (500 500)) (:position (815 433)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (folder corpus_subfolder) "
       "  (namestring "
       "   (merge-pathnames "
       "    (string+ folder \"Corpus/\" corpus_subfolder \"/\") "
       "    ;(om-user-home)"
       "    )))"
       "  "))))
   (:group-id nil)
   (:name "make-local-dyci2-path")
   (:x 578)
   (:y 231)
   (:w 155)
   (:h 29)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "FOLDER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CORPUS_SUBFOLDER")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-process-dataset")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (913 500)) (:position (105 138)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "lab_files") (:doc "")))
       (:group-id nil)
       (:name "lab_files")
       (:x 212)
       (:y 2)
       (:w 66)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "sound") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "sound")
       (:x 229)
       (:y 509)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "mem") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "mem")
       (:x 489)
       (:y 512)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "list_activation_labels")
         (:doc "")))
       (:group-id nil)
       (:name "list_activation_labels")
       (:x 545)
       (:y 6)
       (:w 141)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "labels") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "labels")
       (:x 594)
       (:y 507)
       (:w 53)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "extension_audio_files")
         (:doc "")))
       (:group-id nil)
       (:name "extension_audio_files")
       (:x 717)
       (:y 2)
       (:w 147)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "function_process_label")
         (:doc "")))
       (:group-id nil)
       (:name "function_process_label")
       (:x 956)
       (:y 38)
       (:w 155)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name "TEXTBUFFER")
       (:x 284)
       (:y 115)
       (:w 148)
       (:h 82)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params (:read-mode :lines-cols))
       (:value
        (:object
         (:class textbuffer)
         (:slots ((:contents nil)))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 7))
      (:box
       (:type :object)
       (:reference sound)
       (:group-id nil)
       (:name nil)
       (:x 114)
       (:y 312)
       (:w 300)
       (:h 71)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value :choose-file)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "markers")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "access-from-file")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "markers") (:reactive nil))
        (:output (:name "access-from-file") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class sound)
         (:slots
          ((:onset 0)
           (:duration 0)
           (:n-samples nil)
           (:n-channels nil)
           (:sample-rate nil)
           (:smpl-type :float)
           (:sample-size 16)))
         (:add-slots
          ((:markers nil)
           (:gain 1.0)
           (:access-from-file nil)
           (:file-pathname nil)))))
       (:id 8))
      (:box
       (:type :function)
       (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
       (:group-id nil)
       (:name "om-make-pathname")
       (:x 93)
       (:y 205)
       (:w 145)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :key)
         (:name "directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "name")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "type")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference pathname-name)
       (:group-id nil)
       (:name "pathname-name")
       (:x 97)
       (:y 119)
       (:w 125)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:comment
       (:x 21)
       (:y 324)
       (:w 63)
       (:h 50)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "le même nom mais en .wav")
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-markers")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines processed_labels)"
           "  (loop for i from 0 to (- (length lines) 1)"
           "        collect"
           "         (list"
           "          (sec->ms (first (nth i lines)))"
           "          ;(first (nth i lines))"
           "          (write-to-string (nth i processed_labels))"
           "          )         "
           "         )"
           "  )"
           ""
           ";(lambda (lines list_activation_labels)"
           ";  (loop for line in lines collect"
           ";        (list"
           ";         (sec->ms (first line))"
           ";         (number-to-string (round (fourth line)))"
           ";         )"
           ";        ))"))))
       (:group-id nil)
       (:name "make-markers")
       (:x 271)
       (:y 279)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 213)
       (:y 54)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 13))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 357)
       (:y 461)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 14))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 235)
       (:y 400)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 15))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-memory")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines n processed_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        ;collect (write-to-string (list n (first line) (second line)))"
           "        into mem-segments"
           "        finally return (list mem-segments processed_labels))"
           ")"
           "                                 "
           "#|"
           "(lambda (lines n  list_activation_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        into mem-segments"
           "        ;collect (write-to-string (round (/ (fourth line) div_intens)))"
           "        ;collect (write-to-string (list (round (/ (fourth line) div_intens))))"
           "        collect (write-to-string"
           "                 (list "
           "                 ; duree"
           "                  (if (> div_dur 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) div_dur)) -1)"
           "                 ;pitch"
           "                  (if (= mod_12 1) "
           "                      (if (= (round (third line)) 0) -1 (mod (round (third line))12))"
           "                    (if (< mod_12 0) -1 (round (third line)))"
           "                    )"
           "                 ;inten"
           "                  (if (> div_intens 0) (round (/ (fourth line) div_intens)) -1)"
           "                 ;voice casting"
           "                  (if (> vc 0) (round (/ (fifth line) vc)) -1)"
           "                 ;nmf"
           "                  (if (> nmf 0) (round (/ (sixth line) nmf)) -1)"
           "                 ))"
           "        into labels"
           "        finally return (list mem-segments labels)))"
           "|#"
           "                                 "))))
       (:group-id nil)
       (:name "make-memory")
       (:x 461)
       (:y 281)
       (:w 200)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 485)
       (:y 387)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 17))
      (:box
       (:type :special)
       (:reference loop-for)
       (:group-id nil)
       (:name "for")
       (:x 508)
       (:y 92)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "from")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "to")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 18))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 375)
       (:y 51)
       (:w 71)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 502)
       (:y 57)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 20))
      (:comment
       (:x 556)
       (:y 102)
       (:w 47)
       (:h 22)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "#sound")
       (:id 21))
      (:box
       (:type :function)
       (:reference split)
       (:group-id nil)
       (:name "split")
       (:x 554)
       (:y 335)
       (:w 59)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 22))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 592)
       (:y 388)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 23))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 486)
       (:y 468)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 593)
       (:y 462)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 25))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "select-labels")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines list_activation_labels)"
           "  (loop for line in lines "
           "        collect (append "
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
           "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
           "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
           "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
           "                       collect (nth (+ i 1) line)"
           "                       )"
           "                 )"
           "        into labels"
           "        finally return labels"
           "        )"
           "  )"
           ""))))
       (:group-id nil)
       (:name "select-labels")
       (:x 767)
       (:y 243)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST_ACTIVATION_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 26))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 753)
       (:y 294)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value box)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value name)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 27))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "value box")
       (:x 399)
       (:y 280)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value t)
       (:id 28)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 0 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 26 :in 1)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 9 :in 2))
       (:attributes (:color nil :style nil :modif (0 1/3))))
      (:connection (:from (:box 6 :out 0)) (:to (:box 27 :in 0)))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/92))))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 16 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/94))))
      (:connection (:from (:box 7 :out 1)) (:to (:box 26 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 15 :out 1)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 22 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 17 :out 1)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 16 :in 1)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 22 :out 1)) (:to (:box 23 :in 0)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 14 :in 2)))
      (:connection (:from (:box 23 :out 1)) (:to (:box 25 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 27 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 16 :in 2)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 8 :in 2))))))
   (:group-id nil)
   (:name "loop-process-dataset")
   (:x 656)
   (:y 357)
   (:w 150)
   (:h 39)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "lab_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_activation_labels")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "extension_audio_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function_process_label")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "sound") (:reactive nil))
    (:output (:name "mem") (:reactive nil))
    (:output (:name "labels") (:reactive nil)))
   (:id 27))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 571)
   (:y 183)
   (:w 155)
   (:h 31)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "3_mem")
   (:id 28))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 753)
   (:y 261)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "wav")
   (:id 29))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 601)
   (:y 398)
   (:w 231)
   (:h 102)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(1 0 1696)"
         "(1 1696 2114)"
         "(1 2114 2428)"
         "(1 2428 3522)"
         "(1 3522 4192)"
         "(1 4192 4622)"
         "(1 4622 4896)"
         "(1 4896 5508)"
         "(1 5508 6112)"
         "(1 6112 9402)"
         "(1 9402 9730)"
         "(1 9730 10642)"
         "(1 10642 10974)"
         "(1 10974 11378)"
         "(1 11378 11616)"
         "(1 11616 12234)"
         "(1 12234 12608)"
         "(1 12608 13000)"
         "(1 13000 13462)"
         "(1 13462 13782)"
         "(1 13782 14392)"
         "(1 14392 14794)"
         "(1 14794 15394)"
         "(1 15394 15960)"
         "(1 15960 16156)"
         "(1 16156 16578)"
         "(1 16578 17144)"
         "(1 17144 17372)"
         "(1 17372 18800)"
         "(1 18800 20162)"
         "(1 20162 22196)"
         "(1 22196 23912)"
         "(1 23912 24318)"
         "(1 24318 25190)"
         "(1 25190 26958)"
         "(1 26958 27464)"
         "(1 27464 27828)"
         "(1 27828 28152)"
         "(1 28152 28786)"
         "(1 28786 29024)"
         "(1 29024 29592)"
         "(1 29592 30342)"
         "(1 30342 31180)"
         "(1 31180 31734)"
         "(1 31734 32216)"
         "(1 32216 32824)"
         "(1 32824 33068)"
         "(1 33068 33482)"
         "(1 33482 36138)"
         "(1 36138 36964)"
         "(1 36964 37646)"
         "(1 37646 39188)"
         "(1 39188 40482)"
         "(1 40482 41402)"
         "(1 41402 42306)"
         "(1 42306 42872)"
         "(1 42872 43468)"
         "(1 43468 43724)"
         "(1 43724 44194)"
         "(1 44194 44636)"
         "(1 44636 44876)"
         "(1 44876 45162)"
         "(1 45162 45394)"
         "(1 45394 45622)"
         "(1 45622 45906)"
         "(1 45906 46228)"
         "(1 46228 46584)"
         "(1 46584 47214)"
         "(1 47214 47624)"
         "(1 47624 48236)"
         "(1 48236 48470)"
         "(1 48470 49418)"
         "(1 49418 50830)"
         "(1 50830 52708)"
         "(1 52708 53152)"
         "(1 53152 54296)"
         "(1 54296 55974)"
         "(1 55974 56440)"
         "(1 56440 56770)"
         "(1 56770 57846)"
         "(1 57846 58516)"
         "(1 58516 58946)"
         "(1 58946 59220)"
         "(1 59220 59836)"
         "(1 59836 63702)"
         "(1 63702 64244)"
         "(1 64244 64964)"
         "(1 64964 65282)"
         "(1 65282 65702)"
         "(1 65702 65938)"
         "(1 65938 66274)"
         "(1 66274 66558)"
         "(1 66558 66926)"
         "(1 66926 67680)"
         "(1 67680 68074)"
         "(1 68074 68606)"
         "(1 68606 68880)"
         "(1 68880 69122)"
         "(1 69122 69690)"
         "(1 69690 70268)"
         "(1 70268 70908)"
         "(1 70908 71468)"
         "(1 71468 71732)"
         "(1 71732 74444)"
         "(1 74444 76510)"
         "(1 76510 78198)"
         "(1 78198 78628)"
         "(1 78628 79506)"
         "(1 79506 81292)"
         "(1 81292 81948)"
         "(1 81948 82478)"
         "(1 82478 83110)"
         "(1 83110 83916)"
         "(1 83916 84668)"
         "(1 84668 85184)"
         "(1 85184 85620)"
         "(1 85620 87148)"
         "(1 87148 87370)"
         "(1 87370 87794)"
         "(1 87794 90458)"
         "(1 90458 91282)"
         "(1 91282 91968)"
         "(1 91968 94800)"
         "(1 94800 95720)"
         "(1 95720 96626)"
         "(1 96626 97192)"
         "(1 97192 97790)"
         "(1 97790 98046)"
         "(1 98046 98514)"
         "(1 98514 98998)"
         "(1 98998 99392)"
         "(1 99392 99710)"
         "(1 99710 99952)"
         "(1 99952 100232)"
         "(1 100232 100538)"
         "(1 100538 100866)"
         "(1 100866 101536)"
         "(1 101536 101934)"
         "(1 101934 102258)"
         "(1 102258 102566)"
         "(1 102566 102794)"
         "(1 102794 103748)"
         "(1 103748 105116)"
         "(1 105116 106996)"
         "(1 106996 107472)"
         "(1 107472 108616)"
         "(1 108616 110298)"
         "(1 110298 110764)"
         "(1 110764 111058)"
         "(1 111058 112170)"
         "(1 112170 112842)"
         "(1 112842 113268)"
         "(1 113268 113534)"
         "(1 113534 114152)"
         "(1 114152 118034)"
         "(1 118034 118602)"
         "(1 118602 119250)"
         "(1 119250 119612)"
         "(1 119612 120024)"
         "(1 120024 120268)"
         "(1 120268 120606)"
         "(1 120606 120878)"
         "(1 120878 121344)"
         "(1 121344 121648)"
         "(1 121648 122108)"
         "(1 122108 122400)"
         "(1 122400 122798)"
         "(1 122798 123204)"
         "(1 123204 123438)"
         "(1 123438 123974)"
         "(1 123974 124588)"
         "(1 124588 125190)"
         "(1 125190 125788)"
         "(1 125788 126056)"
         "(1 126056 127430)"
         "(1 127430 128766)"
         "(1 128766 130840)"
         "(1 130840 132560)"
         "(1 132560 132962)"
         "(1 132962 133830)"
         "(1 133830 135608)"
         "(1 135608 136272)"
         "(1 136272 136800)"
         "(1 136800 137430)"
         "(1 137430 138240)"
         "(1 138240 138990)"
         "(1 138990 139506)"
         "(1 139506 139974)"
         "(1 139974 141464)"
         "(1 141464 141702)"
         "(1 141702 142018)"
         "(1 142018 144780)"
         "(1 144780 146298)"
         "(1 146298 149130)"
         "(1 149130 150046)"
         "(1 150046 150950)"
         "(1 150950 151524)"
         "(1 151524 152110)"
         "(1 152110 152352)"
         "(1 152352 152840)"
         "(1 152840 153322)"
         "(1 153322 153802)"
         "(1 153802 154032)"
         "(1 154032 154268)"
         "(1 154268 154554)"
         "(1 154554 154874)"
         "(1 154874 155190)"
         "(1 155190 155860)"
         "(1 155860 156262)"
         "(1 156262 156578)"
         "(1 156578 156894)"
         "(1 156894 157114)"
         "(1 157114 158064)"
         "(1 158064 159424)"
         "(1 159424 161358)"
         "(1 161358 161798)"))
       (:labls
        (:list
         "(23 -1 3 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(15 -1 3 -1 -1)"
         "(9 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(8 -1 4 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(44 -1 1 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(12 -1 3 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(8 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(8 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(19 -1 4 -1 -1)"
         "(18 -1 4 -1 -1)"
         "(27 -1 3 -1 -1)"
         "(23 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(12 -1 3 -1 -1)"
         "(24 -1 4 -1 -1)"
         "(7 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(8 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(8 -1 4 -1 -1)"
         "(10 -1 2 -1 -1)"
         "(11 -1 3 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(8 -1 6 -1 -1)"
         "(3 -1 7 -1 -1)"
         "(6 -1 7 -1 -1)"
         "(35 -1 4 -1 -1)"
         "(11 -1 5 -1 -1)"
         "(9 -1 4 -1 -1)"
         "(21 -1 4 -1 -1)"
         "(17 -1 4 -1 -1)"
         "(12 -1 3 -1 -1)"
         "(12 -1 4 -1 -1)"
         "(8 -1 5 -1 -1)"
         "(8 -1 5 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(3 -1 5 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(13 -1 2 -1 -1)"
         "(19 -1 2 -1 -1)"
         "(25 -1 3 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(22 -1 2 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(14 -1 3 -1 -1)"
         "(9 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(52 -1 1 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(10 -1 2 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(10 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(8 -1 2 -1 -1)"
         "(8 -1 4 -1 -1)"
         "(9 -1 3 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(36 -1 4 -1 -1)"
         "(28 -1 3 -1 -1)"
         "(23 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(12 -1 3 -1 -1)"
         "(24 -1 3 -1 -1)"
         "(9 -1 4 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(11 -1 4 -1 -1)"
         "(10 -1 2 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(20 -1 4 -1 -1)"
         "(3 -1 7 -1 -1)"
         "(6 -1 7 -1 -1)"
         "(36 -1 4 -1 -1)"
         "(11 -1 5 -1 -1)"
         "(9 -1 4 -1 -1)"
         "(38 -1 4 -1 -1)"
         "(12 -1 3 -1 -1)"
         "(12 -1 4 -1 -1)"
         "(8 -1 5 -1 -1)"
         "(8 -1 4 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(9 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(13 -1 2 -1 -1)"
         "(18 -1 2 -1 -1)"
         "(25 -1 3 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(22 -1 3 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(15 -1 3 -1 -1)"
         "(9 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(52 -1 1 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(9 -1 2 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(5 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(8 -1 4 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(18 -1 4 -1 -1)"
         "(18 -1 4 -1 -1)"
         "(28 -1 3 -1 -1)"
         "(23 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(12 -1 3 -1 -1)"
         "(24 -1 3 -1 -1)"
         "(9 -1 4 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(8 -1 4 -1 -1)"
         "(11 -1 4 -1 -1)"
         "(10 -1 2 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(20 -1 5 -1 -1)"
         "(3 -1 7 -1 -1)"
         "(4 -1 7 -1 -1)"
         "(37 -1 4 -1 -1)"
         "(20 -1 4 -1 -1)"
         "(38 -1 4 -1 -1)"
         "(12 -1 3 -1 -1)"
         "(12 -1 4 -1 -1)"
         "(8 -1 5 -1 -1)"
         "(8 -1 5 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(7 -1 4 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(6 -1 4 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(9 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(13 -1 2 -1 -1)"
         "(18 -1 2 -1 -1)"
         "(26 -1 3 -1 -1)"
         "(6 -1 4 -1 -1)"))))))
   (:id 30))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 280)
   (:y 466)
   (:w 291)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "(dur=~a)(pitch=~a)(int=~a)")
   (:id 31))
  (:comment
   (:x 183)
   (:y 230)
   (:w 305)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "1) SET THE ACTIVE DIMENSIONS OF THE LABELS
(duration pitchmode intensity voice_casting nmf)")
   (:id 32))
  (:box
   (:type :function)
   (:reference (:symbol "OM-DIRECTORY" "OM-API"))
   (:group-id nil)
   (:name "om-directory")
   (:x 1255)
   (:y 256)
   (:w 105)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATH")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "type") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 33))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1391)
   (:y 233)
   (:w 100)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "seg_desc")
   (:id 34))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "make-local-dyci2-path")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (500 500)) (:position (-742 194)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (folder corpus_subfolder) "
       "  (namestring "
       "   (merge-pathnames "
       "    (string+ folder \"Corpus/\" corpus_subfolder \"/\") "
       "    ;(om-user-home)"
       "    )))"
       "  "))))
   (:group-id nil)
   (:name "make-local-dyci2-path")
   (:x 1226)
   (:y 229)
   (:w 155)
   (:h 29)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "FOLDER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CORPUS_SUBFOLDER")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 35))
  (:comment
   (:x 617)
   (:y 919)
   (:w 129)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "7) EVALUATE")
   (:id 36))
  (:box
   (:type :function)
   (:reference (:symbol "OM-CREATE-DIRECTORY" "OM-API"))
   (:group-id nil)
   (:name "om-create-directory")
   (:x 1133)
   (:y 748)
   (:w 142)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATHNAME")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 37))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "make-local-dyci2-path")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (500 500)) (:position (-1008 218)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (folder results_subfolder) "
       "  (namestring "
       "   (merge-pathnames "
       "   (string+ folder \"Results/\" results_subfolder \"/\") "
       "    ;(om-user-home)"
       "    )))"
       ""))))
   (:group-id nil)
   (:name "make-local-dyci2-path")
   (:x 1126)
   (:y 722)
   (:w 155)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "FOLDER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RESULTS_SUBFOLDER")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 38))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "this_patch_parent_directory")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omselfin) (:index 0) (:name "BOX") (:doc "")))
       (:group-id nil)
       (:name "BOX")
       (:x 127)
       (:y 58)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out
         (:type omout)
         (:name "this_patch_parent_directory")
         (:index 1)
         (:doc "")))
       (:group-id nil)
       (:name "this_patch_parent_directory")
       (:x 60)
       (:y 247)
       (:w 182)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :function)
       (:reference mypathname)
       (:group-id nil)
       (:name "mypathname")
       (:x 97)
       (:y 136)
       (:w 107)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OMPERSISTANTOBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference container)
       (:group-id nil)
       (:name "container")
       (:x 107)
       (:y 103)
       (:w 87)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OMBOX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference directory-namestring)
       (:group-id nil)
       (:name "directory-namestring")
       (:x 77)
       (:y 193)
       (:w 147)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 1 :in 0))))))
   (:group-id nil)
   (:name "this_patch_parent_directory")
   (:x 225)
   (:y 180)
   (:w 186)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs
    (:output (:name "this_patch_parent_directory") (:reactive nil)))
   (:id 39))
  (:comment
   (:x 693)
   (:y 644)
   (:w 94)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Crossfade (ms)")
   (:id 40))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-process-dataset")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (689 507)) (:position (84 115)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "lab_files") (:doc "")))
       (:group-id nil)
       (:name "lab_files")
       (:x 212)
       (:y 2)
       (:w 66)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "sound") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "sound")
       (:x 229)
       (:y 509)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "mem") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "mem")
       (:x 489)
       (:y 512)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "list_activation_labels")
         (:doc "")))
       (:group-id nil)
       (:name "list_activation_labels")
       (:x 545)
       (:y 6)
       (:w 141)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "labels") (:index 3) (:doc "")))
       (:group-id nil)
       (:name "labels")
       (:x 594)
       (:y 507)
       (:w 53)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "extension_audio_files")
         (:doc "")))
       (:group-id nil)
       (:name "extension_audio_files")
       (:x 717)
       (:y 2)
       (:w 147)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "function_process_label")
         (:doc "")))
       (:group-id nil)
       (:name "function_process_label")
       (:x 956)
       (:y 38)
       (:w 155)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name "TEXTBUFFER")
       (:x 284)
       (:y 115)
       (:w 148)
       (:h 82)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params (:read-mode :lines-cols))
       (:value
        (:object
         (:class textbuffer)
         (:slots ((:contents nil)))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 7))
      (:box
       (:type :object)
       (:reference sound)
       (:group-id nil)
       (:name nil)
       (:x 114)
       (:y 312)
       (:w 300)
       (:h 71)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value :choose-file)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "markers")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "access-from-file")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "markers") (:reactive nil))
        (:output (:name "access-from-file") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class sound)
         (:slots
          ((:onset 0)
           (:duration 0)
           (:n-samples nil)
           (:n-channels nil)
           (:sample-rate nil)
           (:smpl-type :float)
           (:sample-size 16)))
         (:add-slots
          ((:markers nil)
           (:gain 1.0)
           (:access-from-file nil)
           (:file-pathname nil)))))
       (:id 8))
      (:box
       (:type :function)
       (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
       (:group-id nil)
       (:name "om-make-pathname")
       (:x 93)
       (:y 205)
       (:w 145)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :key)
         (:name "directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "name")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "type")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference pathname-name)
       (:group-id nil)
       (:name "pathname-name")
       (:x 97)
       (:y 119)
       (:w 125)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:comment
       (:x 21)
       (:y 324)
       (:w 63)
       (:h 50)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "le même nom mais en .wav")
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-markers")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines processed_labels)"
           "  (loop for i from 0 to (- (length lines) 1)"
           "        collect"
           "         (list"
           "          (sec->ms (first (nth i lines)))"
           "          ;(first (nth i lines))"
           "          (write-to-string (nth i processed_labels))"
           "          )         "
           "         )"
           "  )"
           ""
           ";(lambda (lines list_activation_labels)"
           ";  (loop for line in lines collect"
           ";        (list"
           ";         (sec->ms (first line))"
           ";         (number-to-string (round (fourth line)))"
           ";         )"
           ";        ))"))))
       (:group-id nil)
       (:name "make-markers")
       (:x 271)
       (:y 279)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 213)
       (:y 54)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 13))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 357)
       (:y 461)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 14))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 235)
       (:y 400)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 15))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-memory")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines n processed_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        ;collect (write-to-string (list n (first line) (second line)))"
           "        into mem-segments"
           "        finally return (list mem-segments processed_labels))"
           ")"
           "                                 "
           "#|"
           "(lambda (lines n  list_activation_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        into mem-segments"
           "        ;collect (write-to-string (round (/ (fourth line) div_intens)))"
           "        ;collect (write-to-string (list (round (/ (fourth line) div_intens))))"
           "        collect (write-to-string"
           "                 (list "
           "                 ; duree"
           "                  (if (> div_dur 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) div_dur)) -1)"
           "                 ;pitch"
           "                  (if (= mod_12 1) "
           "                      (if (= (round (third line)) 0) -1 (mod (round (third line))12))"
           "                    (if (< mod_12 0) -1 (round (third line)))"
           "                    )"
           "                 ;inten"
           "                  (if (> div_intens 0) (round (/ (fourth line) div_intens)) -1)"
           "                 ;voice casting"
           "                  (if (> vc 0) (round (/ (fifth line) vc)) -1)"
           "                 ;nmf"
           "                  (if (> nmf 0) (round (/ (sixth line) nmf)) -1)"
           "                 ))"
           "        into labels"
           "        finally return (list mem-segments labels)))"
           "|#"
           "                                 "))))
       (:group-id nil)
       (:name "make-memory")
       (:x 461)
       (:y 281)
       (:w 200)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 485)
       (:y 387)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 17))
      (:box
       (:type :special)
       (:reference loop-for)
       (:group-id nil)
       (:name "for")
       (:x 508)
       (:y 92)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "from")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "to")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 18))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 375)
       (:y 51)
       (:w 71)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 502)
       (:y 57)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 20))
      (:comment
       (:x 556)
       (:y 102)
       (:w 47)
       (:h 22)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "#sound")
       (:id 21))
      (:box
       (:type :function)
       (:reference split)
       (:group-id nil)
       (:name "split")
       (:x 554)
       (:y 335)
       (:w 59)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 22))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 592)
       (:y 388)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 23))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 486)
       (:y 468)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 593)
       (:y 462)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 25))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "select-labels")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines list_activation_labels)"
           "  (loop for line in lines "
           "        collect (append "
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
           "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
           "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
           "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
           "                       collect (nth (+ i 1) line)"
           "                       )"
           "                 )"
           "        into labels"
           "        finally return labels"
           "        )"
           "  )"
           ""))))
       (:group-id nil)
       (:name "select-labels")
       (:x 767)
       (:y 243)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST_ACTIVATION_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 26))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 753)
       (:y 294)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value box)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value name)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 27))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "value box")
       (:x 416)
       (:y 277)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value t)
       (:id 28)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 0 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 26 :in 1)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 9 :in 2))
       (:attributes (:color nil :style nil :modif (0 1/3))))
      (:connection (:from (:box 6 :out 0)) (:to (:box 27 :in 0)))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/92))))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 16 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/94))))
      (:connection (:from (:box 7 :out 1)) (:to (:box 26 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 15 :out 1)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 22 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 17 :out 1)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 16 :in 1)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 22 :out 1)) (:to (:box 23 :in 0)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 14 :in 2)))
      (:connection (:from (:box 23 :out 1)) (:to (:box 25 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 27 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 16 :in 2)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 8 :in 2))))))
   (:group-id nil)
   (:name "loop-process-dataset")
   (:x 930)
   (:y 357)
   (:w 150)
   (:h 39)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "lab_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_activation_labels")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "extension_audio_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function_process_label")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "sound") (:reactive nil))
    (:output (:name "mem") (:reactive nil))
    (:output (:name "labels") (:reactive nil)))
   (:id 41))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1027)
   (:y 298)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "wav")
   (:id 42))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 875)
   (:y 398)
   (:w 231)
   (:h 102)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(1 376 2796)"
         "(1 2796 3068)"
         "(1 3068 3268)"
         "(1 3268 3514)"
         "(1 3514 3726)"
         "(1 3726 3982)"
         "(1 3982 4198)"
         "(1 4198 4430)"
         "(1 4430 4652)"
         "(1 4652 5532)"
         "(1 5532 5744)"
         "(1 5744 5982)"
         "(1 5982 6254)"
         "(1 6254 6462)"
         "(1 6462 6860)"
         "(1 6860 7312)"
         "(1 7312 7530)"
         "(1 7530 7746)"
         "(1 7746 7984)"
         "(1 7984 8334)"
         "(1 8334 8554)"
         "(1 8554 8792)"
         "(1 8792 10250)"
         "(1 10250 10458)"
         "(1 10458 10924)"
         "(1 10924 11280)"
         "(1 11280 11496)"
         "(1 11496 11704)"
         "(1 11704 11916)"
         "(1 11916 12134)"
         "(1 12134 12348)"
         "(1 12348 12914)"
         "(1 12914 13310)"
         "(1 13310 13546)"
         "(1 13546 13758)"
         "(1 13758 14238)"
         "(1 14238 14526)"
         "(1 14526 14802)"
         "(1 14802 15078)"
         "(1 15078 15394)"
         "(1 15394 15656)"
         "(1 15656 16140)"
         "(1 16140 16344)"
         "(1 16344 16820)"
         "(1 16820 17714)"
         "(1 17714 17998)"
         "(1 17998 18462)"
         "(1 18462 19214)"
         "(1 19214 19550)"
         "(1 19550 20510)"
         "(1 20510 21100)"
         "(1 21100 21340)"
         "(1 21340 21556)"
         "(1 21556 21770)"
         "(1 21770 21990)"
         "(1 21990 22218)"
         "(1 22218 22454)"
         "(1 22454 22774)"
         "(1 22774 23008)"
         "(1 23008 23466)"
         "(1 23466 24136)"
         "(1 24136 24820)"
         "(1 24820 25428)"
         "(1 25428 26414)"
         "(1 26414 26664)"
         "(1 26664 27102)"
         "(1 27102 27438)"
         "(1 27438 27654)"
         "(1 27654 28142)"
         "(1 28142 28640)"
         "(1 28640 28978)"
         "(1 28978 29210)"
         "(1 29210 29486)"
         "(1 29486 29714)"
         "(1 29714 29962)"
         "(1 29962 30188)"
         "(1 30188 30422)"
         "(1 30422 30624)"
         "(1 30624 30848)"
         "(1 30848 31054)"
         "(1 31054 31282)"
         "(1 31282 31494)"
         "(1 31494 31926)"
         "(1 31926 32162)"
         "(1 32162 32388)"
         "(1 32388 32862)"
         "(1 32862 33094)"
         "(1 33094 33734)"
         "(1 33734 34094)"
         "(1 34094 34310)"
         "(1 34310 34626)"
         "(1 34626 34986)"
         "(1 34986 35332)"
         "(1 35332 35662)"
         "(1 35662 35898)"
         "(1 35898 36140)"
         "(1 36140 36348)"
         "(1 36348 36864)"
         "(1 36864 37074)"
         "(1 37074 37350)"
         "(1 37350 37880)"
         "(1 37880 38314)"
         "(1 38314 38624)"
         "(1 38624 39770)"
         "(1 39770 40360)"
         "(1 40360 41174)"
         "(1 41174 41522)"
         "(1 41522 41968)"
         "(1 41968 43254)"
         "(1 43254 43548)"
         "(1 43548 43926)"
         "(1 43926 44230)"
         "(1 44230 44464)"
         "(1 44464 44704)"
         "(1 44704 44924)"
         "(1 44924 45602)"
         "(1 45602 45848)"
         "(1 45848 46184)"
         "(1 46184 46520)"
         "(1 46520 46772)"
         "(1 46772 47094)"
         "(1 47094 47300)"
         "(1 47300 47608)"
         "(1 47608 47814)"
         "(1 47814 48188)"
         "(1 48188 48426)"
         "(1 48426 48662)"
         "(1 48662 49188)"
         "(1 49188 49388)"
         "(1 49388 49748)"
         "(1 49748 50072)"
         "(1 50072 50404)"
         "(1 50404 50658)"
         "(1 50658 50958)"
         "(1 50958 51330)"
         "(1 51330 51564)"
         "(1 51564 51872)"
         "(1 51872 52188)"
         "(1 52188 52534)"
         "(1 52534 52832)"
         "(1 52832 53332)"
         "(1 53332 53582)"
         "(1 53582 54956)"
         "(1 54956 55298)"
         "(1 55298 55540)"
         "(1 55540 55886)"
         "(1 55886 56340)"
         "(1 56340 57188)"
         "(1 57188 57392)"
         "(1 57392 57778)"
         "(1 57778 58568)"
         "(1 58568 58794)"
         "(1 58794 59004)"
         "(1 59004 59480)"
         "(1 59480 59684)"
         "(1 59684 59940)"
         "(1 59940 60146)"
         "(1 60146 60416)"
         "(1 60416 60864)"
         "(1 60864 61326)"
         "(1 61326 61950)"
         "(1 61950 62308)"
         "(1 62308 62738)"
         "(1 62738 63100)"
         "(1 63100 63424)"
         "(1 63424 64070)"
         "(1 64070 64300)"
         "(1 64300 64646)"
         "(1 64646 64832)"
         "(1 64832 65104)"
         "(1 65104 65294)"
         "(1 65294 65510)"
         "(1 65510 65780)"
         "(1 65780 65974)"
         "(1 65974 66354)"
         "(1 66354 66564)"
         "(1 66564 66994)"
         "(1 66994 67228)"
         "(1 67228 67434)"
         "(1 67434 67650)"
         "(1 67650 67886)"
         "(1 67886 68332)"
         "(1 68332 68628)"
         "(1 68628 68858)"
         "(1 68858 69102)"
         "(1 69102 69322)"
         "(1 69322 69654)"
         "(1 69654 69894)"
         "(1 69894 70108)"
         "(1 70108 70338)"
         "(1 70338 70616)"
         "(1 70616 70886)"
         "(1 70886 71124)"
         "(1 71124 71534)"
         "(1 71534 71790)"
         "(1 71790 71992)"
         "(1 71992 72426)"
         "(1 72426 72788)"
         "(1 72788 73012)"
         "(1 73012 73248)"
         "(1 73248 73476)"
         "(1 73476 73788)"
         "(1 73788 73994)"
         "(1 73994 74242)"
         "(1 74242 74488)"
         "(1 74488 74714)"
         "(1 74714 75128)"
         "(1 75128 75396)"
         "(1 75396 75578)"
         "(1 75578 75946)"
         "(1 75946 76190)"
         "(1 76190 76410)"
         "(1 76410 76706)"
         "(1 76706 76922)"
         "(1 76922 77386)"
         "(1 77386 77594)"
         "(1 77594 77820)"
         "(1 77820 78262)"
         "(1 78262 78552)"
         "(1 78552 79120)"
         "(1 79120 79648)"
         "(1 79648 79848)"
         "(1 79848 80336)"
         "(1 80336 80520)"
         "(1 80520 80758)"
         "(1 80758 80972)"
         "(1 80972 81238)"
         "(1 81238 81416)"
         "(1 81416 81660)"
         "(1 81660 81868)"
         "(1 81868 82336)"
         "(1 82336 82538)"
         "(1 82538 82806)"
         "(1 82806 83006)"
         "(1 83006 83212)"
         "(1 83212 84100)"
         "(1 84100 84538)"
         "(1 84538 85010)"
         "(1 85010 85900)"
         "(1 85900 86442)"
         "(1 86442 86802)"
         "(1 86802 87222)"
         "(1 87222 87906)"
         "(1 87906 88576)"
         "(1 88576 88788)"
         "(1 88788 89042)"
         "(1 89042 89482)"
         "(1 89482 89916)"
         "(1 89916 90270)"
         "(1 90270 90626)"
         "(1 90626 91458)"
         "(1 91458 91820)"
         "(1 91820 92264)"
         "(1 92264 92584)"
         "(1 92584 92830)"
         "(1 92830 93280)"
         "(1 93280 93720)"
         "(1 93720 93952)"
         "(1 93952 94640)"
         "(1 94640 95052)"
         "(1 95052 95674)"
         "(1 95674 96150)"
         "(1 96150 96388)"
         "(1 96388 97012)"
         "(1 97012 97308)"
         "(1 97308 97546)"
         "(1 97546 98208)"
         "(1 98208 98416)"
         "(1 98416 98794)"
         "(1 98794 99142)"
         "(1 99142 99478)"
         "(1 99478 99836)"
         "(1 99836 100678)"
         "(1 100678 101028)"
         "(1 101028 101506)"
         "(1 101506 101738)"
         "(1 101738 102372)"
         "(1 102372 102636)"
         "(1 102636 103638)"
         "(1 103638 104082)"
         "(1 104082 104652)"
         "(1 104652 105112)"
         "(1 105112 106122)"
         "(1 106122 107180)"
         "(1 107180 107380)"
         "(1 107380 107714)"
         "(1 107714 108068)"
         "(1 108068 108390)"
         "(1 108390 108634)"
         "(1 108634 109460)"
         "(1 109460 109852)"
         "(1 109852 110056)"
         "(1 110056 110306)"
         "(1 110306 110544)"
         "(1 110544 110872)"
         "(1 110872 111308)"
         "(1 111308 111556)"
         "(1 111556 112132)"
         "(1 112132 112310)"
         "(1 112310 113014)"
         "(1 113014 113234)"
         "(1 113234 113596)"
         "(1 113596 114072)"
         "(1 114072 115000)"
         "(1 115000 116872)"
         "(1 116872 117142)"
         "(1 117142 117340)"
         "(1 117340 117558)"
         "(1 117558 117780)"
         "(1 117780 118008)"
         "(1 118008 118600)"
         "(1 118600 119120)"
         "(1 119120 120050)"
         "(1 120050 120364)"
         "(1 120364 120588)"
         "(1 120588 121030)"
         "(1 121030 121458)"
         "(1 121458 123304)"
         "(1 123304 123514)"
         "(1 123514 123752)"
         "(1 123752 124076)"
         "(1 124076 124318)"
         "(1 124318 124744)"
         "(1 124744 125232)"
         "(1 125232 125660)"
         "(1 125660 125866)"
         "(1 125866 126432)"
         "(1 126432 126962)"
         "(1 126962 127858)"
         "(1 127858 128092)"
         "(1 128092 128312)"
         "(1 128312 128676)"
         "(1 128676 129146)"
         "(1 129146 129474)"
         "(1 129474 129932)"
         "(1 129932 130344)"
         "(1 130344 130646)"
         "(1 130646 131044)"
         "(1 131044 131790)"
         "(1 131790 132066)"
         "(1 132066 132552)"
         "(1 132552 132866)"
         "(1 132866 133226)"
         "(1 133226 133550)"
         "(1 133550 133852)"
         "(1 133852 134096)"
         "(1 134096 134308)"
         "(1 134308 134528)"
         "(1 134528 134768)"
         "(1 134768 134992)"
         "(1 134992 135200)"
         "(1 135200 135660)"
         "(1 135660 135886)"
         "(1 135886 136254)"
         "(1 136254 136508)"
         "(1 136508 136822)"
         "(1 136822 137352)"
         "(1 137352 137706)"
         "(1 137706 137926)"
         "(1 137926 138160)"
         "(1 138160 138914)"
         "(1 138914 139366)"
         "(1 139366 139690)"
         "(1 139690 139908)"
         "(1 139908 140386)"
         "(1 140386 140586)"
         "(1 140586 140818)"
         "(1 140818 141176)"
         "(1 141176 141404)"
         "(1 141404 141640)"
         "(1 141640 141990)"
         "(1 141990 142252)"
         "(1 142252 142766)"
         "(1 142766 143214)"
         "(1 143214 143420)"
         "(1 143420 143740)"
         "(1 143740 144192)"
         "(1 144192 144442)"
         "(1 144442 144692)"
         "(1 144692 144896)"
         "(1 144896 145108)"
         "(1 145108 145548)"
         "(1 145548 145762)"
         "(1 145762 145990)"
         "(1 145990 146206)"
         "(1 146206 146446)"
         "(1 146446 146690)"
         "(1 146690 146900)"
         "(1 146900 147146)"
         "(1 147146 147344)"
         "(1 147344 147582)"
         "(1 147582 148038)"
         "(1 148038 148356)"
         "(1 148356 148686)"
         "(1 148686 148892)"
         "(1 148892 149250)"
         "(1 149250 149482)"
         "(1 149482 149696)"
         "(1 149696 149934)"
         "(1 149934 150164)"
         "(1 150164 150472)"
         "(1 150472 150718)"
         "(1 150718 150900)"
         "(1 150900 151126)"
         "(1 151126 151350)"
         "(1 151350 151624)"
         "(1 151624 151854)"
         "(1 151854 152094)"
         "(1 152094 152392)"
         "(1 152392 152750)"
         "(1 152750 152950)"
         "(1 152950 154090)"
         "(1 154090 154522)"
         "(1 154522 154850)"
         "(1 154850 155086)"
         "(1 155086 155304)"
         "(1 155304 155530)"
         "(1 155530 155760)"
         "(1 155760 155984)"
         "(1 155984 156536)"
         "(1 156536 156738)"
         "(1 156738 157364)"
         "(1 157364 157924)"
         "(1 157924 158120)"
         "(1 158120 158458)"
         "(1 158458 158700)"
         "(1 158700 158928)"
         "(1 158928 159282)"
         "(1 159282 160212)"
         "(1 160212 160518)"
         "(1 160518 160768)"
         "(1 160768 161210)"
         "(1 161210 161542)"
         "(1 161542 161788)"
         "(1 161788 162134)"
         "(1 162134 162614)"
         "(1 162614 162932)"
         "(1 162932 163168)"
         "(1 163168 163388)"
         "(1 163388 163610)"
         "(1 163610 163930)"
         "(1 163930 164170)"
         "(1 164170 164366)"
         "(1 164366 164696)"
         "(1 164696 165244)"
         "(1 165244 166050)"
         "(1 166050 166358)"
         "(1 166358 166596)"
         "(1 166596 166820)"
         "(1 166820 167252)"
         "(1 167252 167698)"
         "(1 167698 167962)"
         "(1 167962 168256)"
         "(1 168256 168514)"
         "(1 168514 168736)"
         "(1 168736 168960)"
         "(1 168960 169336)"
         "(1 169336 169726)"
         "(1 169726 170148)"
         "(1 170148 170396)"
         "(1 170396 170592)"
         "(1 170592 170840)"
         "(1 170840 171042)"
         "(1 171042 171802)"
         "(1 171802 172168)"
         "(1 172168 172540)"
         "(1 172540 172902)"
         "(1 172902 173104)"
         "(1 173104 173324)"
         "(1 173324 174046)"
         "(1 174046 174674)"
         "(1 174674 174952)"
         "(1 174952 175182)"
         "(1 175182 175676)"
         "(1 175676 176034)"
         "(1 176034 176414)"
         "(1 176414 176738)"
         "(1 176738 177586)"
         "(1 177586 177904)"
         "(1 177904 178676)"
         "(1 178676 178950)"
         "(1 178950 179432)"
         "(1 179432 179828)"
         "(1 179828 180054)"
         "(1 180054 180746)"
         "(1 180746 181218)"
         "(1 181218 181810)"
         "(1 181810 182296)"
         "(1 182296 182514)"
         "(1 182514 182834)"
         "(1 182834 183140)"
         "(1 183140 183418)"
         "(1 183418 183650)"
         "(1 183650 184292)"
         "(1 184292 184466)"
         "(1 184466 184868)"
         "(1 184868 185260)"
         "(1 185260 185578)"
         "(1 185578 185910)"
         "(1 185910 186746)"
         "(1 186746 187102)"
         "(1 187102 187546)"
         "(1 187546 187826)"
         "(1 187826 188432)"
         "(1 188432 188684)"
         "(1 188684 189474)"
         "(1 189474 189672)"
         "(1 189672 190118)"
         "(1 190118 190746)"
         "(1 190746 191184)"
         "(1 191184 192286)"
         "(1 192286 193424)"
         "(1 193424 193832)"
         "(1 193832 194124)"
         "(1 194124 194432)"
         "(1 194432 194682)"
         "(1 194682 195426)"
         "(1 195426 195878)"
         "(1 195878 196472)"
         "(1 196472 197032)"
         "(1 197032 197344)"
         "(1 197344 197612)"
         "(1 197612 198162)"
         "(1 198162 198436)"
         "(1 198436 199026)"
         "(1 199026 199414)"
         "(1 199414 200104)"))
       (:labls
        (:list
         "(32 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(19 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(17 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(18 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(12 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(13 -1 1 -1 -1)"
         "(14 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(25 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(15 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(12 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(11 -1 0 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(11 -1 1 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(10 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(8 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(9 -1 0 -1 -1)"))))))
   (:id 43))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-scenarios-with-stretch_1")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (963 660)) (:position (0 23)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "GENERATOR") (:doc "")))
       (:group-id nil)
       (:name "GENERATOR")
       (:x 0)
       (:y 42)
       (:w 104)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "LENGTH") (:doc "")))
       (:group-id nil)
       (:name "LENGTH")
       (:x 361)
       (:y 15)
       (:w 71)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "CONTINUITY-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "CONTINUITY-LIST")
       (:x 197)
       (:y 18)
       (:w 125)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 139)
       (:y 464)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "VOICE-MAX-CONT-MASTER")
         (:doc "")))
       (:group-id nil)
       (:name "VOICE-MAX-CONT-MASTER")
       (:x 424)
       (:y 36)
       (:w 195)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 5)
         (:name "VOICEGENERATOR")
         (:doc "")))
       (:group-id nil)
       (:name "VOICEGENERATOR")
       (:x 561)
       (:y 54)
       (:w 135)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 6) (:name "SOUND_DB") (:doc "")))
       (:group-id nil)
       (:name "SOUND_DB")
       (:x 603)
       (:y 118)
       (:w 89)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 7) (:name "XFADE") (:doc "")))
       (:group-id nil)
       (:name "XFADE")
       (:x 546)
       (:y 131)
       (:w 62)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 8) (:name "RES_DIR") (:doc "")))
       (:group-id nil)
       (:name "RES_DIR")
       (:x 517)
       (:y 15)
       (:w 74)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "list_dur") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "list_dur")
       (:x 478)
       (:y 528)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 9))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "query") (:index 3) (:doc "")))
       (:group-id nil)
       (:name "query")
       (:x 288)
       (:y 527)
       (:w 55)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 10))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 337)
       (:y 88)
       (:w 111)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 92)
       (:y 266)
       (:w 131)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value
        (:list
         "69"
         "67"
         "65"
         "67"
         "64"
         "66"
         "69"
         "65"
         "53"
         "53"
         "46"
         "46"
         "53"
         "51"
         "52"
         "64"
         "66"
         "68"
         "64"
         "64"
         "65"
         "64"
         "59"
         "64"
         "66"
         "68"
         "64"
         "66"
         "66"
         "68"
         "69"
         "68"
         "65"
         "69"
         "67"
         "67"
         "66"
         "67"
         "67"
         "65"
         "-12723"
         "65"
         "65"
         "65"
         "65"
         "67"
         "65"
         "60"
         "65"
         "65"))
       (:id 12))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 57)
       (:y 98)
       (:w 107)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "max_continuity")
       (:id 13))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 367)
       (:y 122)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :function)
       (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
       (:group-id nil)
       (:name "om-print-format")
       (:x 104)
       (:y 375)
       (:w 120)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FORMAT-STRING")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "args")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "prompt")
         (:value "DYCI2")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 7)
       (:y 339)
       (:w 123)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "NEW SCENARIO: ~A")
       (:id 16))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 132)
       (:y 340)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:library "om-dyci2")
       (:type :function)
       (:reference (:symbol "DYCI2QUERY" "DYCI2"))
       (:group-id nil)
       (:name "dyci2query")
       (:x 83)
       (:y 192)
       (:w 96)
       (:h 30)
       (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "QUERY")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:library "om-dyci2")
       (:type :function)
       (:reference (:symbol "DYCI2SETPARAM" "DYCI2"))
       (:group-id nil)
       (:name "dyci2setparam")
       (:x 15)
       (:y 158)
       (:w 116)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PARAMETER")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "VALUE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :function)
       (:reference remove)
       (:group-id nil)
       (:name "remove")
       (:x 74)
       (:y 228)
       (:w 89)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "generate_and_write_variations")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size (889 723)) (:position (0 23)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "len_scen") (:doc "")))
           (:group-id nil)
           (:name "len_scen")
           (:x 653)
           (:y 154)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 147)
           (:y 784)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "cont_scen")
             (:doc "")))
           (:group-id nil)
           (:name "cont_scen")
           (:x 737)
           (:y 158)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "list_dur")
             (:index 2)
             (:doc "")))
           (:group-id nil)
           (:name "list_dur")
           (:x 61)
           (:y 529)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "cont_gen") (:doc "")))
           (:group-id nil)
           (:name "cont_gen")
           (:x 393)
           (:y 41)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "path_output_directory")
             (:doc "")))
           (:group-id nil)
           (:name "path_output_directory")
           (:x 822)
           (:y 311)
           (:w 148)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "xfade") (:doc "")))
           (:group-id nil)
           (:name "xfade")
           (:x 277)
           (:y 343)
           (:w 51)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 6) (:name "query") (:doc "")))
           (:group-id nil)
           (:name "query")
           (:x 305)
           (:y 269)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 7)
             (:name "GENERATOR")
             (:doc "")))
           (:group-id nil)
           (:name "GENERATOR")
           (:x 77)
           (:y 112)
           (:w 98)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 8)
             (:name "snd_database")
             (:doc "")))
           (:group-id nil)
           (:name "snd_database")
           (:x 10)
           (:y 355)
           (:w 104)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "remix")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size (728 709)) (:position (0 23)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "SOUNDS")
                 (:doc "")))
               (:group-id nil)
               (:name "SOUNDS")
               (:x 38)
               (:y 145)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "SEGMENTS")
                 (:doc "")))
               (:group-id nil)
               (:name "SEGMENTS")
               (:x 156)
               (:y 20)
               (:w 89)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "list_dur")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "list_dur")
               (:x 491)
               (:y 651)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "CROSSFADE")
                 (:doc "")))
               (:group-id nil)
               (:name "CROSSFADE")
               (:x 414)
               (:y 68)
               (:w 103)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "out")
                 (:index 2)
                 (:doc "")))
               (:group-id nil)
               (:name "out")
               (:x 207)
               (:y 638)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "outfile")
                 (:doc "")))
               (:group-id nil)
               (:name "outfile")
               (:x 253)
               (:y 509)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 36)
               (:y 600)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 164)
               (:y 78)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 7))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 115)
               (:y 533)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference split)
               (:group-id nil)
               (:name "split")
               (:x 166)
               (:y 160)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "out1") (:reactive nil))
                (:output (:name "out2") (:reactive nil)))
               (:id 9))
              (:box
               (:type :function)
               (:reference om+)
               (:group-id nil)
               (:name "om+")
               (:x 218)
               (:y 269)
               (:w 62)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 131)
               (:y 273)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 11))
              (:box
               (:type :function)
               (:reference nth)
               (:group-id nil)
               (:name "nth")
               (:x 39)
               (:y 267)
               (:w 55)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ORIG-N")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ORIG-LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 12))
              (:box
               (:type :function)
               (:reference read-from-string)
               (:group-id nil)
               (:name "read-from-string")
               (:x 134)
               (:y 125)
               (:w 123)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "STRING")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 13))
              (:box
               (:type :function)
               (:reference 1-)
               (:group-id nil)
               (:name "1-")
               (:x 19)
               (:y 234)
               (:w 49)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 308)
               (:y 243)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 2)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 505)
               (:y 342)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 16))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 478)
               (:y 274)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-processing)
               (:group-id nil)
               (:name "supervp-processing")
               (:x 56)
               (:y 384)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SRC")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PROCESSINGS")
                 (:value "")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "BEGIN")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "END")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "FFTSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSTEP-OVERSAMP")
                 (:value 8)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOW-TYPE")
                 (:value "hanning")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SHAPE-INVARIANT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PRESERVE-TRANSIENT")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NORMALIZE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "OUTFILE")
                 (:value "out.aiff")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-timestretch)
               (:group-id nil)
               (:name "supervp-timestretch")
               (:x 297)
               (:y 335)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 19))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 565)
               (:y 178)
               (:w 46)
               (:h 32)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 20))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 296)
               (:y 216)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 21))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 559)
               (:y 151)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 22))
              (:comment
               (:x 593)
               (:y 124)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "duration event")
               (:id 23))
              (:comment
               (:x 498)
               (:y 122)
               (:w 87)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "target duration")
               (:id 24))
              (:comment
               (:x 613)
               (:y 183)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "coef stretch")
               (:id 25))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 89)
               (:y 314)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 26))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 192)
               (:y 313)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 27))
              (:box
               (:type :function)
               (:reference (:symbol "CONCAT-AUDIOFILES" "DYCI2"))
               (:group-id nil)
               (:name "concat-audiofiles")
               (:x 136)
               (:y 587)
               (:w 128)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FILES")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "crossfade")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "out")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 28))
              (:box
               (:type :function)
               (:reference seq)
               (:group-id nil)
               (:name "seq")
               (:x 289)
               (:y 622)
               (:w 57)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OP")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "op+1") (:reactive nil)))
               (:id 29))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 404)
               (:y 585)
               (:w 78)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 30))
              (:box
               (:type :function)
               (:reference (:symbol "OM-DELETE-FILE" "OM-API"))
               (:group-id nil)
               (:name "om-delete-file")
               (:x 361)
               (:y 529)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NAME")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 31)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 12 :in 1)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 21 :in 0))
               (:attributes (:color nil :style nil :modif (0 0))))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 28 :in 1)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 28 :in 2)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 28 :in 0)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 30 :in 1)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 17 :in 1))
               (:attributes (:color nil :style nil :modif (0 -0.45))))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 17 :in 0))
               (:attributes
                (:color nil :style nil :modif (0 -1683/4277))))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 27 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 26 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 12 :in 0)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 10 :in 1)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 11 :in 1))
               (:attributes (:color nil :style nil :modif (0 -1/20))))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 6 :in 1))
               (:attributes (:color nil :style nil :modif (0 30/233))))
              (:connection
               (:from (:box 16 :out 1))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 22 :in 1))
               (:attributes
                (:color nil :style nil :modif (-221/2622 0))))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 22 :in 0)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 18 :in 1)))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 21 :in 1)))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 19 :in 0))
               (:attributes (:color nil :style nil :modif (0 -1/9))))
              (:connection
               (:from (:box 21 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 26 :out 0))
               (:to (:box 18 :in 2)))
              (:connection
               (:from (:box 27 :out 0))
               (:to (:box 18 :in 3)))
              (:connection
               (:from (:box 28 :out 0))
               (:to (:box 29 :in 0)))
              (:connection
               (:from (:box 29 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 30 :out 0))
               (:to (:box 29 :in 1)))
              (:connection
               (:from (:box 31 :out 0))
               (:to (:box 30 :in 0))))))
           (:group-id nil)
           (:name "remix")
           (:x 60)
           (:y 406)
           (:w 105)
           (:h 81)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOUNDS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEGMENTS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CROSSFADE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "outfile")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "list_dur") (:reactive nil))
            (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 165)
           (:y 200)
           (:w 107)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "max_continuity")
           (:id 11))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "path_generated_sequence")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size (707 565)) (:position (0 181)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "name_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "name_scen")
               (:x 103)
               (:y 34)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "path")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "path")
               (:x 230)
               (:y 507)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "len_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "len_scen")
               (:x 222)
               (:y 34)
               (:w 74)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "cont_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_scen")
               (:x 315)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "idtf_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "idtf_gen")
               (:x 417)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "cont_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_gen")
               (:x 500)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 6)
                 (:name "path_output_directory")
                 (:doc "")))
               (:group-id nil)
               (:name "path_output_directory")
               (:x 602)
               (:y 37)
               (:w 148)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value
                  "/Users/nika/Desktop/OM7/OM-DYCI2_Tests/Results/")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :function)
               (:reference concatenate)
               (:group-id nil)
               (:name "concatenate")
               (:x 19)
               (:y 389)
               (:w 500)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "RESULT-TYPE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".aiff")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".wav")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 17)
               (:y 301)
               (:w 47)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value string)
               (:id 8))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 83)
               (:y 339)
               (:w 54)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "Scen")
               (:id 9))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 158)
               (:y 339)
               (:w 40)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_L")
               (:id 10))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 226)
               (:y 339)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 11))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 289)
               (:y 333)
               (:w 53)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "-Gen")
               (:id 12))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 363)
               (:y 333)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 13))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 203)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 299)
               (:y 110)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 401)
               (:y 174)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 525)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:type :function)
               (:reference pathname)
               (:group-id nil)
               (:name "pathname")
               (:x 398)
               (:y 448)
               (:w 91)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "P")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 7 :in 3)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 7 :in 1)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 7 :in 2)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 7 :in 4)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 7 :in 6)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 7 :in 8)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 7 :in 10)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 7 :in 5)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 7 :in 7)))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 7 :in 9)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 7 :in 11)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 1 :in 0))))))
           (:group-id nil)
           (:name "path_generated_sequence")
           (:x 599)
           (:y 520)
           (:w 200)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "name_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "len_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "idtf_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "path_output_directory")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "path") (:reactive nil)))
           (:id 12))
          (:box
           (:type :function)
           (:reference format)
           (:group-id nil)
           (:name "format")
           (:x 574)
           (:y 277)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "DESTINATION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTROL-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 582)
           (:y 233)
           (:w 73)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "[L~DC~D]")
           (:id 14))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 906)
           (:y 627)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 848)
           (:y 555)
           (:w 102)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "ITERATION #~D")
           (:id 16))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 934)
           (:y 595)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 318)
           (:y 647)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 247)
           (:y 615)
           (:w 100)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "OUTPUT ~A")
           (:id 19))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 347)
           (:y 580)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "filter-output")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (output) "
               "  (if "
               "      (and (> (length output) 0) (nth 0 output)) "
               "      output "
               "    ;(if "
               "     ;   (and (> (length output) 0) (nth 1 output))"
               "        ;(list \"(1 0 200)\" \"(1 301 600)\")"
               "    (loop for i from 0 to 5 collect \"(1 0 100)\")"
               "      ;)"
               "    )"
               "  )"))))
           (:group-id nil)
           (:name "filter-output")
           (:x 156)
           (:y 316)
           (:w 98)
           (:h 28)
           (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "OUTPUT")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 21))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 119)
           (:y 351)
           (:w 78)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 22))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 524)
           (:y 638)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 23))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 437)
           (:y 605)
           (:w 120)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "original output ~A")
           (:id 24))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 553)
           (:y 579)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 25))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2SETPARAM" "DYCI2"))
           (:group-id nil)
           (:name "dyci2setparam")
           (:x 52)
           (:y 239)
           (:w 116)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PARAMETER")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "VALUE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 26))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2QUERY" "DYCI2"))
           (:group-id nil)
           (:name "dyci2query")
           (:x 157)
           (:y 276)
           (:w 96)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "QUERY")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 27))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 699)
           (:y 468)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 28))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 249)
           (:y 755)
           (:w 133)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 29)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 13 :in 2)))
          (:connection (:from (:box 0 :out 0)) (:to (:box 12 :in 1)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 13 :in 3)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 12 :in 2)))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 26 :in 2))
           (:attributes (:color nil :style nil :modif (0 -4/83))))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 12 :in 4))
           (:attributes (:color nil :style nil :modif (0 -1/3))))
          (:connection (:from (:box 5 :out 0)) (:to (:box 12 :in 5)))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 10 :in 2))
           (:attributes
            (:color nil :style nil :modif (0 -0.09545457))))
          (:connection (:from (:box 7 :out 0)) (:to (:box 27 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 26 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
          (:connection
           (:from (:box 10 :out 0))
           (:to (:box 3 :in 0))
           (:attributes (:color nil :style nil :modif (0 -41/12374))))
          (:connection (:from (:box 10 :out 1)) (:to (:box 29 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 26 :in 1)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 10 :in 3)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 29 :in 3)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 15 :in 1)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 29 :in 1)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 0)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 1)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 22 :in 1)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 25 :in 0)))
          (:connection
           (:from (:box 22 :out 0))
           (:to (:box 10 :in 1))
           (:attributes (:color nil :style nil :modif (0 -3/16))))
          (:connection
           (:from (:box 22 :out 0))
           (:to (:box 20 :in 0))
           (:attributes (:color nil :style nil :modif (0 -79/209))))
          (:connection (:from (:box 23 :out 0)) (:to (:box 29 :in 2)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 23 :in 0)))
          (:connection (:from (:box 25 :out 0)) (:to (:box 23 :in 1)))
          (:connection (:from (:box 26 :out 0)) (:to (:box 27 :in 0)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 28 :out 0)) (:to (:box 12 :in 3)))
          (:connection
           (:from (:box 28 :out 0))
           (:to (:box 17 :in 0))
           (:attributes (:color nil :style nil :modif (0 -36/107))))
          (:connection
           (:from (:box 29 :out 0))
           (:to (:box 1 :in 0))))))
       (:group-id nil)
       (:name "generate_and_write_variations")
       (:x 359)
       (:y 327)
       (:w 202)
       (:h 91)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "len_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_gen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "path_output_directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "xfade")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "query")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GENERATOR")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "snd_database")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "list_dur") (:reactive nil)))
       (:id 21)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 11 :in 0)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 19 :in 2))
       (:attributes (:color nil :style nil :modif (0 7/27))))
      (:connection (:from (:box 2 :out 0)) (:to (:box 21 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 21 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 21 :in 6)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 21 :in 7)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 21 :in 4)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 21 :in 3)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 17 :in 0)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 21 :in 5))
       (:attributes (:color nil :style nil :modif (-3/337 0))))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 10 :in 0))
       (:attributes (:color nil :style nil :modif (0 -83/241))))
      (:connection (:from (:box 13 :out 0)) (:to (:box 19 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 21 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 15 :in 1)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 20 :in 1)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 18 :in 0))
       (:attributes (:color nil :style nil :modif (0 29/105))))
      (:connection (:from (:box 20 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 21 :out 1)) (:to (:box 9 :in 0))))))
   (:group-id nil)
   (:name "loop-scenarios-with-stretch_1")
   (:x 773)
   (:y 723)
   (:w 200)
   (:h 30)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "GENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LENGTH")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTINUITY-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE-MAX-CONT-MASTER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICEGENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND_DB")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "XFADE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RES_DIR")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "list_dur") (:reactive nil))
    (:output (:name "query") (:reactive nil)))
   (:id 44))
  (:box
   (:type :function)
   (:reference car)
   (:group-id nil)
   (:name "car")
   (:x 833)
   (:y 693)
   (:w 55)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "X")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 45))
  (:box
   (:type :function)
   (:reference cdr)
   (:group-id nil)
   (:name "cdr")
   (:x 591)
   (:y 760)
   (:w 55)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "X")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 46))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "remove-scen-file")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (500 500)) (:position (-1162 301)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (a b) "
       "  ;(om::om-print-format \"~%~%~%TESTING\")"
       "  ;(print a)"
       "  ;(print b)"
       "  ;(print (remove a b :test (lambda (x y) (string-equal (namestring x) (namestring y)))))"
       "  (remove a b :test (lambda (x y) (string-equal (namestring x) (namestring y))))"
       "  )"
       ""))))
   (:group-id nil)
   (:name "remove-scen-file")
   (:x 899)
   (:y 281)
   (:w 127)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input (:type :standard) (:name "A") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "B")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 47))
  (:box
   (:type :function)
   (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
   (:group-id nil)
   (:name "om-make-pathname")
   (:x 1473)
   (:y 466)
   (:w 145)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :key)
     (:name "directory")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "name") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "type") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 48))
  (:box
   (:type :function)
   (:reference pathname-name)
   (:group-id nil)
   (:name "pathname-name")
   (:x 1451)
   (:y 379)
   (:w 125)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "P")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 49))
  (:box
   (:type :function)
   (:reference pathname-type)
   (:group-id nil)
   (:name "pathname-type")
   (:x 1582)
   (:y 378)
   (:w 118)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "P")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 50))
  (:comment
   (:x 160)
   (:y 103)
   (:w 492)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "/!\\ om7-beta/preferences/files and folders/ if output file exists --> auto-rename")
   (:id 51))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1285)
   (:y 193)
   (:w 110)
   (:h 31)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "1_mem")
   (:id 52))
  (:box
   (:type :function)
   (:reference reverse)
   (:group-id nil)
   (:name "reverse")
   (:x 1458)
   (:y 287)
   (:w 78)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 53))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "function_process_label")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (e list_activation_labels) "
       "  (let ("
       "        (div_dur (nth 0 list_activation_labels))"
       "        (mod_12 (nth 1 list_activation_labels))"
       "        (div_intens  (nth 2 list_activation_labels))"
       "        (vc (nth 3 list_activation_labels))"
       "        (nmf (nth 4 list_activation_labels))"
       "        (query_dur (nth 0 e))"
       "        (query_pitch (nth 1 e))"
       "        (query_intens  (nth 2 e))"
       "        (query_vc (nth 3 e))"
       "        (query_nmf (nth 4 e))"
       "        )"
       "    (write-to-string"
       "     (list "
       "      ;duration label"
       "      (if (and (> div_dur 0) (> query_dur -1))"
       "          (round (/ query_dur div_dur)) "
       "        -1)"
       "      ;pitch label"
       "     (if (and (> mod_12 0) (> query_pitch -1))"
       "         (if (= mod_12 2) "
       "             (if (= (round query_pitch) 0) -1 (mod (round query_pitch)12))"
       "           (round query_pitch))"
       "       -1)"
       "      ;intensity label"
       "      (if (and (> div_intens 0)  (> query_intens -1))"
       "          (round (/ (/ query_intens 3) div_intens)) "
       "        -1)"
       "      ;voice casting label"
       "      (if (and (> vc 0)  (> query_vc -1)) "
       "          (round (/ query_vc vc)) "
       "        -1)"
       "      ;nmf label"
       "      (if (and (> nmf 0)  (> query_nmf -1)) "
       "          (round (/ query_nmf nmf)) "
       "        -1)"
       "      )"
       "     )"
       "    ))"))))
   (:group-id nil)
   (:name "function_process_label")
   (:x 465)
   (:y 287)
   (:w 161)
   (:h 28)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.7890212535858154D0
       0.8168872594833374D0
       0.6561802625656128D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input (:type :standard) (:name "E") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST_ACTIVATION_LABELS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 54))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 671)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 2 10 0 0))
   (:id 55))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 950)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 2 20 0 0))
   (:id 56))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 924)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 2 10 0 0))
   (:id 57))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 898)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 2 5 0 0))
   (:id 58))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 845)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 1 10 0 0))
   (:id 59))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 872)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 1 15 0 0))
   (:id 60))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 818)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 1 5 0 0))
   (:id 61))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 645)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 2 5 0 0))
   (:id 62))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 696)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 2 20 0 0))
   (:id 63))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 5)
   (:y 596)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 1 10 0 0))
   (:id 64))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 570)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 1 5 0 0))
   (:id 65))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 621)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 1 20 0 0))
   (:id 66))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 352)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 1 10 0 0))
   (:id 67))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 326)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 1 5 0 0))
   (:id 68))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 377)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 1 15 0 0))
   (:id 69))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 0)
   (:y 430)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 2 10 0 0))
   (:id 70))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 404)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 2 5 0 0))
   (:id 71))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 455)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 2 20 0 0))
   (:id 72))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 112)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 1 10 0 0))
   (:id 73))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 88)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 1 5 0 0))
   (:id 74))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 137)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 1 15 0 0))
   (:id 75))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 191)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 2 10 0 0))
   (:id 76))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 165)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 2 5 0 0))
   (:id 77))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 216)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 2 20 0 0))
   (:id 78))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "mem-directory")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (idx) "
       "    (string+ (write-to-string idx) \"_mem\") "
       "    )"
       "  "))))
   (:group-id nil)
   (:name "mem-directory")
   (:x 570)
   (:y 155)
   (:w 115)
   (:h 29)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDX")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 79))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 215)
   (:y 120)
   (:w 40)
   (:h 36)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 16)
   (:id 80))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "scen-directory")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (idx) "
       "    (string+ (write-to-string idx) \"_scen\") "
       "    )"
       "  "))))
   (:group-id nil)
   (:name "scen-directory")
   (:x 1115)
   (:y 150)
   (:w 115)
   (:h 29)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDX")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 81))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 765)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 0 10 0 0))
   (:id 82))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 792)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 0 15 0 0))
   (:id 83))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 738)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 0 5 0 0))
   (:id 84))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 37)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 0 10 0 0))
   (:id 85))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 5)
   (:y 11)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 0 5 0 0))
   (:id 86))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 62)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 0 15 0 0))
   (:id 87))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 276)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 0 10 0 0))
   (:id 88))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 3)
   (:y 250)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 0 5 0 0))
   (:id 89))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 3)
   (:y 301)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 0 15 0 0))
   (:id 90))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 5)
   (:y 520)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 0 10 0 0))
   (:id 91))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 494)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 0 5 0 0))
   (:id 92))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 5)
   (:y 545)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 0 20 0 0))
   (:id 93))
  (:comment
   (:x 746)
   (:y 856)
   (:w 336)
   (:h 64)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Yellow boxes: generation parameters
Blue boxes: other parameters (titles, crossfades, etc.)
Green boxes: for advanced users
Red boxes: run (selection then « v »)")
   (:id 94)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 8 :in 1))
   (:attributes (:color nil :style nil :modif (0 40/99))))
  (:connection (:from (:box 0 :out 0)) (:to (:box 44 :in 1)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 8 :in 6)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 44 :in 6)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 8 :in 2))
   (:attributes (:color nil :style nil :modif (0 145/374))))
  (:connection (:from (:box 5 :out 0)) (:to (:box 44 :in 2)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 46 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 45 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 16 :in 1)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 16 :in 2)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 38 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 10 :in 1)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 10 :in 4))
   (:attributes (:color nil :style nil :modif (0 67/336))))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 14 :in 0))
   (:attributes (:color nil :style nil :modif (0 -0.40283018))))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 12 :in 0))
   (:attributes (:color nil :style nil :modif (0 11120/28987))))
  (:connection (:from (:box 13 :out 0)) (:to (:box 49 :in 0)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 50 :in 0)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 9 :in 0)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 41 :in 0))
   (:attributes (:color nil :style nil :modif (0 -2/33))))
  (:connection (:from (:box 16 :out 0)) (:to (:box 44 :in 0)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 10 :in 3))
   (:attributes (:color nil :style nil :modif (0 -55/207))))
  (:connection (:from (:box 18 :out 0)) (:to (:box 19 :in 0)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 9 :in 1))
   (:attributes (:color nil :style nil :modif (0 0.41721314))))
  (:connection (:from (:box 18 :out 0)) (:to (:box 22 :in 1)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 27 :in 1))
   (:attributes (:color nil :style nil :modif (0 1/5))))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 41 :in 1))
   (:attributes (:color nil :style nil :modif (0 3/10))))
  (:connection (:from (:box 18 :out 0)) (:to (:box 54 :in 1)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 17 :in 2)))
  (:connection (:from (:box 19 :out 1)) (:to (:box 17 :in 3)))
  (:connection (:from (:box 19 :out 2)) (:to (:box 17 :in 4)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 10 :in 2)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 27 :in 3))
   (:attributes (:color nil :style nil :modif (0 2/27))))
  (:connection (:from (:box 24 :out 0)) (:to (:box 47 :in 1)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 24 :in 1)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 24 :in 0)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 48 :in 0)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 8 :in 5)))
  (:connection (:from (:box 27 :out 1)) (:to (:box 30 :in 1)))
  (:connection (:from (:box 27 :out 2)) (:to (:box 30 :in 2)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 26 :in 1)))
  (:connection
   (:from (:box 28 :out 0))
   (:to (:box 10 :in 5))
   (:attributes (:color nil :style nil :modif (0 0.44790366))))
  (:connection
   (:from (:box 29 :out 0))
   (:to (:box 27 :in 2))
   (:attributes (:color nil :style nil :modif (0 5/19))))
  (:connection (:from (:box 30 :out 0)) (:to (:box 8 :in 4)))
  (:connection
   (:from (:box 31 :out 0))
   (:to (:box 17 :in 1))
   (:attributes (:color nil :style nil :modif (0 1/12))))
  (:connection (:from (:box 33 :out 0)) (:to (:box 53 :in 0)))
  (:connection (:from (:box 33 :out 0)) (:to (:box 13 :in 0)))
  (:connection
   (:from (:box 34 :out 0))
   (:to (:box 33 :in 1))
   (:attributes (:color nil :style nil :modif (0 19/100))))
  (:connection (:from (:box 35 :out 0)) (:to (:box 33 :in 0)))
  (:connection (:from (:box 37 :out 0)) (:to (:box 44 :in 7)))
  (:connection
   (:from (:box 37 :out 0))
   (:to (:box 8 :in 7))
   (:attributes (:color nil :style nil :modif (0 -2/13))))
  (:connection (:from (:box 38 :out 0)) (:to (:box 37 :in 0)))
  (:connection
   (:from (:box 39 :out 0))
   (:to (:box 38 :in 0))
   (:attributes (:color nil :style nil :modif (0 0.41666666))))
  (:connection
   (:from (:box 39 :out 0))
   (:to (:box 35 :in 0))
   (:attributes (:color nil :style nil :modif (0 4/35))))
  (:connection
   (:from (:box 39 :out 0))
   (:to (:box 26 :in 0))
   (:attributes (:color nil :style nil :modif (0 1/33))))
  (:connection
   (:from (:box 41 :out 0))
   (:to (:box 44 :in 5))
   (:attributes (:color nil :style nil :modif (0 84/337))))
  (:connection (:from (:box 41 :out 1)) (:to (:box 43 :in 1)))
  (:connection (:from (:box 41 :out 2)) (:to (:box 43 :in 2)))
  (:connection
   (:from (:box 42 :out 0))
   (:to (:box 41 :in 2))
   (:attributes (:color nil :style nil :modif (0 5/19))))
  (:connection (:from (:box 43 :out 0)) (:to (:box 44 :in 4)))
  (:connection (:from (:box 44 :out 1)) (:to (:box 8 :in 8)))
  (:connection (:from (:box 44 :out 2)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 45 :out 0)) (:to (:box 44 :in 3)))
  (:connection (:from (:box 46 :out 0)) (:to (:box 8 :in 3)))
  (:connection (:from (:box 47 :out 0)) (:to (:box 27 :in 0)))
  (:connection
   (:from (:box 48 :out 0))
   (:to (:box 47 :in 0))
   (:attributes (:color nil :style nil :modif (-58/211 0))))
  (:connection (:from (:box 49 :out 0)) (:to (:box 48 :in 1)))
  (:connection (:from (:box 50 :out 0)) (:to (:box 48 :in 2)))
  (:connection (:from (:box 52 :out 0)) (:to (:box 35 :in 1)))
  (:connection (:from (:box 54 :out 0)) (:to (:box 9 :in 2)))
  (:connection (:from (:box 54 :out 0)) (:to (:box 41 :in 3)))
  (:connection
   (:from (:box 80 :out 0))
   (:to (:box 79 :in 0))
   (:attributes (:color nil :style nil :modif (0 13/36))))
  (:connection (:from (:box 80 :out 0)) (:to (:box 81 :in 0)))
  (:connection (:from (:box 88 :out 0)) (:to (:box 18 :in 0)))))