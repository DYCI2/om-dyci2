
(:patch
 (:name "OMDYCI2-Tuto7-Automatic_Evolutive_Scenario")
 (:doc "")
 (:info
  (:created "2018/10/12 13:57:27")
  (:modified "2021/07/05 14:37:58")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1447 965)) (:position (952 64)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 283)
   (:y 512)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.38799214363098145D0
       0.4924229383468628D0
       0.5947297811508179D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 40)
   (:id 0))
  (:comment
   (:x 282)
   (:y 41)
   (:w 244)
   (:h 59)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "4) Select an \"audio corpus\" (audio files + corresponding markers and labels in text annotations files)")
   (:id 1))
  (:comment
   (:x 5)
   (:y 255)
   (:w 222)
   (:h 59)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "5) Set maximum continuities for the output audio files (Loop 2 nested in Loop 1)")
   (:id 2))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 10)
   (:y 306)
   (:w 88)
   (:h 33)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 20 10 5))
   (:id 3))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 286)
   (:y 96)
   (:w 108)
   (:h 31)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "3_mem")
   (:id 4))
  (:comment
   (:x 1)
   (:y 41)
   (:w 284)
   (:h 59)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "1) Select the active dimensions, here (duration pitch intensity VC NMF),
and set parameters to process the labels")
   (:id 5))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 96)
   (:w 109)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 2 0 0 0))
   (:id 6))
  (:comment
   (:x 145)
   (:y 583)
   (:w 252)
   (:h 42)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "5) Evaluate to run the nested generation loops")
   (:id 7))
  (:comment
   (:x 257)
   (:y 494)
   (:w 112)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Crossfade (ms)")
   (:id 8))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "function_process_label")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (588 652)) (:position (156 358)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (e list_activation_labels) "
       "  (let ("
       "        (div_dur (nth 0 list_activation_labels))"
       "        (mod_12 (nth 1 list_activation_labels))"
       "        (div_intens  (nth 2 list_activation_labels))"
       "        (vc (nth 3 list_activation_labels))"
       "        (nmf (nth 4 list_activation_labels))"
       "        (query_dur (nth 0 e))"
       "        (query_pitch (nth 1 e))"
       "        (query_intens  (nth 2 e))"
       "        (query_vc (nth 3 e))"
       "        (query_nmf (nth 4 e))"
       "        )"
       "    (write-to-string"
       "     (list "
       "      ;duration label"
       "      (if (and (> div_dur 0) (> query_dur -1))"
       "          (round (/ query_dur div_dur)) "
       "        -1)"
       "      ;pitch label"
       "     (if (and (> mod_12 0) (> query_pitch -1))"
       "         (if (= mod_12 2) "
       "             (if (= (round query_pitch) 0) -1 (mod (round query_pitch)12))"
       "           (round query_pitch))"
       "       -1)"
       "      ;intensity label"
       "      (if (and (> div_intens 0)  (> query_intens -1))"
       "          (round (/ query_intens div_intens)) "
       "        -1)"
       "      ;voice casting label"
       "      (if (and (> vc 0)  (> query_vc -1)) "
       "          (round (/ query_vc vc)) "
       "        -1)"
       "      ;nmf label"
       "      (if (and (> nmf 0)  (> query_nmf -1)) "
       "          (round (/ query_nmf nmf)) "
       "        -1)"
       "      )"
       "     )"
       "    ))"))))
   (:group-id nil)
   (:name "function_process_label")
   (:x 97)
   (:y 138)
   (:w 161)
   (:h 32)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.36772552132606507D0
       0.6007713079452515D0
       0.018747687339782715D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input (:type :standard) (:name "E") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST_ACTIVATION_LABELS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:comment
   (:x 2)
   (:y 858)
   (:w 492)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "/!\\ om7-beta/preferences/files and folders/ if output file exists --> auto-rename")
   (:id 10))
  (:comment
   (:x 611)
   (:y 801)
   (:w 320)
   (:h 64)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Yellow boxes: generation parameters
Blue boxes: other parameters (titles, crossfades ,etc.)
Green boxes: for advanced users
Red boxes: run (selection then « v »)")
   (:id 11))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "analysis-audio-corpus-files")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (821 471)) (:position (1279 91)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 359)
       (:y 167)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 435)
       (:y 167)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
       (:group-id nil)
       (:name "input 3")
       (:x 329)
       (:y 91)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 2") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 2")
       (:x 321)
       (:y 281)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 3") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "output 3")
       (:x 356)
       (:y 281)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 4") (:index 3) (:doc "")))
       (:group-id nil)
       (:name "output 4")
       (:x 391)
       (:y 281)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 4) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 543)
       (:y 89)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference (:symbol "OM-DIRECTORY" "OM-API"))
       (:group-id nil)
       (:name "om-directory")
       (:x 295)
       (:y 176)
       (:w 105)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "PATH")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "type")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 411)
       (:y 140)
       (:w 100)
       (:h 30)
       (:color
        (:color-or-nil
         (:color
          (:color
           0.030046656727790833D0
           0.24989540874958038D0
           0.4119427800178528D0
           0.5019608))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "seg_desc")
       (:id 8))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-local-dyci2-path")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (folder corpus_subfolder) "
           "  (namestring "
           "   (merge-pathnames "
           "    (string+ folder \"Corpus/\" corpus_subfolder \"/\") "
           "    ;(om::om-user-home)"
           "    )))"
           "  "))))
       (:group-id nil)
       (:name "make-local-dyci2-path")
       (:x 243)
       (:y 146)
       (:w 155)
       (:h 29)
       (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "FOLDER")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CORPUS_SUBFOLDER")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "loop-process-dataset")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (866 635)) (:position (168 207)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 1)
             (:name "lab_files")
             (:doc "")))
           (:group-id nil)
           (:name "lab_files")
           (:x 212)
           (:y 2)
           (:w 66)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :optional)
             (:name "internal input value")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "sound") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "sound")
           (:x 229)
           (:y 509)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "mem") (:index 2) (:doc "")))
           (:group-id nil)
           (:name "mem")
           (:x 489)
           (:y 512)
           (:w 49)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "list_activation_labels")
             (:doc "")))
           (:group-id nil)
           (:name "list_activation_labels")
           (:x 545)
           (:y 6)
           (:w 141)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :optional)
             (:name "internal input value")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "labels") (:index 3) (:doc "")))
           (:group-id nil)
           (:name "labels")
           (:x 594)
           (:y 507)
           (:w 53)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 3)
             (:name "extension_audio_files")
             (:doc "")))
           (:group-id nil)
           (:name "extension_audio_files")
           (:x 717)
           (:y 2)
           (:w 147)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :optional)
             (:name "internal input value")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "function_process_label")
             (:doc "")))
           (:group-id nil)
           (:name "function_process_label")
           (:x 956)
           (:y 38)
           (:w 155)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :optional)
             (:name "internal input value")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :object)
           (:reference textbuffer)
           (:group-id nil)
           (:name "TEXTBUFFER")
           (:x 284)
           (:y 115)
           (:w 148)
           (:h 82)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font
            (:font (:face "Calibri") (:size 12) (:style :italic)))
           (:align :center)
           (:display :mini-view)
           (:showname t)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTENTS")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "CONTENTS") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params (:read-mode :lines-cols))
           (:value
            (:object
             (:class textbuffer)
             (:slots ((:contents nil)))
             (:add-slots ((:input-mode :lines-cols)))))
           (:id 7))
          (:box
           (:type :object)
           (:reference sound)
           (:group-id nil)
           (:name nil)
           (:x 113)
           (:y 320)
           (:w 297)
           (:h 56)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font
            (:font (:face "Calibri") (:size 12) (:style :italic)))
           (:align :center)
           (:display :hidden)
           (:showname nil)
           (:show-markers t)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value :choose-file)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "markers")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "access-from-file")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "file-pathname")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "sample-rate")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "n-channels")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "n-samples")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "markers") (:reactive nil))
            (:output (:name "access-from-file") (:reactive nil))
            (:output (:name "file-pathname") (:reactive nil))
            (:output (:name "sample-rate") (:reactive nil))
            (:output (:name "n-channels") (:reactive nil))
            (:output (:name "n-samples") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params)
           (:value
            (:object
             (:class sound)
             (:slots
              ((:onset 0)
               (:duration 0)
               (:n-samples nil)
               (:n-channels nil)
               (:sample-rate nil)
               (:smpl-type :float)
               (:sample-size 16)))
             (:add-slots
              ((:markers nil)
               (:gain 1.0)
               (:access-from-file nil)
               (:file-pathname nil)))))
           (:id 8))
          (:box
           (:type :function)
           (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
           (:group-id nil)
           (:name "om-make-pathname")
           (:x 93)
           (:y 205)
           (:w 145)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :key)
             (:name "directory")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "name")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "type")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference pathname-name)
           (:group-id nil)
           (:name "pathname-name")
           (:x 97)
           (:y 119)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "P")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:comment
           (:x 21)
           (:y 324)
           (:w 63)
           (:h 50)
           (:fgcolor nil)
           (:bgcolor nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:text "le même nom mais en .wav")
           (:id 11))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "make-markers")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (lines processed_labels)"
               "  (loop for i from 0 to (- (length lines) 1)"
               "        collect"
               "         (list"
               "          (sec->ms (first (nth i lines)))"
               "          ;(first (nth i lines))"
               "          (write-to-string (nth i processed_labels))"
               "          )         "
               "         )"
               "  )"
               ""
               ";(lambda (lines list_activation_labels)"
               ";  (loop for line in lines collect"
               ";        (list"
               ";         (sec->ms (first line))"
               ";         (number-to-string (round (fourth line)))"
               ";         )"
               ";        ))"))))
           (:group-id nil)
           (:name "make-markers")
           (:x 200)
           (:y 267)
           (:w 115)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "LINES")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PROCESSED_LABELS")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 357)
           (:y 461)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 13))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 235)
           (:y 400)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 14))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "make-memory")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (lines n processed_labels) "
               "  (loop for line in lines "
               "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
               "        ;collect (write-to-string (list n (first line) (second line)))"
               "        into mem-segments"
               "        finally return (list mem-segments processed_labels))"
               ")"
               "                                 "
               "#|"
               "(lambda (lines n  list_activation_labels) "
               "  (loop for line in lines "
               "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
               "        into mem-segments"
               "        ;collect (write-to-string (round (/ (fourth line) div_intens)))"
               "        ;collect (write-to-string (list (round (/ (fourth line) div_intens))))"
               "        collect (write-to-string"
               "                 (list "
               "                 ; duree"
               "                  (if (> div_dur 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) div_dur)) -1)"
               "                 ;pitch"
               "                  (if (= mod_12 1) "
               "                      (if (= (round (third line)) 0) -1 (mod (round (third line))12))"
               "                    (if (< mod_12 0) -1 (round (third line)))"
               "                    )"
               "                 ;inten"
               "                  (if (> div_intens 0) (round (/ (fourth line) div_intens)) -1)"
               "                 ;voice casting"
               "                  (if (> vc 0) (round (/ (fifth line) vc)) -1)"
               "                 ;nmf"
               "                  (if (> nmf 0) (round (/ (sixth line) nmf)) -1)"
               "                 ))"
               "        into labels"
               "        finally return (list mem-segments labels)))"
               "|#"
               "                                 "))))
           (:group-id nil)
           (:name "make-memory")
           (:x 461)
           (:y 281)
           (:w 200)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "LINES")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "N")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PROCESSED_LABELS")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 485)
           (:y 387)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 16))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 375)
           (:y 51)
           (:w 71)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 502)
           (:y 57)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 18))
          (:comment
           (:x 556)
           (:y 102)
           (:w 47)
           (:h 22)
           (:fgcolor nil)
           (:bgcolor nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:text "#sound")
           (:id 19))
          (:box
           (:type :function)
           (:reference split)
           (:group-id nil)
           (:name "split")
           (:x 554)
           (:y 335)
           (:w 59)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "out") (:reactive nil))
            (:output (:name "out1") (:reactive nil)))
           (:id 20))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 592)
           (:y 388)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 21))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 486)
           (:y 468)
           (:w 54)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 22))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 593)
           (:y 462)
           (:w 54)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 23))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "select-labels")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (lines list_activation_labels)"
               "  (loop for line in lines "
               "        collect (append "
               "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
               "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
               "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
               "                 ;(list (- (second line) (first line)))"
               "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
               "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
               "                       collect (nth (+ i 1) line)"
               "                       )"
               "                 )"
               "        into labels"
               "        finally return labels"
               "        )"
               "  )"
               ""))))
           (:group-id nil)
           (:name "select-labels")
           (:x 767)
           (:y 243)
           (:w 115)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "LINES")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LIST_ACTIVATION_LABELS")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 24))
          (:box
           (:type :function)
           (:reference mapcar)
           (:group-id nil)
           (:name "mapcar")
           (:x 753)
           (:y 294)
           (:w 78)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FUNCTION")
             (:value box)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LIST")
             (:value name)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 25))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "value box")
           (:x 279)
           (:y 288)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value t)
           (:id 26))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 213)
           (:y 54)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 27))
          (:box
           (:type :special)
           (:reference loop-for)
           (:group-id nil)
           (:name "for")
           (:x 508)
           (:y 92)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "from")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "to")
             (:value 10)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 28)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 27 :in 0)))
          (:connection (:from (:box 0 :out 0)) (:to (:box 17 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 24 :in 1)))
          (:connection
           (:from (:box 5 :out 0))
           (:to (:box 9 :in 2))
           (:attributes (:color nil :style nil :modif (0 1/3))))
          (:connection (:from (:box 6 :out 0)) (:to (:box 25 :in 0)))
          (:connection
           (:from (:box 7 :out 1))
           (:to (:box 12 :in 0))
           (:attributes (:color nil :style nil :modif (0 11/92))))
          (:connection
           (:from (:box 7 :out 1))
           (:to (:box 15 :in 0))
           (:attributes (:color nil :style nil :modif (0 11/94))))
          (:connection (:from (:box 7 :out 1)) (:to (:box 24 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 1)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 14 :out 1)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 20 :in 0)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 16 :out 1)) (:to (:box 22 :in 0)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 28 :in 1)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 28 :in 0)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 16 :in 0)))
          (:connection (:from (:box 20 :out 1)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 13 :in 2)))
          (:connection (:from (:box 21 :out 1)) (:to (:box 23 :in 0)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 23 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 25 :in 1)))
          (:connection (:from (:box 25 :out 0)) (:to (:box 12 :in 1)))
          (:connection (:from (:box 25 :out 0)) (:to (:box 15 :in 2)))
          (:connection (:from (:box 26 :out 0)) (:to (:box 8 :in 2)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 9 :in 0)))
          (:connection
           (:from (:box 28 :out 0))
           (:to (:box 15 :in 1))))))
       (:group-id nil)
       (:name "loop-process-dataset")
       (:x 321)
       (:y 217)
       (:w 150)
       (:h 39)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "lab_files")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "list_activation_labels")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "extension_audio_files")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "function_process_label")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "sound") (:reactive nil))
        (:output (:name "mem") (:reactive nil))
        (:output (:name "labels") (:reactive nil)))
       (:id 10))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 411)
       (:y 176)
       (:w 48)
       (:h 30)
       (:color
        (:color-or-nil
         (:color
          (:color
           0.030046656727790833D0
           0.24989540874958038D0
           0.4119427800178528D0
           0.5019608))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "wav")
       (:id 11)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 10 :in 1))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 10 :in 3))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 9 :in 1))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 0)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 3 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 10 :out 1))
       (:to (:box 4 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 10 :out 2))
       (:to (:box 5 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 10 :in 2))
       (:attributes (:color nil :style nil :modif (0 5/19)))))))
   (:group-id nil)
   (:name "analysis-audio-corpus-files")
   (:x 193)
   (:y 201)
   (:w 180)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 3")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "output 2") (:reactive nil))
    (:output (:name "output 3") (:reactive nil))
    (:output (:name "output 4") (:reactive nil)))
   (:id 12))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 235)
   (:y 251)
   (:w 231)
   (:h 102)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border (:number-or-nil (:number 4.0) (:t-or-nil t)))
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align :center)
   (:display :text)
   (:showname t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(1 0 1696)"
         "(1 1696 2114)"
         "(1 2114 2428)"
         "(1 2428 3522)"
         "(1 3522 4192)"
         "(1 4192 4622)"
         "(1 4622 4896)"
         "(1 4896 5508)"
         "(1 5508 6112)"
         "(1 6112 9402)"
         "(1 9402 9730)"
         "(1 9730 10642)"
         "(1 10642 10974)"
         "(1 10974 11378)"
         "(1 11378 11616)"
         "(1 11616 12234)"
         "(1 12234 12608)"
         "(1 12608 13000)"
         "(1 13000 13462)"
         "(1 13462 13782)"
         "(1 13782 14392)"
         "(1 14392 14794)"
         "(1 14794 15394)"
         "(1 15394 15960)"
         "(1 15960 16156)"
         "(1 16156 16578)"
         "(1 16578 17144)"
         "(1 17144 17372)"
         "(1 17372 18800)"
         "(1 18800 20162)"
         "(1 20162 22196)"
         "(1 22196 23912)"
         "(1 23912 24318)"
         "(1 24318 25190)"
         "(1 25190 26958)"
         "(1 26958 27464)"
         "(1 27464 27828)"
         "(1 27828 28152)"
         "(1 28152 28786)"
         "(1 28786 29024)"
         "(1 29024 29592)"
         "(1 29592 30342)"
         "(1 30342 31180)"
         "(1 31180 31734)"
         "(1 31734 32216)"
         "(1 32216 32824)"
         "(1 32824 33068)"
         "(1 33068 33482)"
         "(1 33482 36138)"
         "(1 36138 36964)"
         "(1 36964 37646)"
         "(1 37646 39188)"
         "(1 39188 40482)"
         "(1 40482 41402)"
         "(1 41402 42306)"
         "(1 42306 42872)"
         "(1 42872 43468)"
         "(1 43468 43724)"
         "(1 43724 44194)"
         "(1 44194 44636)"
         "(1 44636 44876)"
         "(1 44876 45162)"
         "(1 45162 45394)"
         "(1 45394 45622)"
         "(1 45622 45906)"
         "(1 45906 46228)"
         "(1 46228 46584)"
         "(1 46584 47214)"
         "(1 47214 47624)"
         "(1 47624 48236)"
         "(1 48236 48470)"
         "(1 48470 49418)"
         "(1 49418 50830)"
         "(1 50830 52708)"
         "(1 52708 53152)"
         "(1 53152 54296)"
         "(1 54296 55974)"
         "(1 55974 56440)"
         "(1 56440 56770)"
         "(1 56770 57846)"
         "(1 57846 58516)"
         "(1 58516 58946)"
         "(1 58946 59220)"
         "(1 59220 59836)"
         "(1 59836 63702)"
         "(1 63702 64244)"
         "(1 64244 64964)"
         "(1 64964 65282)"
         "(1 65282 65702)"
         "(1 65702 65938)"
         "(1 65938 66274)"
         "(1 66274 66558)"
         "(1 66558 66926)"
         "(1 66926 67680)"
         "(1 67680 68074)"
         "(1 68074 68606)"
         "(1 68606 68880)"
         "(1 68880 69122)"
         "(1 69122 69690)"
         "(1 69690 70268)"
         "(1 70268 70908)"
         "(1 70908 71468)"
         "(1 71468 71732)"
         "(1 71732 74444)"
         "(1 74444 76510)"
         "(1 76510 78198)"
         "(1 78198 78628)"
         "(1 78628 79506)"
         "(1 79506 81292)"
         "(1 81292 81948)"
         "(1 81948 82478)"
         "(1 82478 83110)"
         "(1 83110 83916)"
         "(1 83916 84668)"
         "(1 84668 85184)"
         "(1 85184 85620)"
         "(1 85620 87148)"
         "(1 87148 87370)"
         "(1 87370 87794)"
         "(1 87794 90458)"
         "(1 90458 91282)"
         "(1 91282 91968)"
         "(1 91968 94800)"
         "(1 94800 95720)"
         "(1 95720 96626)"
         "(1 96626 97192)"
         "(1 97192 97790)"
         "(1 97790 98046)"
         "(1 98046 98514)"
         "(1 98514 98998)"
         "(1 98998 99392)"
         "(1 99392 99710)"
         "(1 99710 99952)"
         "(1 99952 100232)"
         "(1 100232 100538)"
         "(1 100538 100866)"
         "(1 100866 101536)"
         "(1 101536 101934)"
         "(1 101934 102258)"
         "(1 102258 102566)"
         "(1 102566 102794)"
         "(1 102794 103748)"
         "(1 103748 105116)"
         "(1 105116 106996)"
         "(1 106996 107472)"
         "(1 107472 108616)"
         "(1 108616 110298)"
         "(1 110298 110764)"
         "(1 110764 111058)"
         "(1 111058 112170)"
         "(1 112170 112842)"
         "(1 112842 113268)"
         "(1 113268 113534)"
         "(1 113534 114152)"
         "(1 114152 118034)"
         "(1 118034 118602)"
         "(1 118602 119250)"
         "(1 119250 119612)"
         "(1 119612 120024)"
         "(1 120024 120268)"
         "(1 120268 120606)"
         "(1 120606 120878)"
         "(1 120878 121344)"
         "(1 121344 121648)"
         "(1 121648 122108)"
         "(1 122108 122400)"
         "(1 122400 122798)"
         "(1 122798 123204)"
         "(1 123204 123438)"
         "(1 123438 123974)"
         "(1 123974 124588)"
         "(1 124588 125190)"
         "(1 125190 125788)"
         "(1 125788 126056)"
         "(1 126056 127430)"
         "(1 127430 128766)"
         "(1 128766 130840)"
         "(1 130840 132560)"
         "(1 132560 132962)"
         "(1 132962 133830)"
         "(1 133830 135608)"
         "(1 135608 136272)"
         "(1 136272 136800)"
         "(1 136800 137430)"
         "(1 137430 138240)"
         "(1 138240 138990)"
         "(1 138990 139506)"
         "(1 139506 139974)"
         "(1 139974 141464)"
         "(1 141464 141702)"
         "(1 141702 142018)"
         "(1 142018 144780)"
         "(1 144780 146298)"
         "(1 146298 149130)"
         "(1 149130 150046)"
         "(1 150046 150950)"
         "(1 150950 151524)"
         "(1 151524 152110)"
         "(1 152110 152352)"
         "(1 152352 152840)"
         "(1 152840 153322)"
         "(1 153322 153802)"
         "(1 153802 154032)"
         "(1 154032 154268)"
         "(1 154268 154554)"
         "(1 154554 154874)"
         "(1 154874 155190)"
         "(1 155190 155860)"
         "(1 155860 156262)"
         "(1 156262 156578)"
         "(1 156578 156894)"
         "(1 156894 157114)"
         "(1 157114 158064)"
         "(1 158064 159424)"
         "(1 159424 161358)"
         "(1 161358 161798)"))
       (:labls
        (:list
         "(17 11 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(11 11 -1 -1 -1)"
         "(7 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(6 6 -1 -1 -1)"
         "(6 3 -1 -1 -1)"
         "(33 1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(9 4 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(6 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(6 11 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(6 6 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(14 7 -1 -1 -1)"
         "(14 6 -1 -1 -1)"
         "(20 -1 -1 -1 -1)"
         "(17 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(18 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(6 1 -1 -1 -1)"
         "(8 9 -1 -1 -1)"
         "(8 11 -1 -1 -1)"
         "(6 2 -1 -1 -1)"
         "(5 4 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(27 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(15 -1 -1 -1 -1)"
         "(13 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(6 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(19 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(11 -1 -1 -1 -1)"
         "(17 11 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(11 11 -1 -1 -1)"
         "(7 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(6 6 -1 -1 -1)"
         "(39 1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(7 3 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(8 9 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(6 6 -1 -1 -1)"
         "(6 4 -1 -1 -1)"
         "(6 5 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(27 5 -1 -1 -1)"
         "(21 -1 -1 -1 -1)"
         "(17 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(18 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(6 6 -1 -1 -1)"
         "(8 0 -1 -1 -1)"
         "(8 8 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(15 4 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(27 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(28 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(5 0 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(10 -1 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(19 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(11 -1 -1 -1 -1)"
         "(17 11 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(11 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(6 3 -1 -1 -1)"
         "(39 3 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(6 5 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(6 6 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(14 8 -1 -1 -1)"
         "(13 7 -1 -1 -1)"
         "(21 6 -1 -1 -1)"
         "(17 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(18 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(8 2 -1 -1 -1)"
         "(8 10 -1 -1 -1)"
         "(5 0 -1 -1 -1)"
         "(5 1 -1 -1 -1)"
         "(15 6 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(28 -1 -1 -1 -1)"
         "(15 -1 -1 -1 -1)"
         "(28 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(5 2 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(10 -1 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(19 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"))))))
   (:id 13))
  (:comment
   (:x 368)
   (:y 350)
   (:w 105)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font
      (:font (:face "Helvetica") (:size 12) (:style :bold :italic)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Audio generator")
   (:id 14))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "RUN-GENERATION-LOOPS")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1055 693)) (:position (83 115)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "GENERATOR") (:doc "")))
       (:group-id nil)
       (:name "GENERATOR")
       (:x 0)
       (:y 42)
       (:w 104)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 6)
       (:y 535)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "LENGTH") (:doc "")))
       (:group-id nil)
       (:name "LENGTH")
       (:x 361)
       (:y 15)
       (:w 71)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "CONTINUITY-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "CONTINUITY-LIST")
       (:x 197)
       (:y 18)
       (:w 125)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "VOICE-MAX-CONT-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "VOICE-MAX-CONT-LIST")
       (:x 424)
       (:y 36)
       (:w 157)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 5)
         (:name "VOICEGENERATOR")
         (:doc "")))
       (:group-id nil)
       (:name "VOICEGENERATOR")
       (:x 561)
       (:y 54)
       (:w 135)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 6) (:name "SOUND_DB") (:doc "")))
       (:group-id nil)
       (:name "SOUND_DB")
       (:x 603)
       (:y 118)
       (:w 89)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 7) (:name "XFADE") (:doc "")))
       (:group-id nil)
       (:name "XFADE")
       (:x 546)
       (:y 131)
       (:w 62)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 8) (:name "RES_DIR") (:doc "")))
       (:group-id nil)
       (:name "RES_DIR")
       (:x 517)
       (:y 15)
       (:w 74)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 337)
       (:y 88)
       (:w 111)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 92)
       (:y 266)
       (:w 131)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value
        (:list
         "69"
         "67"
         "65"
         "67"
         "64"
         "66"
         "69"
         "65"
         "53"
         "53"
         "46"
         "46"
         "53"
         "51"
         "52"
         "64"
         "66"
         "68"
         "64"
         "64"
         "65"
         "64"
         "59"
         "64"
         "66"
         "68"
         "64"
         "66"
         "66"
         "68"
         "69"
         "68"
         "65"
         "69"
         "67"
         "67"
         "66"
         "67"
         "67"
         "65"
         "-12723"
         "65"
         "65"
         "65"
         "65"
         "67"
         "65"
         "60"
         "65"
         "65"))
       (:id 10))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 57)
       (:y 98)
       (:w 107)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "max_continuity")
       (:id 11))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 367)
       (:y 122)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :function)
       (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
       (:group-id nil)
       (:name "om-print-format")
       (:x 104)
       (:y 375)
       (:w 120)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FORMAT-STRING")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "args")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "prompt")
         (:value "DYCI2")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 7)
       (:y 339)
       (:w 123)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "NEW SCENARIO: ~A")
       (:id 14))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 132)
       (:y 340)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:library "om-dyci2")
       (:type :function)
       (:reference (:symbol "DYCI2QUERY" "DYCI2"))
       (:group-id nil)
       (:name "dyci2query")
       (:x 83)
       (:y 192)
       (:w 96)
       (:h 30)
       (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "QUERY")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:library "om-dyci2")
       (:type :function)
       (:reference (:symbol "DYCI2SETPARAM" "DYCI2"))
       (:group-id nil)
       (:name "dyci2setparam")
       (:x 15)
       (:y 158)
       (:w 116)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PARAMETER")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "VALUE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :function)
       (:reference remove)
       (:group-id nil)
       (:name "remove")
       (:x 74)
       (:y 228)
       (:w 89)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "generate_and_write_variations")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1140 849)) (:position (63 92)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "len_scen") (:doc "")))
           (:group-id nil)
           (:name "len_scen")
           (:x 653)
           (:y 154)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 147)
           (:y 784)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "cont_scen")
             (:doc "")))
           (:group-id nil)
           (:name "cont_scen")
           (:x 737)
           (:y 158)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "list_dur")
             (:index 2)
             (:doc "")))
           (:group-id nil)
           (:name "list_dur")
           (:x 83)
           (:y 529)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "cont_gen") (:doc "")))
           (:group-id nil)
           (:name "cont_gen")
           (:x 393)
           (:y 41)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "path_output_directory")
             (:doc "")))
           (:group-id nil)
           (:name "path_output_directory")
           (:x 822)
           (:y 311)
           (:w 148)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "xfade") (:doc "")))
           (:group-id nil)
           (:name "xfade")
           (:x 277)
           (:y 343)
           (:w 51)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 6) (:name "query") (:doc "")))
           (:group-id nil)
           (:name "query")
           (:x 305)
           (:y 269)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 7)
             (:name "GENERATOR")
             (:doc "")))
           (:group-id nil)
           (:name "GENERATOR")
           (:x 77)
           (:y 112)
           (:w 98)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 8)
             (:name "snd_database")
             (:doc "")))
           (:group-id nil)
           (:name "snd_database")
           (:x 10)
           (:y 355)
           (:w 104)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "remix")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "SOUNDS")
                 (:doc "")))
               (:group-id nil)
               (:name "SOUNDS")
               (:x 38)
               (:y 145)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "list_dur")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "list_dur")
               (:x 491)
               (:y 651)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "SEGMENTS")
                 (:doc "")))
               (:group-id nil)
               (:name "SEGMENTS")
               (:x 156)
               (:y 20)
               (:w 89)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "out")
                 (:index 2)
                 (:doc "")))
               (:group-id nil)
               (:name "out")
               (:x 221)
               (:y 644)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "CROSSFADE")
                 (:doc "")))
               (:group-id nil)
               (:name "CROSSFADE")
               (:x 414)
               (:y 68)
               (:w 103)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "outfile")
                 (:doc "")))
               (:group-id nil)
               (:name "outfile")
               (:x 267)
               (:y 515)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 36)
               (:y 600)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 115)
               (:y 533)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 7))
              (:box
               (:type :function)
               (:reference split)
               (:group-id nil)
               (:name "split")
               (:x 166)
               (:y 160)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "out1") (:reactive nil))
                (:output (:name "out2") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference om+)
               (:group-id nil)
               (:name "om+")
               (:x 218)
               (:y 269)
               (:w 62)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 9))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 131)
               (:y 273)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :function)
               (:reference nth)
               (:group-id nil)
               (:name "nth")
               (:x 39)
               (:y 267)
               (:w 55)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ORIG-N")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ORIG-LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 11))
              (:box
               (:type :function)
               (:reference read-from-string)
               (:group-id nil)
               (:name "read-from-string")
               (:x 134)
               (:y 125)
               (:w 123)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "STRING")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 12))
              (:box
               (:type :function)
               (:reference 1-)
               (:group-id nil)
               (:name "1-")
               (:x 19)
               (:y 234)
               (:w 49)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 13))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 308)
               (:y 243)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 2)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 505)
               (:y 342)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 15))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 478)
               (:y 274)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-processing)
               (:group-id nil)
               (:name "supervp-processing")
               (:x 56)
               (:y 384)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SRC")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PROCESSINGS")
                 (:value "")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "BEGIN")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "END")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "FFTSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSTEP-OVERSAMP")
                 (:value 8)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOW-TYPE")
                 (:value "hanning")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SHAPE-INVARIANT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PRESERVE-TRANSIENT")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NORMALIZE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "OUTFILE")
                 (:value "out.aiff")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-timestretch)
               (:group-id nil)
               (:name "supervp-timestretch")
               (:x 297)
               (:y 335)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 565)
               (:y 178)
               (:w 46)
               (:h 32)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 19))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 296)
               (:y 216)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 20))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 559)
               (:y 151)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 21))
              (:comment
               (:x 593)
               (:y 124)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "duration event")
               (:id 22))
              (:comment
               (:x 498)
               (:y 122)
               (:w 87)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "target duration")
               (:id 23))
              (:comment
               (:x 613)
               (:y 183)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "coef stretch")
               (:id 24))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 89)
               (:y 314)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 25))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 192)
               (:y 313)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 26))
              (:box
               (:type :function)
               (:reference (:symbol "CONCAT-AUDIOFILES" "DYCI2"))
               (:group-id nil)
               (:name "concat-audiofiles")
               (:x 150)
               (:y 593)
               (:w 128)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FILES")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "crossfade")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "out")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 27))
              (:box
               (:type :function)
               (:reference seq)
               (:group-id nil)
               (:name "seq")
               (:x 303)
               (:y 628)
               (:w 57)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OP")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "op+1") (:reactive nil)))
               (:id 28))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 418)
               (:y 591)
               (:w 78)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 29))
              (:box
               (:type :function)
               (:reference (:symbol "OM-DELETE-FILE" "OM-API"))
               (:group-id nil)
               (:name "om-delete-file")
               (:x 375)
               (:y 535)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NAME")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 30))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 164)
               (:y 78)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 31)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 11 :in 1)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 31 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 20 :in 0))
               (:attributes (:color nil :style nil :modif (0 0))))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 27 :in 1)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 27 :in 2)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 7 :out 1))
               (:to (:box 27 :in 0)))
              (:connection
               (:from (:box 7 :out 1))
               (:to (:box 29 :in 1)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 16 :in 1))
               (:attributes (:color nil :style nil :modif (0 -0.45))))
              (:connection
               (:from (:box 8 :out 2))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 8 :out 2))
               (:to (:box 16 :in 0))
               (:attributes
                (:color nil :style nil :modif (0 -1683/4277))))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 26 :in 0)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 25 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 9 :in 1)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 10 :in 1))
               (:attributes (:color nil :style nil :modif (0 -1/20))))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 6 :in 1))
               (:attributes (:color nil :style nil :modif (0 30/233))))
              (:connection
               (:from (:box 15 :out 1))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 21 :in 1))
               (:attributes
                (:color nil :style nil :modif (-221/2622 0))))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 21 :in 0)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 17 :in 1)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 20 :in 1)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 18 :in 0))
               (:attributes (:color nil :style nil :modif (0 -1/9))))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 25 :out 0))
               (:to (:box 17 :in 2)))
              (:connection
               (:from (:box 26 :out 0))
               (:to (:box 17 :in 3)))
              (:connection
               (:from (:box 27 :out 0))
               (:to (:box 28 :in 0)))
              (:connection
               (:from (:box 28 :out 0))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 29 :out 0))
               (:to (:box 28 :in 1)))
              (:connection
               (:from (:box 30 :out 0))
               (:to (:box 29 :in 0)))
              (:connection
               (:from (:box 31 :out 0))
               (:to (:box 12 :in 0))))))
           (:group-id nil)
           (:name "remix")
           (:x 44)
           (:y 407)
           (:w 105)
           (:h 81)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOUNDS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEGMENTS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CROSSFADE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "outfile")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "list_dur") (:reactive nil))
            (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 165)
           (:y 200)
           (:w 107)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "max_continuity")
           (:id 11))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "path_generated_sequence")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size (1082 600)) (:position (84 115)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "name_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "name_scen")
               (:x 103)
               (:y 34)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "path")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "path")
               (:x 230)
               (:y 507)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "len_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "len_scen")
               (:x 222)
               (:y 34)
               (:w 74)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "cont_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_scen")
               (:x 315)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "idtf_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "idtf_gen")
               (:x 417)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "cont_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_gen")
               (:x 500)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 6)
                 (:name "path_output_directory")
                 (:doc "")))
               (:group-id nil)
               (:name "path_output_directory")
               (:x 602)
               (:y 37)
               (:w 148)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value
                  "/Users/nika/Desktop/OM7/OM-DYCI2_Tests/Results/")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :function)
               (:reference concatenate)
               (:group-id nil)
               (:name "concatenate")
               (:x 19)
               (:y 389)
               (:w 500)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "RESULT-TYPE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".aiff")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".wav")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 17)
               (:y 301)
               (:w 47)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value string)
               (:id 8))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 83)
               (:y 339)
               (:w 54)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "Scen")
               (:id 9))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 158)
               (:y 339)
               (:w 40)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_L")
               (:id 10))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 226)
               (:y 339)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 11))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 289)
               (:y 333)
               (:w 53)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "-Gen")
               (:id 12))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 363)
               (:y 333)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 13))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 203)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 299)
               (:y 110)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 401)
               (:y 174)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 525)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:type :function)
               (:reference pathname)
               (:group-id nil)
               (:name "pathname")
               (:x 438)
               (:y 458)
               (:w 91)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "P")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18))
              (:box
               (:type :function)
               (:reference namestring)
               (:group-id nil)
               (:name "namestring")
               (:x 45)
               (:y 172)
               (:w 97)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "P")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 19)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 7 :in 3)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 19 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 7 :in 2)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 7 :in 4)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 7 :in 6)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 7 :in 8)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 7 :in 10)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 7 :in 5)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 7 :in 7)))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 7 :in 9)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 7 :in 11)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 7 :in 1))))))
           (:group-id nil)
           (:name "path_generated_sequence")
           (:x 599)
           (:y 520)
           (:w 200)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "name_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "len_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "idtf_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "path_output_directory")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "path") (:reactive nil)))
           (:id 12))
          (:box
           (:type :function)
           (:reference format)
           (:group-id nil)
           (:name "format")
           (:x 574)
           (:y 277)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "DESTINATION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTROL-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 582)
           (:y 233)
           (:w 73)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "[L~DC~D]")
           (:id 14))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 906)
           (:y 627)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 848)
           (:y 555)
           (:w 102)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "ITERATION #~D")
           (:id 16))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 934)
           (:y 595)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 318)
           (:y 647)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 247)
           (:y 615)
           (:w 100)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "OUTPUT ~A")
           (:id 19))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 347)
           (:y 580)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "filter-output")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (output) "
               "  (if "
               "      (and (> (length output) 0) (nth 0 output)) "
               "      output "
               "    ;(if "
               "     ;   (and (> (length output) 0) (nth 1 output))"
               "        ;(list \"(1 0 200)\" \"(1 301 600)\")"
               "    (loop for i from 0 to 5 collect \"(1 0 100)\")"
               "      ;)"
               "    )"
               "  )"))))
           (:group-id nil)
           (:name "filter-output")
           (:x 156)
           (:y 316)
           (:w 98)
           (:h 28)
           (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "OUTPUT")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 21))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 119)
           (:y 351)
           (:w 78)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 22))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 524)
           (:y 638)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 23))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 437)
           (:y 605)
           (:w 120)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "original output ~A")
           (:id 24))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 553)
           (:y 579)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 25))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2SETPARAM" "DYCI2"))
           (:group-id nil)
           (:name "dyci2setparam")
           (:x 52)
           (:y 239)
           (:w 116)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PARAMETER")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "VALUE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 26))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2QUERY" "DYCI2"))
           (:group-id nil)
           (:name "dyci2query")
           (:x 157)
           (:y 276)
           (:w 96)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "QUERY")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 27))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 699)
           (:y 468)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 28))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 249)
           (:y 755)
           (:w 133)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 29)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 13 :in 2)))
          (:connection (:from (:box 0 :out 0)) (:to (:box 12 :in 1)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 13 :in 3)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 12 :in 2)))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 26 :in 2))
           (:attributes (:color nil :style nil :modif (0 -4/83))))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 12 :in 4))
           (:attributes (:color nil :style nil :modif (0 -1/3))))
          (:connection (:from (:box 5 :out 0)) (:to (:box 12 :in 5)))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 10 :in 2))
           (:attributes
            (:color nil :style nil :modif (0 -0.09545457))))
          (:connection (:from (:box 7 :out 0)) (:to (:box 27 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 26 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
          (:connection
           (:from (:box 10 :out 0))
           (:to (:box 3 :in 0))
           (:attributes (:color nil :style nil :modif (0 -41/12374))))
          (:connection (:from (:box 10 :out 1)) (:to (:box 29 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 26 :in 1)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 10 :in 3)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 29 :in 3)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 15 :in 1)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 29 :in 1)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 0)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 1)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 22 :in 1)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 25 :in 0)))
          (:connection
           (:from (:box 22 :out 0))
           (:to (:box 10 :in 1))
           (:attributes (:color nil :style nil :modif (0 -3/16))))
          (:connection (:from (:box 22 :out 0)) (:to (:box 20 :in 0)))
          (:connection (:from (:box 23 :out 0)) (:to (:box 29 :in 2)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 23 :in 0)))
          (:connection (:from (:box 25 :out 0)) (:to (:box 23 :in 1)))
          (:connection (:from (:box 26 :out 0)) (:to (:box 27 :in 0)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 28 :out 0)) (:to (:box 12 :in 3)))
          (:connection
           (:from (:box 28 :out 0))
           (:to (:box 17 :in 0))
           (:attributes (:color nil :style nil :modif (0 -36/107))))
          (:connection
           (:from (:box 29 :out 0))
           (:to (:box 1 :in 0))))))
       (:group-id nil)
       (:name "generate_and_write_variations")
       (:x 359)
       (:y 327)
       (:w 202)
       (:h 91)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "len_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_gen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "path_output_directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "xfade")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "query")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GENERATOR")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "snd_database")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "list_dur") (:reactive nil)))
       (:id 19))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "generate_and_write_variations_with_stretch")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (930 688)) (:position (105 138)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "len_scen") (:doc "")))
           (:group-id nil)
           (:name "len_scen")
           (:x 657)
           (:y 206)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 324)
           (:y 740)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "cont_scen")
             (:doc "")))
           (:group-id nil)
           (:name "cont_scen")
           (:x 741)
           (:y 210)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "cont_gen") (:doc "")))
           (:group-id nil)
           (:name "cont_gen")
           (:x 393)
           (:y 41)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "path_output_directory")
             (:doc "")))
           (:group-id nil)
           (:name "path_output_directory")
           (:x 822)
           (:y 311)
           (:w 148)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "xfade") (:doc "")))
           (:group-id nil)
           (:name "xfade")
           (:x 277)
           (:y 353)
           (:w 51)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 6) (:name "query") (:doc "")))
           (:group-id nil)
           (:name "query")
           (:x 305)
           (:y 269)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 7)
             (:name "GENERATOR")
             (:doc "")))
           (:group-id nil)
           (:name "GENERATOR")
           (:x 77)
           (:y 112)
           (:w 98)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 8)
             (:name "snd_database")
             (:doc "")))
           (:group-id nil)
           (:name "snd_database")
           (:x 6)
           (:y 341)
           (:w 104)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 9) (:name "list_dur") (:doc "")))
           (:group-id nil)
           (:name "list_dur")
           (:x 1088)
           (:y 88)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "remix")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "SOUNDS")
                 (:doc "")))
               (:group-id nil)
               (:name "SOUNDS")
               (:x 38)
               (:y 145)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "out")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "out")
               (:x 329)
               (:y 673)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "SEGMENTS")
                 (:doc "")))
               (:group-id nil)
               (:name "SEGMENTS")
               (:x 156)
               (:y 20)
               (:w 89)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "CROSSFADE")
                 (:doc "")))
               (:group-id nil)
               (:name "CROSSFADE")
               (:x 414)
               (:y 68)
               (:w 103)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "list_dur")
                 (:doc "")))
               (:group-id nil)
               (:name "list_dur")
               (:x 771)
               (:y 32)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "outfile")
                 (:doc "")))
               (:group-id nil)
               (:name "outfile")
               (:x 357)
               (:y 485)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 114)
               (:y 638)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 115)
               (:y 533)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 7))
              (:box
               (:type :function)
               (:reference split)
               (:group-id nil)
               (:name "split")
               (:x 166)
               (:y 160)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "out1") (:reactive nil))
                (:output (:name "out2") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference om+)
               (:group-id nil)
               (:name "om+")
               (:x 220)
               (:y 280)
               (:w 62)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 9))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 156)
               (:y 281)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :function)
               (:reference nth)
               (:group-id nil)
               (:name "nth")
               (:x 39)
               (:y 267)
               (:w 55)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ORIG-N")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ORIG-LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 11))
              (:box
               (:type :function)
               (:reference read-from-string)
               (:group-id nil)
               (:name "read-from-string")
               (:x 134)
               (:y 125)
               (:w 123)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "STRING")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 12))
              (:box
               (:type :function)
               (:reference 1-)
               (:group-id nil)
               (:name "1-")
               (:x 19)
               (:y 234)
               (:w 49)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 13))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 308)
               (:y 243)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 2)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 478)
               (:y 274)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-processing)
               (:group-id nil)
               (:name "supervp-processing")
               (:x 99)
               (:y 389)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SRC")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PROCESSINGS")
                 (:value "")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "BEGIN")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "END")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "FFTSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSTEP-OVERSAMP")
                 (:value 8)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOW-TYPE")
                 (:value "hanning")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SHAPE-INVARIANT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PRESERVE-TRANSIENT")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NORMALIZE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "OUTFILE")
                 (:value "out.aiff")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-timestretch)
               (:group-id nil)
               (:name "supervp-timestretch")
               (:x 297)
               (:y 335)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 565)
               (:y 178)
               (:w 46)
               (:h 32)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "in")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 18))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 296)
               (:y 216)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 19))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 559)
               (:y 151)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 20))
              (:comment
               (:x 593)
               (:y 124)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "duration event")
               (:id 21))
              (:comment
               (:x 498)
               (:y 122)
               (:w 87)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "target duration")
               (:id 22))
              (:comment
               (:x 613)
               (:y 183)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "coef stretch")
               (:id 23))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 114)
               (:y 314)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 24))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 215)
               (:y 312)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 25))
              (:box
               (:type :function)
               (:reference (:symbol "CONCAT-AUDIOFILES" "DYCI2"))
               (:group-id nil)
               (:name "concat-audiofiles")
               (:x 240)
               (:y 596)
               (:w 128)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FILES")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "crossfade")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "out")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 26))
              (:box
               (:type :function)
               (:reference seq)
               (:group-id nil)
               (:name "seq")
               (:x 365)
               (:y 635)
               (:w 57)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OP")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "op+1") (:reactive nil)))
               (:id 27))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 690)
               (:y 601)
               (:w 78)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 28))
              (:box
               (:type :function)
               (:reference (:symbol "OM-DELETE-FILE" "OM-API"))
               (:group-id nil)
               (:name "om-delete-file")
               (:x 611)
               (:y 554)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NAME")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 29))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 164)
               (:y 78)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 30))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 771)
               (:y 95)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 31)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 11 :in 1)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 30 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 19 :in 0))
               (:attributes (:color nil :style nil :modif (0 0))))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 26 :in 1)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 31 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 26 :in 2)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 7 :out 1))
               (:to (:box 26 :in 0)))
              (:connection
               (:from (:box 7 :out 1))
               (:to (:box 28 :in 1)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 15 :in 1))
               (:attributes (:color nil :style nil :modif (0 -0.45))))
              (:connection
               (:from (:box 8 :out 2))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 8 :out 2))
               (:to (:box 15 :in 0))
               (:attributes
                (:color nil :style nil :modif (0 -1683/4277))))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 25 :in 0)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 24 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 9 :in 1)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 10 :in 1))
               (:attributes (:color nil :style nil :modif (0 -1/20))))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 20 :in 1))
               (:attributes
                (:color nil :style nil :modif (-221/2622 0))))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 16 :in 1)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 19 :in 1)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 17 :in 0))
               (:attributes (:color nil :style nil :modif (0 -1/27))))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 24 :out 0))
               (:to (:box 16 :in 2)))
              (:connection
               (:from (:box 25 :out 0))
               (:to (:box 16 :in 3)))
              (:connection
               (:from (:box 26 :out 0))
               (:to (:box 27 :in 0)))
              (:connection
               (:from (:box 27 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 28 :out 0))
               (:to (:box 27 :in 1)))
              (:connection
               (:from (:box 29 :out 0))
               (:to (:box 28 :in 0)))
              (:connection
               (:from (:box 30 :out 0))
               (:to (:box 12 :in 0)))
              (:connection
               (:from (:box 31 :out 0))
               (:to (:box 20 :in 0))))))
           (:group-id nil)
           (:name "remix")
           (:x 35)
           (:y 445)
           (:w 105)
           (:h 81)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOUNDS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEGMENTS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CROSSFADE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "list_dur")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "outfile")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 156)
           (:y 147)
           (:w 107)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "max_continuity")
           (:id 11))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 177)
           (:y 725)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 12))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 457)
           (:y 362)
           (:w 71)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "path_generated_sequence")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size (1007 584)) (:position (126 161)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "name_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "name_scen")
               (:x 103)
               (:y 34)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "path")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "path")
               (:x 230)
               (:y 507)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "len_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "len_scen")
               (:x 222)
               (:y 34)
               (:w 74)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "cont_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_scen")
               (:x 315)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "idtf_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "idtf_gen")
               (:x 417)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "cont_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_gen")
               (:x 500)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 6)
                 (:name "path_output_directory")
                 (:doc "")))
               (:group-id nil)
               (:name "path_output_directory")
               (:x 602)
               (:y 37)
               (:w 148)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value
                  "/Users/nika/Desktop/OM7/OM-DYCI2_Tests/Results/")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :function)
               (:reference concatenate)
               (:group-id nil)
               (:name "concatenate")
               (:x 19)
               (:y 389)
               (:w 500)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "RESULT-TYPE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".aiff")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".wav")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 17)
               (:y 301)
               (:w 47)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value string)
               (:id 8))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 83)
               (:y 339)
               (:w 54)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "Scen")
               (:id 9))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 158)
               (:y 339)
               (:w 40)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_L")
               (:id 10))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 226)
               (:y 339)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 11))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 289)
               (:y 333)
               (:w 53)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "-Gen")
               (:id 12))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 363)
               (:y 333)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 13))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 203)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 299)
               (:y 110)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 401)
               (:y 174)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 525)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:type :function)
               (:reference pathname)
               (:group-id nil)
               (:name "pathname")
               (:x 306)
               (:y 455)
               (:w 91)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "P")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18))
              (:box
               (:type :function)
               (:reference namestring)
               (:group-id nil)
               (:name "namestring")
               (:x 83)
               (:y 257)
               (:w 97)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "P")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 19)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 7 :in 3)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 19 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 7 :in 2)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 7 :in 4)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 7 :in 6)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 7 :in 8)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 7 :in 10)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 7 :in 5)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 7 :in 7)))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 7 :in 9)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 7 :in 11)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 7 :in 1))))))
           (:group-id nil)
           (:name "path_generated_sequence")
           (:x 599)
           (:y 520)
           (:w 200)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "name_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "len_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "idtf_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "path_output_directory")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "path") (:reactive nil)))
           (:id 14))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 762)
           (:y 400)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 582)
           (:y 400)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 16))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 670)
           (:y 400)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :function)
           (:reference format)
           (:group-id nil)
           (:name "format")
           (:x 578)
           (:y 329)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "DESTINATION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTROL-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 539)
           (:y 285)
           (:w 73)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "[L~DC~D]")
           (:id 19))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 796)
           (:y 627)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 739)
           (:y 555)
           (:w 102)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "ITERATION #~D")
           (:id 21))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 825)
           (:y 595)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 22))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 318)
           (:y 639)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 23))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 237)
           (:y 607)
           (:w 100)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "OUTPUT ~A")
           (:id 24))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 347)
           (:y 580)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 25))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "filter-output")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (output) "
               "  (if "
               "      (and (> (length output) 0) (nth 0 output)) "
               "      output "
               "    ;(if "
               "     ;   (and (> (length output) 0) (nth 1 output))"
               "        ;(list \"(1 0 200)\" \"(1 301 600)\")"
               "    (loop for i from 0 to 5 collect \"(1 0 100)\")"
               "      ;)"
               "    )"
               "  )"))))
           (:group-id nil)
           (:name "filter-output")
           (:x 156)
           (:y 316)
           (:w 98)
           (:h 28)
           (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "OUTPUT")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 26))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 119)
           (:y 351)
           (:w 78)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 27))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 524)
           (:y 638)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 28))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 457)
           (:y 604)
           (:w 120)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "original output ~A")
           (:id 29))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 553)
           (:y 579)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 30))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2SETPARAM" "DYCI2"))
           (:group-id nil)
           (:name "dyci2setparam")
           (:x 52)
           (:y 239)
           (:w 116)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PARAMETER")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "VALUE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 31))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2QUERY" "DYCI2"))
           (:group-id nil)
           (:name "dyci2query")
           (:x 157)
           (:y 276)
           (:w 96)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "QUERY")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 32))
          (:box
           (:type :function)
           (:reference om+)
           (:group-id nil)
           (:name "om+")
           (:x 833)
           (:y 507)
           (:w 62)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 33))
          (:box
           (:type :special)
           (:reference loop-for)
           (:group-id nil)
           (:name "for")
           (:x 836)
           (:y 458)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "from")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "to")
             (:value 3)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "by")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 34))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 278)
           (:y 117)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 35))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 768)
           (:y 458)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 36))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 676)
           (:y 458)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 37))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 588)
           (:y 458)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 38)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 17 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/495))))
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 18 :in 2))
           (:attributes (:color nil :style nil :modif (0 -6/91))))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 15 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/496))))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 18 :in 3))
           (:attributes (:color nil :style nil :modif (0 17/87))))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 13 :in 0))
           (:attributes (:color nil :style nil :modif (0 -3/41))))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 35 :in 0))
           (:attributes (:color nil :style nil :modif (0 -11/60))))
          (:connection (:from (:box 4 :out 0)) (:to (:box 14 :in 5)))
          (:connection
           (:from (:box 5 :out 0))
           (:to (:box 10 :in 2))
           (:attributes
            (:color nil :style nil :modif (0 -0.09545457))))
          (:connection (:from (:box 6 :out 0)) (:to (:box 32 :in 1)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 31 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 3)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 31 :in 1)))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 34 :in 1))
           (:attributes
            (:color nil :style nil :modif (0 45973/277033))))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 15 :in 0))
           (:attributes (:color nil :style nil :modif (0 190/429))))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 16 :in 0))
           (:attributes
            (:color nil :style nil :modif (0 26489/59345))))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 17 :in 0))
           (:attributes (:color nil :style nil :modif (0 0.445338))))
          (:connection (:from (:box 14 :out 0)) (:to (:box 10 :in 4)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 36 :in 0)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 38 :in 0)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 37 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 16 :in 1)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 1)))
          (:connection
           (:from (:box 20 :out 0))
           (:to (:box 12 :in 1))
           (:attributes (:color nil :style nil :modif (0 -8/77))))
          (:connection (:from (:box 21 :out 0)) (:to (:box 20 :in 0)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 20 :in 1)))
          (:connection
           (:from (:box 23 :out 0))
           (:to (:box 12 :in 3))
           (:attributes (:color nil :style nil :modif (0 14/65))))
          (:connection (:from (:box 24 :out 0)) (:to (:box 23 :in 0)))
          (:connection (:from (:box 25 :out 0)) (:to (:box 23 :in 1)))
          (:connection (:from (:box 26 :out 0)) (:to (:box 27 :in 1)))
          (:connection (:from (:box 26 :out 0)) (:to (:box 30 :in 0)))
          (:connection
           (:from (:box 27 :out 0))
           (:to (:box 10 :in 1))
           (:attributes (:color nil :style nil :modif (0 -3/16))))
          (:connection (:from (:box 27 :out 0)) (:to (:box 25 :in 0)))
          (:connection
           (:from (:box 28 :out 0))
           (:to (:box 12 :in 2))
           (:attributes (:color nil :style nil :modif (0 1/33))))
          (:connection (:from (:box 29 :out 0)) (:to (:box 28 :in 0)))
          (:connection (:from (:box 30 :out 0)) (:to (:box 28 :in 1)))
          (:connection (:from (:box 31 :out 0)) (:to (:box 32 :in 0)))
          (:connection (:from (:box 32 :out 0)) (:to (:box 26 :in 0)))
          (:connection (:from (:box 33 :out 0)) (:to (:box 14 :in 3)))
          (:connection (:from (:box 33 :out 0)) (:to (:box 22 :in 0)))
          (:connection (:from (:box 34 :out 0)) (:to (:box 33 :in 0)))
          (:connection
           (:from (:box 35 :out 0))
           (:to (:box 14 :in 4))
           (:attributes (:color nil :style nil :modif (0 -1/4))))
          (:connection (:from (:box 35 :out 0)) (:to (:box 31 :in 2)))
          (:connection (:from (:box 36 :out 0)) (:to (:box 14 :in 2)))
          (:connection (:from (:box 37 :out 0)) (:to (:box 14 :in 1)))
          (:connection
           (:from (:box 38 :out 0))
           (:to (:box 14 :in 0))))))
       (:group-id nil)
       (:name "generate_and_write_variations_with_stretch")
       (:x 623)
       (:y 328)
       (:w 273)
       (:h 104)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "len_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_gen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "path_output_directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "xfade")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "query")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GENERATOR")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "snd_database")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "list_dur")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 699)
       (:y 476)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 21))
      (:box
       (:type :function)
       (:reference print)
       (:group-id nil)
       (:name "print")
       (:x 477)
       (:y 425)
       (:w 61)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SOMETHING")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 22))
      (:box
       (:type :function)
       (:reference car)
       (:group-id nil)
       (:name "car")
       (:x 452)
       (:y 133)
       (:w 55)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 23))
      (:box
       (:type :function)
       (:reference cdr)
       (:group-id nil)
       (:name "cdr")
       (:x 509)
       (:y 134)
       (:w 55)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 219)
       (:y 93)
       (:w 67)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 25)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 25 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 23 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 19 :in 6)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 20 :in 6)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 19 :in 7)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 20 :in 7)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 19 :in 4)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 20 :in 4)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 19 :in 3)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 20 :in 3)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 15 :in 0)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 19 :in 5))
       (:attributes (:color nil :style nil :modif (-3/337 0))))
      (:connection (:from (:box 10 :out 0)) (:to (:box 20 :in 5)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 17 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 16 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 20 :in 0)))
      (:connection
       (:from (:box 13 :out 0))
       (:to (:box 21 :in 0))
       (:attributes (:color nil :style nil :modif (0 10/27))))
      (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 13 :in 1)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 18 :in 1)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 16 :in 0))
       (:attributes (:color nil :style nil :modif (0 29/105))))
      (:connection (:from (:box 18 :out 0)) (:to (:box 10 :in 0)))
      (:connection
       (:from (:box 19 :out 1))
       (:to (:box 20 :in 8))
       (:attributes (:color nil :style nil :modif (-237/1100 0))))
      (:connection (:from (:box 19 :out 1)) (:to (:box 22 :in 0)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 21 :in 1)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 21 :in 2)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 19 :in 2)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 20 :in 2)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 17 :in 2)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 19 :in 1)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 20 :in 1))))))
   (:group-id nil)
   (:name "RUN-GENERATION-LOOPS")
   (:x 140)
   (:y 555)
   (:w 200)
   (:h 28)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.6266593337059021D0
       0.011445105075836182D0
       0.044897355139255524D0
       0.4))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "GENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LENGTH")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTINUITY-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE-MAX-CONT-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICEGENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND_DB")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "XFADE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RES_DIR")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:comment
   (:x 725)
   (:y 256)
   (:w 389)
   (:h 25)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Maximum continuities (Loop 1)")
   (:id 16))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 726)
   (:y 274)
   (:w 208)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 40 30 20 5))
   (:id 17))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 493)
   (:y 251)
   (:w 227)
   (:h 102)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border (:number-or-nil (:number 4.0) (:t-or-nil t)))
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(24 -1 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(5 0 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(15 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(10 10 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(5 3 -1 -1 -1)"
         "(7 0 -1 -1 -1)"
         "(7 6 -1 -1 -1)"
         "(6 4 -1 -1 -1)"
         "(10 2 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(11 7 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(8 9 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(13 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(7 6 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(14 5 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(5 5 -1 -1 -1)"
         "(8 5 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(8 3 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(5 6 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(6 9 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(5 4 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(9 3 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(5 5 -1 -1 -1)"
         "(9 7 -1 -1 -1)"
         "(5 2 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(7 11 -1 -1 -1)"
         "(7 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(8 4 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(7 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(6 4 -1 -1 -1)"
         "(5 5 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(7 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(10 10 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(6 3 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(10 2 -1 -1 -1)"
         "(11 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(8 5 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(7 5 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(19 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(18 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(5 2 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(11 0 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(8 5 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(7 11 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(8 4 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(8 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(7 10 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(6 4 -1 -1 -1)"
         "(5 5 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(8 10 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(6 3 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(11 2 -1 -1 -1)"
         "(11 10 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(7 5 -1 -1 -1)"
         "(5 3 -1 -1 -1)"
         "(6 5 -1 -1 -1)"
         "(6 4 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(6 5 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(7 11 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(8 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(8 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(7 8 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(6 3 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(13 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(5 3 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(10 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(6 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(5 3 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(11 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(35 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(7 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(7 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(18 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(51 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(10 8 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(10 3 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(22 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(6 9 -1 -1 -1)"
         "(5 2 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(5 4 -1 -1 -1)"
         "(30 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(17 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(12 10 -1 -1 -1)"
         "(6 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(16 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(13 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(68 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(7 7 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(5 1 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(6 0 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(5 1 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(7 9 -1 -1 -1)"
         "(8 6 -1 -1 -1)"
         "(5 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(7 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(6 1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(12 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(6 2 -1 -1 -1)"
         "(7 8 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(11 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(5 1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(8 9 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(19 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(10 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(6 9 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(11 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(5 4 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(7 11 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(7 8 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(5 2 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(7 2 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(6 2 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(5 3 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(12 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(6 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(5 2 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(5 10 -1 -1 -1)"))
       (:labls
        (:list
         "(24 -1 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(5 0 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(15 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(10 10 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(5 3 -1 -1 -1)"
         "(7 0 -1 -1 -1)"
         "(7 6 -1 -1 -1)"
         "(6 4 -1 -1 -1)"
         "(10 2 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(11 7 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(8 9 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(13 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(7 6 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(14 5 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(5 5 -1 -1 -1)"
         "(8 5 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(8 3 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(5 6 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(6 9 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(5 4 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(9 3 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(5 5 -1 -1 -1)"
         "(9 7 -1 -1 -1)"
         "(5 2 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(7 11 -1 -1 -1)"
         "(7 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(8 4 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(7 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(6 4 -1 -1 -1)"
         "(5 5 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(7 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(10 10 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(6 3 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(10 2 -1 -1 -1)"
         "(11 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(8 5 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(7 5 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(19 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(18 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(5 2 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(11 0 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(8 5 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(7 11 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(8 4 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(8 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(7 10 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(6 4 -1 -1 -1)"
         "(5 5 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(8 10 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(6 3 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(11 2 -1 -1 -1)"
         "(11 10 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(7 5 -1 -1 -1)"
         "(5 3 -1 -1 -1)"
         "(6 5 -1 -1 -1)"
         "(6 4 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(6 5 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(7 11 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(8 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(8 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(7 8 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(6 3 -1 -1 -1)"
         "(2 5 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(13 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(5 3 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(10 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(6 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(5 3 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(11 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(35 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(7 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(7 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(18 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(51 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(10 8 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(10 3 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(22 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(6 9 -1 -1 -1)"
         "(5 2 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(5 4 -1 -1 -1)"
         "(30 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(17 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(12 10 -1 -1 -1)"
         "(6 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 3 -1 -1 -1)"
         "(16 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(13 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(68 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(7 7 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(14 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(5 1 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(6 0 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(5 1 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(7 9 -1 -1 -1)"
         "(8 6 -1 -1 -1)"
         "(5 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(5 9 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(7 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(6 1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(12 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(3 3 -1 -1 -1)"
         "(3 0 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(6 2 -1 -1 -1)"
         "(7 8 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(11 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(7 -1 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(5 8 -1 -1 -1)"
         "(5 1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(8 9 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(19 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(8 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(10 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(6 8 -1 -1 -1)"
         "(6 9 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(11 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 3 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(3 4 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(9 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 10 -1 -1 -1)"
         "(3 5 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(3 6 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(6 -1 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(4 11 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 6 -1 -1 -1)"
         "(2 4 -1 -1 -1)"
         "(2 1 -1 -1 -1)"
         "(3 1 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 10 -1 -1 -1)"
         "(2 9 -1 -1 -1)"
         "(5 4 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(7 11 -1 -1 -1)"
         "(5 -1 -1 -1 -1)"
         "(7 8 -1 -1 -1)"
         "(6 7 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(5 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(2 2 -1 -1 -1)"
         "(2 0 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(5 2 -1 -1 -1)"
         "(4 10 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(4 1 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(7 2 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 8 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 9 -1 -1 -1)"
         "(6 2 -1 -1 -1)"
         "(4 0 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(5 3 -1 -1 -1)"
         "(5 7 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(2 7 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 5 -1 -1 -1)"
         "(6 10 -1 -1 -1)"
         "(12 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(4 4 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 7 -1 -1 -1)"
         "(6 11 -1 -1 -1)"
         "(3 8 -1 -1 -1)"
         "(4 6 -1 -1 -1)"
         "(4 -1 -1 -1 -1)"
         "(4 7 -1 -1 -1)"
         "(2 11 -1 -1 -1)"
         "(2 8 -1 -1 -1)"
         "(3 11 -1 -1 -1)"
         "(2 -1 -1 -1 -1)"
         "(3 10 -1 -1 -1)"
         "(5 2 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(4 2 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(3 9 -1 -1 -1)"
         "(3 2 -1 -1 -1)"
         "(5 10 -1 -1 -1)"))))))
   (:id 18))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 442)
   (:y 459)
   (:w 167)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.3151020407676697D0
       0.41455078125D0
       0.5224196910858154D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "OutputTuto7")
   (:id 19))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 526)
   (:y 95)
   (:w 160)
   (:h 32)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "1_mem")
   (:id 20))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "name_output_folder")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (515 467)) (:position (63 92)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 357)
       (:y 165)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 336)
       (:y 165)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
       (:group-id nil)
       (:name "input 3")
       (:x 294)
       (:y 165)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 203)
       (:y 325)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 4) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 420)
       (:y 163)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference format)
       (:group-id nil)
       (:name "format")
       (:x 252)
       (:y 215)
       (:w 125)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "DESTINATION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTROL-STRING")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "format-arguments")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "format-arguments")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "format-arguments")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "format-arguments")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 152)
       (:y 172)
       (:w 118)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "~a_~a_[~A][~a]")
       (:id 6))
      (:box
       (:type :function)
       (:reference (:symbol "OM-CREATE-DIRECTORY" "OM-API"))
       (:group-id nil)
       (:name "om-create-directory")
       (:x 203)
       (:y 270)
       (:w 142)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "PATHNAME")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-local-dyci2-path")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (folder results_subfolder) "
           "  (namestring "
           "   (merge-pathnames "
           "   (string+ folder \"Results/\" results_subfolder \"/\") "
           "    ;(om-user-home)"
           "    )))"
           ""))))
       (:group-id nil)
       (:name "make-local-dyci2-path")
       (:x 196)
       (:y 244)
       (:w 155)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "FOLDER")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "RESULTS_SUBFOLDER")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference format)
       (:group-id nil)
       (:name "format")
       (:x 228)
       (:y 126)
       (:w 80)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "DESTINATION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTROL-STRING")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "format-arguments")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "format-arguments")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "format-arguments")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "format-arguments")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "format-arguments")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference split)
       (:group-id nil)
       (:name "split")
       (:x 240)
       (:y 76)
       (:w 100)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil))
        (:output (:name "out2") (:reactive nil))
        (:output (:name "out3") (:reactive nil))
        (:output (:name "out4") (:reactive nil)))
       (:id 10))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 130)
       (:y 50)
       (:w 162)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "(dur=~a)(pitch=~a)(int=~a)")
       (:id 11)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 5 :in 5))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 5 :in 4))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 5 :in 2))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 1)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 3 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 0)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 5 :in 3))
       (:attributes (:color nil :style nil :modif (0 -16/47))))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 2)))
      (:connection (:from (:box 10 :out 1)) (:to (:box 9 :in 3)))
      (:connection (:from (:box 10 :out 2)) (:to (:box 9 :in 4)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 9 :in 1))))))
   (:group-id nil)
   (:name "name_output_folder")
   (:x 404)
   (:y 508)
   (:w 145)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 3")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 21))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 726)
   (:y 319)
   (:w 53)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 50)
   (:id 22))
  (:comment
   (:x 724)
   (:y 301)
   (:w 82)
   (:h 25)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Length")
   (:id 23))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "analysis-scenario-corpus-files")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (478 538)) (:position (42 69)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 231)
       (:y 182)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 281)
       (:y 182)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
       (:group-id nil)
       (:name "input 3")
       (:x 256)
       (:y 54)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 181)
       (:y 293)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 4) (:name "input 3") (:doc "")))
       (:group-id nil)
       (:name "input 3")
       (:x 371)
       (:y 51)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "loop-process-dataset")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 1)
             (:name "lab_files")
             (:doc "")))
           (:group-id nil)
           (:name "lab_files")
           (:x 327)
           (:y 65)
           (:w 66)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :optional)
             (:name "internal input value")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "mem") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "mem")
           (:x 279)
           (:y 467)
           (:w 49)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "list_activation_labels")
             (:doc "")))
           (:group-id nil)
           (:name "list_activation_labels")
           (:x 411)
           (:y 76)
           (:w 141)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 3)
             (:name "function_process_labels")
             (:doc "")))
           (:group-id nil)
           (:name "function_process_labels")
           (:x 588)
           (:y 76)
           (:w 161)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :object)
           (:reference textbuffer)
           (:group-id nil)
           (:name "TEXTBUFFER")
           (:x 219)
           (:y 176)
           (:w 148)
           (:h 82)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font
            (:font (:face "Calibri") (:size 12) (:style :italic)))
           (:align :center)
           (:display :mini-view)
           (:showname t)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTENTS")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "CONTENTS") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params (:read-mode :lines-cols))
           (:value
            (:object
             (:class textbuffer)
             (:slots ((:contents nil)))
             (:add-slots ((:input-mode :lines-cols)))))
           (:id 4))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 172)
           (:y 443)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 5))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 275)
           (:y 362)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 6))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 276)
           (:y 423)
           (:w 54)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :function)
           (:reference mapcar)
           (:group-id nil)
           (:name "mapcar")
           (:x 448)
           (:y 304)
           (:w 78)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FUNCTION")
             (:value box)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LIST")
             (:value name)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "select-labels")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (lines list_activation_labels)"
               "  (loop for line in lines "
               "        collect (append "
               "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
               "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
               "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
               "                 ;(list (- (second line) (first line)))"
               "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
               "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
               "                       collect (nth (+ i 1) line)"
               "                       )"
               "                 )"
               "        into labels"
               "        finally return labels"
               "        )"
               "  )"
               ""))))
           (:group-id nil)
           (:name "select-labels")
           (:x 438)
           (:y 264)
           (:w 115)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "LINES")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LIST_ACTIVATION_LABELS")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 182)
           (:y 122)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 10)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 4 :out 1)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 6 :out 1)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 1)))
          (:connection
           (:from (:box 10 :out 0))
           (:to (:box 4 :in 0))))))
       (:group-id nil)
       (:name "loop-process-dataset")
       (:x 181)
       (:y 232)
       (:w 150)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "lab_files")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "list_activation_labels")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "function_process_labels")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "mem") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference (:symbol "OM-DIRECTORY" "OM-API"))
       (:group-id nil)
       (:name "om-directory")
       (:x 165)
       (:y 184)
       (:w 105)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "PATH")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "type")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 278)
       (:y 140)
       (:w 100)
       (:h 30)
       (:color
        (:color-or-nil
         (:color
          (:color
           0.030046656727790833D0
           0.24989540874958038D0
           0.4119427800178528D0
           0.5019608))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "seg_desc")
       (:id 7))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-local-dyci2-path")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (folder corpus_subfolder) "
           "  (namestring "
           "   (merge-pathnames "
           "    (string+ folder \"Corpus/\" corpus_subfolder \"/\") "
           "    ;(om-user-home)"
           "    )))"
           "  "))))
       (:group-id nil)
       (:name "make-local-dyci2-path")
       (:x 178)
       (:y 104)
       (:w 155)
       (:h 29)
       (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "FOLDER")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CORPUS_SUBFOLDER")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 5 :in 1))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 5 :in 2))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 8 :in 1))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 8 :in 0)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 3 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 6 :in 1))
       (:attributes (:color nil :style nil :modif (0 19/100))))
      (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 0))))))
   (:group-id nil)
   (:name "analysis-scenario-corpus-files")
   (:x 446)
   (:y 203)
   (:w 196)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 3")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 3")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 24))
  (:comment
   (:x 607)
   (:y 350)
   (:w 124)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font
      (:font (:face "Helvetica") (:size 12) (:style :bold :italic)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Scenario generator")
   (:id 25))
  (:comment
   (:x 723)
   (:y 214)
   (:w 276)
   (:h 42)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "3) Set parameters to generate underlying scenarios")
   (:id 26))
  (:comment
   (:x 527)
   (:y 40)
   (:w 244)
   (:h 42)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "2) Select a \"scenario corpus\" (markers and labels in text files)")
   (:id 27))
  (:comment
   (:x 24)
   (:y 2)
   (:w 853)
   (:h 30)
   (:fgcolor nil)
   (:bgcolor
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.48235294))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 18) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "OM-DYCI2 - Advanced tutorial 7: Chaining agents - automatic generation of underlying scenarios")
   (:id 28))
  (:comment
   (:x 13)
   (:y 697)
   (:w 1168)
   (:h 74)
   (:fgcolor nil)
   (:bgcolor
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.48235294))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 18) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "OM-DYCI2 - Advanced tutorial 2: AUTOMATIC GENERATION OF EVOLUTIVE SCENARIOS ON THE WHOLE SCENARIO DIRECTORY
- an evolutive scenario [length determined at step 4) max continuity defined at step 5)] generated on the whole directory
- the events in the resulting voices are stretched so that all the tracks are syncronized on track 1 (see patch Cb)")
   (:id 29))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "this_patch_parent_directory")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omselfin) (:index 0) (:name "BOX") (:doc "")))
       (:group-id nil)
       (:name "BOX")
       (:x 127)
       (:y 58)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out
         (:type omout)
         (:name "this_patch_parent_directory")
         (:index 1)
         (:doc "")))
       (:group-id nil)
       (:name "this_patch_parent_directory")
       (:x 60)
       (:y 247)
       (:w 182)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :function)
       (:reference mypathname)
       (:group-id nil)
       (:name "mypathname")
       (:x 97)
       (:y 136)
       (:w 107)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OMPERSISTANTOBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference container)
       (:group-id nil)
       (:name "container")
       (:x 107)
       (:y 103)
       (:w 87)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OMBOX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference directory-namestring)
       (:group-id nil)
       (:name "directory-namestring")
       (:x 77)
       (:y 193)
       (:w 147)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 1 :in 0))))))
   (:group-id nil)
   (:name "this_patch_parent_directory")
   (:x 801)
   (:y 88)
   (:w 186)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :value)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs
    (:output (:name "this_patch_parent_directory") (:reactive nil)))
   (:id 30))
  (:box
   (:type :function)
   (:reference debug-dyci2)
   (:group-id nil)
   (:name "debug-dyci2")
   (:x 888)
   (:y 2)
   (:w 106)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 31)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 15 :in 6)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 15 :in 3))
   (:attributes (:color nil :style nil :modif (0 0.43021637))))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 12 :in 2))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 21 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif (0 0.45))))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 9 :in 1))
   (:attributes (:color nil :style nil :modif (0 -55/1026))))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 12 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif (0 0.4215621))))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 24 :in 0))
   (:attributes
    (:color
     (:color 0.2 0.4 0.5 1.0)
     :style
     nil
     :modif
     (0 0.34658587))))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 12 :in 1))
   (:attributes
    (:color
     (:color 0.2 0.4 0.5 1.0)
     :style
     nil
     :modif
     (0 -145914048923/730867557420))))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 24 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif (0 -335/1044))))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 15 :in 5))
   (:attributes (:color nil :style nil :modif (0 0.45))))
  (:connection
   (:from (:box 12 :out 1))
   (:to (:box 13 :in 1))
   (:attributes (:color nil :style nil :modif (0 5/32))))
  (:connection
   (:from (:box 12 :out 2))
   (:to (:box 13 :in 2))
   (:attributes (:color nil :style nil :modif (0 -5/32))))
  (:connection (:from (:box 13 :out 0)) (:to (:box 15 :in 4)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 15 :in 2))
   (:attributes (:color nil :style nil :modif (0 -2/17))))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 15 :in 0))
   (:attributes (:color nil :style nil :modif (0 -19955/53592))))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 21 :in 2))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif (99/1952 0))))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 21 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif (0 0.45))))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 24 :in 2))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 15 :in 7)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 15 :in 1))
   (:attributes (:color nil :style nil :modif (0 -155953/439128))))
  (:connection (:from (:box 24 :out 0)) (:to (:box 18 :in 1)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 18 :in 2)))
  (:connection (:from (:box 30 :out 0)) (:to (:box 24 :in 3)))
  (:connection (:from (:box 30 :out 0)) (:to (:box 12 :in 3)))
  (:connection (:from (:box 30 :out 0)) (:to (:box 21 :in 3)))))