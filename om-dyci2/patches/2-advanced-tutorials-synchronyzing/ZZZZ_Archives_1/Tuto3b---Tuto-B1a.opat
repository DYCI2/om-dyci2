
(:patch
 (:name "Tuto3b---Tuto-B1a")
 (:doc "")
 (:info
  (:created "2018/10/12 13:57:27")
  (:modified "2021/07/09 15:14:35")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1672 1005)) (:position (8 23)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 141)
   (:y 629)
   (:w 53)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 50)
   (:id 0))
  (:comment
   (:x 141)
   (:y 614)
   (:w 177)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "4) SET LENGTH SCENARIOS")
   (:id 1))
  (:comment
   (:x 174)
   (:y 657)
   (:w 209)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "5) SET MAX CONTINUITY FOR THE SCENARIO")
   (:id 2))
  (:comment
   (:x 1187)
   (:y 105)
   (:w 305)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "3) SET THE SCENARIO GENERATION DIRECTORY
(then loop : 1 file --> 1 scenario)")
   (:id 3))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 670)
   (:y 616)
   (:w 38)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 40)
   (:id 4))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 173)
   (:y 688)
   (:w 201)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 50)
   (:id 5))
  (:comment
   (:x 275)
   (:y 718)
   (:w 275)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "6) SET MAX CONTINUITIES FOR THE VOICES (LOOP REPEATED FOR EACH SCENARIO)")
   (:id 6))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 277)
   (:y 751)
   (:w 356)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 50 10 8 5 3 2))
   (:id 7))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-scenarios-with-stretch_2")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (1110 723)) (:position (0 23)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "QUERY") (:doc "")))
       (:group-id nil)
       (:name "QUERY")
       (:x 0)
       (:y 42)
       (:w 104)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "LENGTH") (:doc "")))
       (:group-id nil)
       (:name "LENGTH")
       (:x 361)
       (:y 15)
       (:w 71)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "CONTINUITY-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "CONTINUITY-LIST")
       (:x 197)
       (:y 18)
       (:w 125)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 445)
       (:y 554)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "VOICE-MAX-CONT-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "VOICE-MAX-CONT-LIST")
       (:x 424)
       (:y 36)
       (:w 157)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "VOICEGENERATOR")
         (:doc "")))
       (:group-id nil)
       (:name "VOICEGENERATOR")
       (:x 561)
       (:y 54)
       (:w 135)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "SOUND_DB") (:doc "")))
       (:group-id nil)
       (:name "SOUND_DB")
       (:x 603)
       (:y 118)
       (:w 89)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "XFADE") (:doc "")))
       (:group-id nil)
       (:name "XFADE")
       (:x 546)
       (:y 131)
       (:w 62)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "RES_DIR") (:doc "")))
       (:group-id nil)
       (:name "RES_DIR")
       (:x 517)
       (:y 15)
       (:w 74)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "list_dur") (:doc "")))
       (:group-id nil)
       (:name "list_dur")
       (:x 849)
       (:y 88)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 337)
       (:y 88)
       (:w 111)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 367)
       (:y 122)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "generate_and_write_variations_with_stretch")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size (1271 790)) (:position (0 23)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "len_scen") (:doc "")))
           (:group-id nil)
           (:name "len_scen")
           (:x 657)
           (:y 206)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 324)
           (:y 740)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "cont_scen")
             (:doc "")))
           (:group-id nil)
           (:name "cont_scen")
           (:x 741)
           (:y 210)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "cont_gen") (:doc "")))
           (:group-id nil)
           (:name "cont_gen")
           (:x 393)
           (:y 41)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "path_output_directory")
             (:doc "")))
           (:group-id nil)
           (:name "path_output_directory")
           (:x 822)
           (:y 311)
           (:w 148)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "xfade") (:doc "")))
           (:group-id nil)
           (:name "xfade")
           (:x 277)
           (:y 353)
           (:w 51)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 6) (:name "query") (:doc "")))
           (:group-id nil)
           (:name "query")
           (:x 305)
           (:y 269)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 7)
             (:name "GENERATOR")
             (:doc "")))
           (:group-id nil)
           (:name "GENERATOR")
           (:x 77)
           (:y 112)
           (:w 98)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 8)
             (:name "snd_database")
             (:doc "")))
           (:group-id nil)
           (:name "snd_database")
           (:x 6)
           (:y 341)
           (:w 104)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 9) (:name "list_dur") (:doc "")))
           (:group-id nil)
           (:name "list_dur")
           (:x 1088)
           (:y 88)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "remix")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size (1263 1005)) (:position (0 23)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "SOUNDS")
                 (:doc "")))
               (:group-id nil)
               (:name "SOUNDS")
               (:x 38)
               (:y 145)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "SEGMENTS")
                 (:doc "")))
               (:group-id nil)
               (:name "SEGMENTS")
               (:x 156)
               (:y 20)
               (:w 89)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "CROSSFADE")
                 (:doc "")))
               (:group-id nil)
               (:name "CROSSFADE")
               (:x 414)
               (:y 68)
               (:w 103)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "list_dur")
                 (:doc "")))
               (:group-id nil)
               (:name "list_dur")
               (:x 771)
               (:y 32)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "out")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "out")
               (:x 289)
               (:y 663)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "outfile")
                 (:doc "")))
               (:group-id nil)
               (:name "outfile")
               (:x 317)
               (:y 475)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 114)
               (:y 721)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 164)
               (:y 78)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 7))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 115)
               (:y 533)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference split)
               (:group-id nil)
               (:name "split")
               (:x 166)
               (:y 160)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "out1") (:reactive nil))
                (:output (:name "out2") (:reactive nil)))
               (:id 9))
              (:box
               (:type :function)
               (:reference om+)
               (:group-id nil)
               (:name "om+")
               (:x 220)
               (:y 280)
               (:w 62)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 156)
               (:y 281)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 11))
              (:box
               (:type :function)
               (:reference nth)
               (:group-id nil)
               (:name "nth")
               (:x 39)
               (:y 267)
               (:w 55)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ORIG-N")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ORIG-LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 12))
              (:box
               (:type :function)
               (:reference read-from-string)
               (:group-id nil)
               (:name "read-from-string")
               (:x 134)
               (:y 125)
               (:w 123)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "STRING")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 13))
              (:box
               (:type :function)
               (:reference 1-)
               (:group-id nil)
               (:name "1-")
               (:x 19)
               (:y 234)
               (:w 49)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 308)
               (:y 243)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 2)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 478)
               (:y 274)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-processing)
               (:group-id nil)
               (:name "supervp-processing")
               (:x 99)
               (:y 389)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SRC")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PROCESSINGS")
                 (:value "")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "BEGIN")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "END")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "FFTSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSTEP-OVERSAMP")
                 (:value 8)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOW-TYPE")
                 (:value "hanning")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SHAPE-INVARIANT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PRESERVE-TRANSIENT")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NORMALIZE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "OUTFILE")
                 (:value "out.aiff")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-timestretch)
               (:group-id nil)
               (:name "supervp-timestretch")
               (:x 297)
               (:y 335)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 565)
               (:y 178)
               (:w 46)
               (:h 32)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "in")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 19))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 296)
               (:y 216)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 20))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 559)
               (:y 151)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 21))
              (:comment
               (:x 593)
               (:y 124)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "duration event")
               (:id 22))
              (:comment
               (:x 498)
               (:y 122)
               (:w 87)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "target duration")
               (:id 23))
              (:comment
               (:x 613)
               (:y 183)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "coef stretch")
               (:id 24))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 771)
               (:y 95)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 25))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 114)
               (:y 314)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 26))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 215)
               (:y 312)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 27))
              (:box
               (:type :function)
               (:reference seq)
               (:group-id nil)
               (:name "seq")
               (:x 325)
               (:y 625)
               (:w 57)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OP")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "op+1") (:reactive nil)))
               (:id 28))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 650)
               (:y 591)
               (:w 78)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 29))
              (:box
               (:type :function)
               (:reference (:symbol "OM-DELETE-FILE" "OM-API"))
               (:group-id nil)
               (:name "om-delete-file")
               (:x 571)
               (:y 544)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NAME")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 30))
              (:box
               (:type :function)
               (:reference (:symbol "CONCAT-AUDIOFILES" "DYCI2"))
               (:group-id nil)
               (:name "concat-audiofiles")
               (:x 183)
               (:y 621)
               (:w 128)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FILES")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "crossfade")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "out")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 31)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 12 :in 1)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 20 :in 0))
               (:attributes (:color nil :style nil :modif (0 0))))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 31 :in 1)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 25 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 31 :in 2)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 29 :in 1)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 31 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 16 :in 1))
               (:attributes (:color nil :style nil :modif (0 -0.45))))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 16 :in 0))
               (:attributes
                (:color nil :style nil :modif (0 -1683/4277))))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 27 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 26 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 12 :in 0)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 10 :in 1)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 11 :in 1))
               (:attributes (:color nil :style nil :modif (0 -1/20))))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 21 :in 1))
               (:attributes
                (:color nil :style nil :modif (-221/2622 0))))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 17 :in 1)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 20 :in 1)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 18 :in 0))
               (:attributes (:color nil :style nil :modif (0 -1/27))))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 21 :out 0))
               (:to (:box 19 :in 0)))
              (:connection
               (:from (:box 25 :out 0))
               (:to (:box 21 :in 0)))
              (:connection
               (:from (:box 26 :out 0))
               (:to (:box 17 :in 2)))
              (:connection
               (:from (:box 27 :out 0))
               (:to (:box 17 :in 3)))
              (:connection
               (:from (:box 28 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 29 :out 0))
               (:to (:box 28 :in 1)))
              (:connection
               (:from (:box 30 :out 0))
               (:to (:box 29 :in 0)))
              (:connection
               (:from (:box 31 :out 0))
               (:to (:box 28 :in 0))))))
           (:group-id nil)
           (:name "remix")
           (:x 35)
           (:y 445)
           (:w 105)
           (:h 81)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOUNDS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEGMENTS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CROSSFADE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "list_dur")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "outfile")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 156)
           (:y 147)
           (:w 107)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "max_continuity")
           (:id 11))
          (:box
           (:type :special)
           (:reference loop-for)
           (:group-id nil)
           (:name "for")
           (:x 836)
           (:y 458)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "from")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "to")
             (:value 3)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "by")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 12))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 278)
           (:y 117)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 13))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 177)
           (:y 725)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 14))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 457)
           (:y 362)
           (:w 71)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "path_generated_sequence")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size (623 670)) (:position (126 161)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "name_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "name_scen")
               (:x 103)
               (:y 34)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "path")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "path")
               (:x 230)
               (:y 507)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "len_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "len_scen")
               (:x 222)
               (:y 34)
               (:w 74)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "cont_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_scen")
               (:x 315)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "idtf_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "idtf_gen")
               (:x 417)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "cont_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_gen")
               (:x 500)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 6)
                 (:name "path_output_directory")
                 (:doc "")))
               (:group-id nil)
               (:name "path_output_directory")
               (:x 602)
               (:y 37)
               (:w 148)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value
                  "/Users/nika/Desktop/OM7/OM-DYCI2_Tests/Results/")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :function)
               (:reference concatenate)
               (:group-id nil)
               (:name "concatenate")
               (:x 19)
               (:y 389)
               (:w 500)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "RESULT-TYPE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".aiff")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".wav")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 17)
               (:y 301)
               (:w 47)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value string)
               (:id 8))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 83)
               (:y 339)
               (:w 54)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "Scen")
               (:id 9))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 158)
               (:y 339)
               (:w 40)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_L")
               (:id 10))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 226)
               (:y 339)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 11))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 289)
               (:y 333)
               (:w 53)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "-Gen")
               (:id 12))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 363)
               (:y 333)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 13))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 203)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 299)
               (:y 110)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 401)
               (:y 174)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 525)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:type :function)
               (:reference pathname)
               (:group-id nil)
               (:name "pathname")
               (:x 266)
               (:y 445)
               (:w 91)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "P")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 7 :in 3)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 7 :in 1)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 7 :in 2)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 7 :in 4)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 7 :in 6)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 7 :in 8)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 7 :in 10)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 7 :in 5)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 7 :in 7)))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 7 :in 9)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 7 :in 11)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 1 :in 0))))))
           (:group-id nil)
           (:name "path_generated_sequence")
           (:x 599)
           (:y 520)
           (:w 200)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "name_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "len_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "idtf_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "path_output_directory")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "path") (:reactive nil)))
           (:id 16))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 762)
           (:y 400)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 582)
           (:y 400)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 768)
           (:y 458)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 19))
          (:box
           (:type :function)
           (:reference make-list)
           (:group-id nil)
           (:name "make-list")
           (:x 670)
           (:y 400)
           (:w 86)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIZE")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "initial-element")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 676)
           (:y 458)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 21))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 588)
           (:y 458)
           (:w 65)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 22))
          (:box
           (:type :function)
           (:reference format)
           (:group-id nil)
           (:name "format")
           (:x 578)
           (:y 329)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "DESTINATION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTROL-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 23))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 539)
           (:y 285)
           (:w 73)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "[L~DC~D]")
           (:id 24))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 796)
           (:y 627)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 25))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 739)
           (:y 555)
           (:w 102)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "ITERATION #~D")
           (:id 26))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 825)
           (:y 595)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 27))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 318)
           (:y 639)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 28))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 237)
           (:y 607)
           (:w 100)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "OUTPUT ~A")
           (:id 29))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 347)
           (:y 580)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 30))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "filter-output")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (output) "
               "  (if "
               "      (and (> (length output) 0) (nth 0 output)) "
               "      output "
               "    ;(if "
               "     ;   (and (> (length output) 0) (nth 1 output))"
               "        ;(list \"(1 0 200)\" \"(1 301 600)\")"
               "    (loop for i from 0 to 5 collect \"(1 0 100)\")"
               "      ;)"
               "    )"
               "  )"))))
           (:group-id nil)
           (:name "filter-output")
           (:x 156)
           (:y 316)
           (:w 98)
           (:h 28)
           (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "OUTPUT")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 31))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 119)
           (:y 351)
           (:w 78)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 32))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 524)
           (:y 638)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 33))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 457)
           (:y 604)
           (:w 120)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "original output ~A")
           (:id 34))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 553)
           (:y 579)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 35))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2SETPARAM" "DYCI2"))
           (:group-id nil)
           (:name "dyci2setparam")
           (:x 52)
           (:y 239)
           (:w 116)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PARAMETER")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "VALUE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 36))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2QUERY" "DYCI2"))
           (:group-id nil)
           (:name "dyci2query")
           (:x 157)
           (:y 276)
           (:w 96)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "QUERY")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 37))
          (:box
           (:type :function)
           (:reference om+)
           (:group-id nil)
           (:name "om+")
           (:x 833)
           (:y 507)
           (:w 62)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 38)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 20 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/495))))
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 23 :in 2))
           (:attributes (:color nil :style nil :modif (0 -6/91))))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 17 :in 1))
           (:attributes (:color nil :style nil :modif (0 -131/496))))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 23 :in 3))
           (:attributes (:color nil :style nil :modif (0 17/87))))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 15 :in 0))
           (:attributes (:color nil :style nil :modif (0 -3/41))))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 13 :in 0))
           (:attributes (:color nil :style nil :modif (0 -11/60))))
          (:connection (:from (:box 4 :out 0)) (:to (:box 16 :in 5)))
          (:connection
           (:from (:box 5 :out 0))
           (:to (:box 10 :in 2))
           (:attributes
            (:color nil :style nil :modif (0 -0.09545457))))
          (:connection (:from (:box 6 :out 0)) (:to (:box 37 :in 1)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 36 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 3)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 36 :in 1)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 38 :in 0)))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 16 :in 4))
           (:attributes (:color nil :style nil :modif (0 -1/4))))
          (:connection (:from (:box 13 :out 0)) (:to (:box 36 :in 2)))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 12 :in 1))
           (:attributes
            (:color nil :style nil :modif (0 45973/277033))))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 17 :in 0))
           (:attributes (:color nil :style nil :modif (0 190/429))))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 18 :in 0))
           (:attributes
            (:color nil :style nil :modif (0 26489/59345))))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 20 :in 0))
           (:attributes (:color nil :style nil :modif (0 0.445338))))
          (:connection (:from (:box 16 :out 0)) (:to (:box 10 :in 4)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 19 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 22 :in 0)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 16 :in 2)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 16 :in 1)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 16 :in 0)))
          (:connection (:from (:box 23 :out 0)) (:to (:box 18 :in 1)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 23 :in 1)))
          (:connection
           (:from (:box 25 :out 0))
           (:to (:box 14 :in 1))
           (:attributes (:color nil :style nil :modif (0 -8/77))))
          (:connection (:from (:box 26 :out 0)) (:to (:box 25 :in 0)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 25 :in 1)))
          (:connection
           (:from (:box 28 :out 0))
           (:to (:box 14 :in 3))
           (:attributes (:color nil :style nil :modif (0 14/65))))
          (:connection (:from (:box 29 :out 0)) (:to (:box 28 :in 0)))
          (:connection (:from (:box 30 :out 0)) (:to (:box 28 :in 1)))
          (:connection (:from (:box 31 :out 0)) (:to (:box 32 :in 1)))
          (:connection (:from (:box 31 :out 0)) (:to (:box 35 :in 0)))
          (:connection
           (:from (:box 32 :out 0))
           (:to (:box 10 :in 1))
           (:attributes (:color nil :style nil :modif (0 -3/16))))
          (:connection (:from (:box 32 :out 0)) (:to (:box 30 :in 0)))
          (:connection
           (:from (:box 33 :out 0))
           (:to (:box 14 :in 2))
           (:attributes (:color nil :style nil :modif (0 1/33))))
          (:connection (:from (:box 34 :out 0)) (:to (:box 33 :in 0)))
          (:connection (:from (:box 35 :out 0)) (:to (:box 33 :in 1)))
          (:connection (:from (:box 36 :out 0)) (:to (:box 37 :in 0)))
          (:connection (:from (:box 37 :out 0)) (:to (:box 31 :in 0)))
          (:connection (:from (:box 38 :out 0)) (:to (:box 16 :in 3)))
          (:connection
           (:from (:box 38 :out 0))
           (:to (:box 27 :in 0))))))
       (:group-id nil)
       (:name "generate_and_write_variations_with_stretch")
       (:x 623)
       (:y 328)
       (:w 273)
       (:h 104)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "len_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_gen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "path_output_directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "xfade")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "query")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GENERATOR")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "snd_database")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "list_dur")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 12 :in 5)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 12 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 12 :in 6)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 12 :in 7)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 12 :in 4)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 12 :in 3)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 12 :in 8)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 3 :in 0))))))
   (:group-id nil)
   (:name "loop-scenarios-with-stretch_2")
   (:x 531)
   (:y 794)
   (:w 200)
   (:h 30)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "QUERY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LENGTH")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTINUITY-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE-MAX-CONT-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICEGENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND_DB")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "XFADE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RES_DIR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_dur")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-process-dataset")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (1180 635)) (:position (618 678)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "lab_files") (:doc "")))
       (:group-id nil)
       (:name "lab_files")
       (:x 327)
       (:y 65)
       (:w 66)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "mem") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "mem")
       (:x 279)
       (:y 467)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "list_activation_labels")
         (:doc "")))
       (:group-id nil)
       (:name "list_activation_labels")
       (:x 411)
       (:y 76)
       (:w 141)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "function_process_labels")
         (:doc "")))
       (:group-id nil)
       (:name "function_process_labels")
       (:x 588)
       (:y 76)
       (:w 161)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name "TEXTBUFFER")
       (:x 219)
       (:y 176)
       (:w 148)
       (:h 82)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params (:read-mode :lines-cols))
       (:value
        (:object
         (:class textbuffer)
         (:slots ((:contents nil)))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 4))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 182)
       (:y 122)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 5))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 172)
       (:y 443)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 6))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 275)
       (:y 362)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 276)
       (:y 423)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 448)
       (:y 304)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value box)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value name)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "select-labels")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines list_activation_labels)"
           "  (loop for line in lines "
           "        collect (append "
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
           "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
           "                 ;(list (- (second line) (first line)))"
           "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
           "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
           "                       collect (nth (+ i 1) line)"
           "                       )"
           "                 )"
           "        into labels"
           "        finally return labels"
           "        )"
           "  )"
           ""))))
       (:group-id nil)
       (:name "select-labels")
       (:x 438)
       (:y 264)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST_ACTIVATION_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 4 :out 1)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 7 :out 1)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1))))))
   (:group-id nil)
   (:name "loop-process-dataset")
   (:x 1229)
   (:y 358)
   (:w 150)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "lab_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_activation_labels")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function_process_labels")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "mem") (:reactive nil)))
   (:id 9))
  (:box
   (:type :function)
   (:reference format)
   (:group-id nil)
   (:name "format")
   (:x 1182)
   (:y 693)
   (:w 125)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "DESTINATION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTROL-STRING")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1034)
   (:y 672)
   (:w 118)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "~a_~a_[~A][~a]")
   (:id 11))
  (:box
   (:type :function)
   (:reference file-namestring)
   (:group-id nil)
   (:name "file-namestring")
   (:x 1434)
   (:y 338)
   (:w 117)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "P")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 1294)
   (:y 289)
   (:w 65)
   (:h 42)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 13))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 1231)
   (:y 304)
   (:w 53)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:type :special)
   (:reference iterate)
   (:group-id nil)
   (:name "iterate")
   (:x 617)
   (:y 872)
   (:w 58)
   (:h 42)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.6266593337059021D0
       0.011445105075836182D0
       0.044897355139255524D0
       0.4))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 15))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 1153)
   (:y 396)
   (:w 226)
   (:h 113)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(3 10 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(3 2 0 -1 -1)"
         "(6 8 0 -1 -1)"
         "(5 2 0 -1 -1)"
         "(4 3 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 10 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 11 0 -1 -1)"
         "(5 10 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 10 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(2 9 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 10 1 -1 -1)"
         "(2 11 1 -1 -1)"
         "(3 10 1 -1 -1)"
         "(6 9 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(2 10 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(2 10 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 10 1 -1 -1)"
         "(2 9 1 -1 -1)"
         "(2 11 1 -1 -1)"
         "(4 10 1 -1 -1)"
         "(2 10 1 -1 -1)"
         "(2 8 1 -1 -1)"
         "(5 10 1 -1 -1)"
         "(5 10 1 -1 -1)"
         "(2 11 1 -1 -1)"
         "(3 9 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(4 10 1 -1 -1)"
         "(6 9 0 -1 -1)"
         "(4 10 0 -1 -1)"
         "(3 11 1 -1 -1)"
         "(4 10 1 -1 -1)"
         "(2 10 1 -1 -1)"
         "(3 9 1 -1 -1)"
         "(4 9 1 -1 -1)"
         "(6 9 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 9 1 -1 -1)"
         "(5 10 0 -1 -1)"
         "(2 11 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(2 11 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(8 10 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(6 10 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(4 10 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(3 9 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(5 9 1 -1 -1)"
         "(2 8 1 -1 -1)"
         "(3 8 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(3 10 1 -1 -1)"
         "(6 8 1 -1 -1)"
         "(3 8 1 -1 -1)"
         "(2 7 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 10 1 -1 -1)"
         "(5 10 0 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(3 9 1 -1 -1)"
         "(6 8 1 -1 -1)"
         "(2 8 1 -1 -1)"
         "(5 10 1 -1 -1)"
         "(8 9 1 -1 -1)"
         "(7 9 1 -1 -1)"
         "(3 8 1 -1 -1)"
         "(3 10 1 -1 -1)"
         "(3 9 1 -1 -1)"
         "(5 10 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 10 0 -1 -1)"
         "(4 10 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(2 11 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(3 11 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(6 10 0 -1 -1)"
         "(3 11 0 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"))
       (:labls
        (:list
         "(3 10 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(3 2 0 -1 -1)"
         "(6 8 0 -1 -1)"
         "(5 2 0 -1 -1)"
         "(4 3 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 10 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 11 0 -1 -1)"
         "(5 10 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 10 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(2 9 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 10 1 -1 -1)"
         "(2 11 1 -1 -1)"
         "(3 10 1 -1 -1)"
         "(6 9 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(2 10 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(2 10 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 10 1 -1 -1)"
         "(2 9 1 -1 -1)"
         "(2 11 1 -1 -1)"
         "(4 10 1 -1 -1)"
         "(2 10 1 -1 -1)"
         "(2 8 1 -1 -1)"
         "(5 10 1 -1 -1)"
         "(5 10 1 -1 -1)"
         "(2 11 1 -1 -1)"
         "(3 9 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(4 10 1 -1 -1)"
         "(6 9 0 -1 -1)"
         "(4 10 0 -1 -1)"
         "(3 11 1 -1 -1)"
         "(4 10 1 -1 -1)"
         "(2 10 1 -1 -1)"
         "(3 9 1 -1 -1)"
         "(4 9 1 -1 -1)"
         "(6 9 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 9 1 -1 -1)"
         "(5 10 0 -1 -1)"
         "(2 11 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(2 11 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(8 10 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(6 10 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(4 10 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(3 9 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(5 9 1 -1 -1)"
         "(2 8 1 -1 -1)"
         "(3 8 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(3 10 1 -1 -1)"
         "(6 8 1 -1 -1)"
         "(3 8 1 -1 -1)"
         "(2 7 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 10 1 -1 -1)"
         "(5 10 0 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(3 9 1 -1 -1)"
         "(6 8 1 -1 -1)"
         "(2 8 1 -1 -1)"
         "(5 10 1 -1 -1)"
         "(8 9 1 -1 -1)"
         "(7 9 1 -1 -1)"
         "(3 8 1 -1 -1)"
         "(3 10 1 -1 -1)"
         "(3 9 1 -1 -1)"
         "(5 10 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 10 0 -1 -1)"
         "(4 10 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(2 11 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(3 11 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(6 10 0 -1 -1)"
         "(3 11 0 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"))))))
   (:id 16))
  (:box
   (:type :function)
   (:reference format)
   (:group-id nil)
   (:name "format")
   (:x 222)
   (:y 560)
   (:w 80)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "DESTINATION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTROL-STRING")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 198)
   (:y 279)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 2 20 0 0))
   (:id 18))
  (:box
   (:type :function)
   (:reference split)
   (:group-id nil)
   (:name "split")
   (:x 217)
   (:y 497)
   (:w 100)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "out1") (:reactive nil))
    (:output (:name "out2") (:reactive nil))
    (:output (:name "out3") (:reactive nil))
    (:output (:name "out4") (:reactive nil)))
   (:id 19))
  (:comment
   (:x 159)
   (:y 3)
   (:w 894)
   (:h 118)
   (:fgcolor nil)
   (:bgcolor
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.48235294))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 18) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "OM-DYCI2 B1a: LOOPED AUTOMATIC GENERATION OF SCENARIOS ON SINGLE FILES
- 1st track generated with \"memory = file used to generate the scenario\"
  other tracks are not allowed to use events from the file used to generate the scenario (see patches B2)
- the events are stretched so that all the tracks are syncronized on track 1 (see patch B1b)
")
   (:id 20))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1078)
   (:y 644)
   (:w 335)
   (:h 30)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "B1a")
   (:id 21))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "function_process_label")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (e list_activation_labels) "
       "  (let ("
       "        (div_dur (nth 0 list_activation_labels))"
       "        (mod_12 (nth 1 list_activation_labels))"
       "        (div_intens  (nth 2 list_activation_labels))"
       "        (vc (nth 3 list_activation_labels))"
       "        (nmf (nth 4 list_activation_labels))"
       "        (query_dur (nth 0 e))"
       "        (query_pitch (nth 1 e))"
       "        (query_intens  (nth 2 e))"
       "        (query_vc (nth 3 e))"
       "        (query_nmf (nth 4 e))"
       "        )"
       "    (write-to-string"
       "     (list "
       "      ;duration label"
       "      (if (and (> div_dur 0) (> query_dur -1))"
       "          (round (/ query_dur div_dur)) "
       "        -1)"
       "      ;pitch label"
       "     (if (and (> mod_12 0) (> query_pitch -1))"
       "         (if (= mod_12 2) "
       "             (if (= (round query_pitch) 0) -1 (mod (round query_pitch)12))"
       "           (round query_pitch))"
       "       -1)"
       "      ;intensity label"
       "      (if (and (> div_intens 0)  (> query_intens -1))"
       "          (round (/ query_intens div_intens)) "
       "        -1)"
       "      ;voice casting label"
       "      (if (and (> vc 0)  (> query_vc -1)) "
       "          (round (/ query_vc vc)) "
       "        -1)"
       "      ;nmf label"
       "      (if (and (> nmf 0)  (> query_nmf -1)) "
       "          (round (/ query_nmf nmf)) "
       "        -1)"
       "      )"
       "     )"
       "    ))"))))
   (:group-id nil)
   (:name "function_process_label")
   (:x 296)
   (:y 287)
   (:w 161)
   (:h 28)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.7890212535858154D0
       0.8168872594833374D0
       0.6561802625656128D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input (:type :standard) (:name "E") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST_ACTIVATION_LABELS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:comment
   (:x 574)
   (:y 125)
   (:w 275)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "2) SET THE VOICE GENERATION CORPUS")
   (:id 23))
  (:box
   (:type :function)
   (:reference (:symbol "OM-DIRECTORY" "OM-API"))
   (:group-id nil)
   (:name "om-directory")
   (:x 630)
   (:y 269)
   (:w 105)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATH")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "type") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 751)
   (:y 224)
   (:w 100)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "seg_desc")
   (:id 25))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "make-local-dyci2-path")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (500 500)) (:position (815 433)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (folder corpus_subfolder) "
       "  (namestring "
       "   (merge-pathnames "
       "    (string+ folder \"Corpus/\" corpus_subfolder \"/\") "
       "    ;(om-user-home)"
       "    )))"
       "  "))))
   (:group-id nil)
   (:name "make-local-dyci2-path")
   (:x 578)
   (:y 231)
   (:w 155)
   (:h 29)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "FOLDER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CORPUS_SUBFOLDER")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-process-dataset")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (913 500)) (:position (105 138)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "lab_files") (:doc "")))
       (:group-id nil)
       (:name "lab_files")
       (:x 212)
       (:y 2)
       (:w 66)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "sound") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "sound")
       (:x 229)
       (:y 509)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "mem") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "mem")
       (:x 489)
       (:y 512)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "list_activation_labels")
         (:doc "")))
       (:group-id nil)
       (:name "list_activation_labels")
       (:x 545)
       (:y 6)
       (:w 141)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "labels") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "labels")
       (:x 594)
       (:y 507)
       (:w 53)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "extension_audio_files")
         (:doc "")))
       (:group-id nil)
       (:name "extension_audio_files")
       (:x 717)
       (:y 2)
       (:w 147)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "function_process_label")
         (:doc "")))
       (:group-id nil)
       (:name "function_process_label")
       (:x 956)
       (:y 38)
       (:w 155)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name "TEXTBUFFER")
       (:x 284)
       (:y 115)
       (:w 148)
       (:h 82)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params (:read-mode :lines-cols))
       (:value
        (:object
         (:class textbuffer)
         (:slots ((:contents nil)))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 7))
      (:box
       (:type :object)
       (:reference sound)
       (:group-id nil)
       (:name nil)
       (:x 114)
       (:y 312)
       (:w 300)
       (:h 71)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value :choose-file)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "markers")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "access-from-file")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "markers") (:reactive nil))
        (:output (:name "access-from-file") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class sound)
         (:slots
          ((:onset 0)
           (:duration 0)
           (:n-samples nil)
           (:n-channels nil)
           (:sample-rate nil)
           (:smpl-type :float)
           (:sample-size 16)))
         (:add-slots
          ((:markers nil)
           (:gain 1.0)
           (:access-from-file nil)
           (:file-pathname nil)))))
       (:id 8))
      (:box
       (:type :function)
       (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
       (:group-id nil)
       (:name "om-make-pathname")
       (:x 93)
       (:y 205)
       (:w 145)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :key)
         (:name "directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "name")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "type")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference pathname-name)
       (:group-id nil)
       (:name "pathname-name")
       (:x 97)
       (:y 119)
       (:w 125)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:comment
       (:x 21)
       (:y 324)
       (:w 63)
       (:h 50)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "le même nom mais en .wav")
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-markers")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines processed_labels)"
           "  (loop for i from 0 to (- (length lines) 1)"
           "        collect"
           "         (list"
           "          (sec->ms (first (nth i lines)))"
           "          ;(first (nth i lines))"
           "          (write-to-string (nth i processed_labels))"
           "          )         "
           "         )"
           "  )"
           ""
           ";(lambda (lines list_activation_labels)"
           ";  (loop for line in lines collect"
           ";        (list"
           ";         (sec->ms (first line))"
           ";         (number-to-string (round (fourth line)))"
           ";         )"
           ";        ))"))))
       (:group-id nil)
       (:name "make-markers")
       (:x 271)
       (:y 279)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 213)
       (:y 54)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 13))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 357)
       (:y 461)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 14))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 235)
       (:y 400)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 15))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-memory")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines n processed_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        ;collect (write-to-string (list n (first line) (second line)))"
           "        into mem-segments"
           "        finally return (list mem-segments processed_labels))"
           ")"
           "                                 "
           "#|"
           "(lambda (lines n  list_activation_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        into mem-segments"
           "        ;collect (write-to-string (round (/ (fourth line) div_intens)))"
           "        ;collect (write-to-string (list (round (/ (fourth line) div_intens))))"
           "        collect (write-to-string"
           "                 (list "
           "                 ; duree"
           "                  (if (> div_dur 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) div_dur)) -1)"
           "                 ;pitch"
           "                  (if (= mod_12 1) "
           "                      (if (= (round (third line)) 0) -1 (mod (round (third line))12))"
           "                    (if (< mod_12 0) -1 (round (third line)))"
           "                    )"
           "                 ;inten"
           "                  (if (> div_intens 0) (round (/ (fourth line) div_intens)) -1)"
           "                 ;voice casting"
           "                  (if (> vc 0) (round (/ (fifth line) vc)) -1)"
           "                 ;nmf"
           "                  (if (> nmf 0) (round (/ (sixth line) nmf)) -1)"
           "                 ))"
           "        into labels"
           "        finally return (list mem-segments labels)))"
           "|#"
           "                                 "))))
       (:group-id nil)
       (:name "make-memory")
       (:x 461)
       (:y 281)
       (:w 200)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 485)
       (:y 387)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 17))
      (:box
       (:type :special)
       (:reference loop-for)
       (:group-id nil)
       (:name "for")
       (:x 508)
       (:y 92)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "from")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "to")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 18))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 375)
       (:y 51)
       (:w 71)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 502)
       (:y 57)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 20))
      (:comment
       (:x 556)
       (:y 102)
       (:w 47)
       (:h 22)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "#sound")
       (:id 21))
      (:box
       (:type :function)
       (:reference split)
       (:group-id nil)
       (:name "split")
       (:x 554)
       (:y 335)
       (:w 59)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 22))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 592)
       (:y 388)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 23))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 486)
       (:y 468)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 593)
       (:y 462)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 25))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "select-labels")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines list_activation_labels)"
           "  (loop for line in lines "
           "        collect (append "
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
           "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
           "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
           "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
           "                       collect (nth (+ i 1) line)"
           "                       )"
           "                 )"
           "        into labels"
           "        finally return labels"
           "        )"
           "  )"
           ""))))
       (:group-id nil)
       (:name "select-labels")
       (:x 767)
       (:y 243)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST_ACTIVATION_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 26))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 753)
       (:y 294)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value box)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value name)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 27))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "value box")
       (:x 399)
       (:y 280)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value t)
       (:id 28)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 0 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 26 :in 1)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 9 :in 2))
       (:attributes (:color nil :style nil :modif (0 1/3))))
      (:connection (:from (:box 6 :out 0)) (:to (:box 27 :in 0)))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/92))))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 16 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/94))))
      (:connection (:from (:box 7 :out 1)) (:to (:box 26 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 15 :out 1)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 22 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 17 :out 1)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 16 :in 1)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 22 :out 1)) (:to (:box 23 :in 0)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 14 :in 2)))
      (:connection (:from (:box 23 :out 1)) (:to (:box 25 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 27 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 16 :in 2)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 8 :in 2))))))
   (:group-id nil)
   (:name "loop-process-dataset")
   (:x 656)
   (:y 357)
   (:w 150)
   (:h 39)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "lab_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_activation_labels")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "extension_audio_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function_process_label")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "sound") (:reactive nil))
    (:output (:name "mem") (:reactive nil))
    (:output (:name "labels") (:reactive nil)))
   (:id 27))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 571)
   (:y 183)
   (:w 155)
   (:h 31)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "1_scen")
   (:id 28))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 753)
   (:y 261)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "wav")
   (:id 29))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 601)
   (:y 398)
   (:w 231)
   (:h 102)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(1 800 1152)"
         "(1 1152 1514)"
         "(1 1514 2030)"
         "(1 2030 2308)"
         "(1 2308 2684)"
         "(1 2684 3194)"
         "(1 3194 3826)"
         "(1 3826 4128)"
         "(1 4128 4720)"
         "(1 4720 4992)"
         "(1 4992 5230)"
         "(1 5230 5522)"
         "(1 5522 5746)"
         "(1 5746 6136)"
         "(1 6136 6642)"
         "(1 6642 7110)"
         "(1 7110 7584)"
         "(1 7584 7990)"
         "(1 7990 8220)"
         "(1 8220 8582)"
         "(1 8582 8788)"
         "(1 8788 9170)"
         "(1 9170 9642)"
         "(1 9642 10022)"
         "(1 10022 10396)"
         "(1 10396 10690)"
         "(1 10690 10988)"
         "(1 10988 11682)"
         "(1 11682 11976)"
         "(1 11976 12314)"
         "(1 12314 12534)"
         "(1 12534 12870)"
         "(1 12870 13134)"
         "(1 13134 13426)"
         "(1 13426 13782)"
         "(1 13782 14180)"
         "(1 14180 14436)"
         "(1 14436 14842)"
         "(1 14842 15166)"
         "(1 15166 16078)"
         "(2 2870 3212)"
         "(2 3212 3600)"
         "(2 3600 3902)"
         "(2 3902 4154)"
         "(2 4154 4718)"
         "(2 4718 5220)"
         "(2 5220 5532)"
         "(2 5532 5824)"
         "(2 5824 6594)"
         "(2 6594 7054)"
         "(2 7054 7374)"
         "(2 7374 7730)"
         "(2 7730 7972)"
         "(2 7972 8642)"
         "(2 8642 8882)"
         "(2 8882 9134)"
         "(2 9134 9630)"
         "(2 9630 9882)"
         "(2 9882 10268)"
         "(2 10268 10950)"
         "(2 10950 11570)"
         "(2 11570 11838)"
         "(2 11838 12114)"
         "(2 12114 12342)"
         "(2 12342 12616)"
         "(2 12616 13086)"
         "(2 13086 13510)"
         "(2 13510 13744)"
         "(2 13744 13994)"
         "(2 13994 14434)"
         "(2 14434 14650)"
         "(2 14650 14876)"
         "(2 14876 15092)"
         "(2 15092 15492)"
         "(2 15492 16170)"
         "(2 16170 16488)"
         "(2 16488 17044)"
         "(2 17044 17296)"
         "(2 17296 17676)"
         "(2 17676 18058)"
         "(2 18058 18438)"
         "(2 18438 18682)"
         "(2 18682 19008)"
         "(2 19008 19398)"
         "(2 19398 19866)"
         "(2 19866 20094)"
         "(2 20094 21574)"
         "(3 122 638)"
         "(3 638 994)"
         "(3 994 1846)"
         "(3 1846 2186)"
         "(3 2186 2510)"
         "(3 2510 2688)"
         "(3 2688 3166)"
         "(3 3166 3400)"
         "(3 3400 3994)"
         "(3 3994 4576)"
         "(3 4576 4880)"
         "(3 4880 5094)"
         "(3 5094 5414)"
         "(3 5414 5714)"
         "(3 5714 6374)"
         "(3 6374 6950)"
         "(3 6950 7254)"
         "(3 7254 7680)"
         "(3 7680 8204)"
         "(3 8204 8578)"
         "(3 8578 8990)"
         "(3 8990 9456)"
         "(3 9456 9804)"
         "(3 9804 11150)"
         "(3 11150 11776)"
         "(3 11776 12212)"
         "(3 12212 12592)"
         "(3 12592 13206)"
         "(3 13206 13710)"
         "(3 13710 14454)"
         "(3 14454 14792)"
         "(3 14792 15712)"
         "(3 15712 15960)"
         "(3 15960 16932)"
         "(3 16932 17236)"
         "(3 17236 17912)"
         "(3 17912 18222)"
         "(3 18222 18556)"
         "(3 18556 19044)"
         "(3 19044 19522)"
         "(3 19522 19744)"
         "(3 19744 20122)"
         "(3 20122 20592)"
         "(3 20592 21026)"
         "(3 21026 21360)"
         "(3 21360 21850)"
         "(3 21850 22404)"
         "(3 22404 22754)"
         "(3 22754 23128)"
         "(3 23128 25096)"
         "(3 25096 25848)"
         "(3 25848 26266)"
         "(3 26266 26596)"
         "(3 26596 27002)"
         "(3 27002 27268)"
         "(3 27268 27518)"
         "(3 27518 28006)"
         "(3 28006 28236)"
         "(3 28236 28506)"
         "(3 28506 29452)"
         "(3 29452 29684)"
         "(3 29684 29994)"
         "(3 29994 30220)"
         "(3 30220 30430)"
         "(3 30430 30960)"
         "(3 30960 31658)"
         "(3 31658 32066)"
         "(3 32066 32504)"
         "(3 32504 32850)"
         "(3 32850 33054)"
         "(3 33054 33298)"
         "(3 33298 33658)"
         "(3 33658 33906)"
         "(3 33906 34174)"
         "(3 34174 34790)"
         "(3 34790 35272)"
         "(3 35272 35734)"
         "(3 35734 36340)"
         "(3 36340 36530)"
         "(3 36530 36774)"
         "(3 36774 37050)"
         "(3 37050 37584)"
         "(3 37584 38184)"
         "(3 38184 38592)"
         "(3 38592 38860)"
         "(3 38860 39112)"
         "(3 39112 39518)"
         "(3 39518 40098)"
         "(3 40098 40684)"
         "(3 40684 41214)"
         "(3 41214 41872)"
         "(3 41872 42390)"
         "(3 42390 42840)"
         "(3 42840 43080)"
         "(3 43080 43372)"
         "(3 43372 43860)"
         "(3 43860 44244)"
         "(3 44244 44588)"
         "(3 44588 44892)"
         "(3 44892 45356)"
         "(3 45356 46144)"
         "(3 46144 46400)"
         "(3 46400 46674)"
         "(3 46674 46928)"
         "(3 46928 47220)"
         "(3 47220 47526)"
         "(3 47526 48458)"
         "(3 48458 48702)"
         "(3 48702 48946)"
         "(3 48946 49390)"
         "(3 49390 49630)"
         "(3 49630 49804)"
         "(3 49804 50248)"
         "(3 50248 50668)"
         "(3 50668 51066)"
         "(3 51066 51314)"
         "(3 51314 51730)"
         "(3 51730 52222)"
         "(3 52222 52552)"
         "(3 52552 52868)"
         "(3 52868 53112)"
         "(3 53112 53398)"
         "(3 53398 53822)"
         "(3 53822 54296)"
         "(3 54296 54752)"
         "(3 54752 54988)"
         "(3 54988 55550)"
         "(3 55550 55968)"
         "(3 55968 56208)"
         "(3 56208 56484)"
         "(3 56484 56842)"
         "(3 56842 57082)"
         "(3 57082 57828)"
         "(3 57828 58258)"
         "(4 162 980)"
         "(4 980 1550)"
         "(4 1550 2190)"
         "(4 2190 2478)"
         "(4 2478 2692)"
         "(4 2692 3072)"
         "(4 3072 3302)"
         "(4 3302 3542)"
         "(4 3542 3994)"
         "(4 3994 4596)"
         "(4 4596 5092)"
         "(4 5092 5424)"
         "(4 5424 5712)"
         "(4 5712 6106)"
         "(4 6106 6446)"
         "(4 6446 7124)"
         "(4 7124 7510)"
         "(4 7510 7774)"
         "(4 7774 8308)"
         "(4 8308 9048)"
         "(4 9048 9468)"
         "(4 9468 9984)"
         "(4 9984 10254)"
         "(4 10254 10614)"
         "(4 10614 11034)"
         "(4 11034 11440)"
         "(4 11440 11780)"
         "(4 11780 12222)"
         "(4 12222 12570)"
         "(4 12570 13026)"
         "(4 13026 13310)"
         "(4 13310 13590)"
         "(4 13590 13932)"
         "(4 13932 14280)"
         "(4 14280 14558)"
         "(4 14558 14866)"
         "(4 14866 15348)"
         "(4 15348 15602)"
         "(4 15602 15994)"
         "(4 15994 16470)"
         "(4 16470 16834)"
         "(4 16834 17188)"
         "(4 17188 17726)"
         "(4 17726 18056)"
         "(4 18056 19540)"
         "(4 19540 19996)"
         "(4 19996 20456)"
         "(4 20456 20956)"
         "(4 20956 21360)"
         "(4 21360 21618)"
         "(4 21618 21982)"
         "(4 21982 22192)"
         "(4 22192 22952)"
         "(4 22952 23646)"
         "(4 23646 24182)"
         "(4 24182 24516)"
         "(4 24516 25018)"
         "(4 25018 25356)"
         "(4 25356 25910)"
         "(4 25910 26288)"
         "(4 26288 26524)"
         "(4 26524 26760)"
         "(4 26760 27004)"
         "(4 27004 27268)"
         "(4 27268 27752)"
         "(4 27752 28006)"
         "(4 28006 28302)"
         "(4 28302 28864)"
         "(4 28864 29400)"
         "(4 29400 29730)"
         "(4 29730 30224)"
         "(4 30224 30552)"
         "(4 30552 30814)"
         "(4 30814 31216)"
         "(4 31216 31586)"
         "(4 31586 32082)"
         "(4 32082 32532)"
         "(4 32532 32824)"
         "(4 32824 33234)"
         "(4 33234 33780)"
         "(4 33780 34186)"
         "(4 34186 34842)"
         "(4 34842 35208)"
         "(4 35208 35412)"
         "(4 35412 35684)"
         "(4 35684 35920)"
         "(4 35920 36306)"
         "(4 36306 36530)"
         "(4 36530 36768)"
         "(4 36768 37046)"
         "(4 37046 37298)"
         "(4 37298 37530)"
         "(4 37530 37944)"
         "(4 37944 38432)"
         "(4 38432 38666)"
         "(4 38666 38970)"
         "(4 38970 39360)"
         "(4 39360 40016)"
         "(4 40016 40350)"))
       (:labls
        (:list
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(9 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(8 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(2 -1 3 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(2 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(2 -1 3 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(2 -1 3 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(7 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(2 -1 3 -1 -1)"
         "(3 -1 4 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(5 -1 3 -1 -1)"
         "(2 -1 4 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(5 10 0 -1 -1)"
         "(4 10 0 -1 -1)"
         "(9 10 1 -1 -1)"
         "(3 10 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(6 -1 2 -1 -1)"
         "(6 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(7 3 2 -1 -1)"
         "(6 7 3 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(4 10 3 -1 -1)"
         "(5 11 3 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(4 -1 4 -1 -1)"
         "(5 10 3 -1 -1)"
         "(3 1 3 -1 -1)"
         "(13 10 3 -1 -1)"
         "(6 10 3 -1 -1)"
         "(4 8 2 -1 -1)"
         "(4 9 3 -1 -1)"
         "(6 10 2 -1 -1)"
         "(5 9 2 -1 -1)"
         "(7 10 2 -1 -1)"
         "(3 9 3 -1 -1)"
         "(9 9 2 -1 -1)"
         "(2 10 2 -1 -1)"
         "(10 10 2 -1 -1)"
         "(3 9 2 -1 -1)"
         "(7 10 2 -1 -1)"
         "(3 8 2 -1 -1)"
         "(3 9 2 -1 -1)"
         "(5 10 2 -1 -1)"
         "(5 10 2 -1 -1)"
         "(2 8 2 -1 -1)"
         "(4 9 3 -1 -1)"
         "(5 9 2 -1 -1)"
         "(4 5 2 -1 -1)"
         "(3 11 2 -1 -1)"
         "(5 10 2 -1 -1)"
         "(6 11 2 -1 -1)"
         "(4 10 1 -1 -1)"
         "(4 10 1 -1 -1)"
         "(20 10 1 -1 -1)"
         "(8 9 1 -1 -1)"
         "(4 11 2 -1 -1)"
         "(3 11 2 -1 -1)"
         "(4 10 2 -1 -1)"
         "(3 3 2 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(5 3 2 -1 -1)"
         "(2 9 2 -1 -1)"
         "(3 9 2 -1 -1)"
         "(9 9 2 -1 -1)"
         "(2 8 2 -1 -1)"
         "(3 8 2 -1 -1)"
         "(2 8 2 -1 -1)"
         "(2 9 2 -1 -1)"
         "(5 8 2 -1 -1)"
         "(7 9 2 -1 -1)"
         "(4 9 2 -1 -1)"
         "(4 8 2 -1 -1)"
         "(3 8 2 -1 -1)"
         "(2 8 2 -1 -1)"
         "(2 10 2 -1 -1)"
         "(4 10 2 -1 -1)"
         "(2 11 3 -1 -1)"
         "(3 10 3 -1 -1)"
         "(6 10 3 -1 -1)"
         "(5 11 3 -1 -1)"
         "(5 9 4 -1 -1)"
         "(6 9 4 -1 -1)"
         "(2 9 3 -1 -1)"
         "(2 11 4 -1 -1)"
         "(3 9 3 -1 -1)"
         "(5 10 4 -1 -1)"
         "(6 10 2 -1 -1)"
         "(4 11 2 -1 -1)"
         "(3 11 1 -1 -1)"
         "(3 11 1 -1 -1)"
         "(4 11 1 -1 -1)"
         "(6 11 1 -1 -1)"
         "(6 11 1 -1 -1)"
         "(5 11 0 -1 -1)"
         "(7 11 0 -1 -1)"
         "(5 10 0 -1 -1)"
         "(4 11 0 -1 -1)"
         "(2 11 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(5 10 0 -1 -1)"
         "(4 10 0 -1 -1)"
         "(3 9 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(5 9 0 -1 -1)"
         "(8 9 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(3 9 0 -1 -1)"
         "(3 8 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(3 9 0 -1 -1)"
         "(9 9 0 -1 -1)"
         "(2 9 0 -1 -1)"
         "(2 9 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(2 9 0 -1 -1)"
         "(2 9 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(2 9 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(5 9 0 -1 -1)"
         "(3 9 0 -1 -1)"
         "(3 9 0 -1 -1)"
         "(2 9 0 -1 -1)"
         "(3 9 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(5 9 0 -1 -1)"
         "(5 9 0 -1 -1)"
         "(2 9 0 -1 -1)"
         "(6 9 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(2 9 0 -1 -1)"
         "(3 9 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(2 9 0 -1 -1)"
         "(7 9 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(2 4 2 -1 -1)"
         "(2 4 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(6 4 2 -1 -1)"
         "(5 4 2 -1 -1)"
         "(3 4 2 -1 -1)"
         "(3 4 2 -1 -1)"
         "(4 4 2 -1 -1)"
         "(3 4 2 -1 -1)"
         "(7 4 2 -1 -1)"
         "(4 4 2 -1 -1)"
         "(3 4 2 -1 -1)"
         "(5 4 3 -1 -1)"
         "(7 4 3 -1 -1)"
         "(4 3 2 -1 -1)"
         "(5 4 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 4 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 4 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(15 -1 1 -1 -1)"
         "(5 4 2 -1 -1)"
         "(5 3 2 -1 -1)"
         "(5 3 2 -1 -1)"
         "(4 3 1 -1 -1)"
         "(3 4 1 -1 -1)"
         "(4 4 1 -1 -1)"
         "(2 4 2 -1 -1)"
         "(8 4 1 -1 -1)"
         "(7 4 1 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 4 1 -1 -1)"
         "(4 3 1 -1 -1)"
         "(2 3 2 -1 -1)"
         "(2 4 2 -1 -1)"
         "(2 4 1 -1 -1)"
         "(3 4 1 -1 -1)"
         "(5 4 2 -1 -1)"
         "(3 4 1 -1 -1)"
         "(3 3 1 -1 -1)"
         "(6 3 1 -1 -1)"
         "(5 4 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(5 -1 1 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 4 2 -1 -1)"
         "(4 3 1 -1 -1)"
         "(4 3 1 -1 -1)"
         "(5 3 1 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(7 -1 2 -1 -1)"
         "(4 4 3 -1 -1)"
         "(2 4 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(2 4 2 -1 -1)"
         "(4 -1 3 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(2 -1 3 -1 -1)"
         "(3 -1 2 -1 -1)"
         "(3 -1 3 -1 -1)"
         "(2 -1 3 -1 -1)"
         "(4 -1 2 -1 -1)"
         "(5 -1 2 -1 -1)"
         "(2 -1 2 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"))))))
   (:id 30))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 280)
   (:y 466)
   (:w 291)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "(dur=~a)(pitch=~a)(int=~a)")
   (:id 31))
  (:comment
   (:x 183)
   (:y 230)
   (:w 305)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "1) SET THE ACTIVE DIMENSIONS OF THE LABELS
(duration pitchmode intensity voice_casting nmf)")
   (:id 32))
  (:box
   (:type :function)
   (:reference (:symbol "OM-DIRECTORY" "OM-API"))
   (:group-id nil)
   (:name "om-directory")
   (:x 1255)
   (:y 256)
   (:w 105)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATH")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "type") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 33))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1391)
   (:y 233)
   (:w 100)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "seg_desc")
   (:id 34))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "make-local-dyci2-path")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (500 500)) (:position (-742 194)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (folder corpus_subfolder) "
       "  (namestring "
       "   (merge-pathnames "
       "    (string+ folder \"Corpus/\" corpus_subfolder \"/\") "
       "    ;(om-user-home)"
       "    )))"
       "  "))))
   (:group-id nil)
   (:name "make-local-dyci2-path")
   (:x 1226)
   (:y 229)
   (:w 155)
   (:h 29)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "FOLDER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CORPUS_SUBFOLDER")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 35))
  (:comment
   (:x 617)
   (:y 919)
   (:w 129)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "7) EVALUATE")
   (:id 36))
  (:box
   (:type :function)
   (:reference (:symbol "OM-CREATE-DIRECTORY" "OM-API"))
   (:group-id nil)
   (:name "om-create-directory")
   (:x 1133)
   (:y 748)
   (:w 142)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATHNAME")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 37))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "make-local-dyci2-path")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (500 500)) (:position (-1008 218)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (folder results_subfolder) "
       "  (namestring "
       "   (merge-pathnames "
       "   (string+ folder \"Results/\" results_subfolder \"/\") "
       "    ;(om-user-home)"
       "    )))"
       ""))))
   (:group-id nil)
   (:name "make-local-dyci2-path")
   (:x 1126)
   (:y 722)
   (:w 155)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "FOLDER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RESULTS_SUBFOLDER")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 38))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "this_patch_parent_directory")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omselfin) (:index 0) (:name "BOX") (:doc "")))
       (:group-id nil)
       (:name "BOX")
       (:x 127)
       (:y 58)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out
         (:type omout)
         (:name "this_patch_parent_directory")
         (:index 1)
         (:doc "")))
       (:group-id nil)
       (:name "this_patch_parent_directory")
       (:x 60)
       (:y 247)
       (:w 182)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :function)
       (:reference mypathname)
       (:group-id nil)
       (:name "mypathname")
       (:x 97)
       (:y 136)
       (:w 107)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OMPERSISTANTOBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference container)
       (:group-id nil)
       (:name "container")
       (:x 107)
       (:y 103)
       (:w 87)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OMBOX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference directory-namestring)
       (:group-id nil)
       (:name "directory-namestring")
       (:x 77)
       (:y 193)
       (:w 147)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 1 :in 0))))))
   (:group-id nil)
   (:name "this_patch_parent_directory")
   (:x 225)
   (:y 180)
   (:w 186)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs
    (:output (:name "this_patch_parent_directory") (:reactive nil)))
   (:id 39))
  (:comment
   (:x 693)
   (:y 644)
   (:w 94)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Crossfade (ms)")
   (:id 40))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-process-dataset")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (689 507)) (:position (84 115)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "lab_files") (:doc "")))
       (:group-id nil)
       (:name "lab_files")
       (:x 212)
       (:y 2)
       (:w 66)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "sound") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "sound")
       (:x 229)
       (:y 509)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "mem") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "mem")
       (:x 489)
       (:y 512)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "list_activation_labels")
         (:doc "")))
       (:group-id nil)
       (:name "list_activation_labels")
       (:x 545)
       (:y 6)
       (:w 141)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "labels") (:index 3) (:doc "")))
       (:group-id nil)
       (:name "labels")
       (:x 594)
       (:y 507)
       (:w 53)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "extension_audio_files")
         (:doc "")))
       (:group-id nil)
       (:name "extension_audio_files")
       (:x 717)
       (:y 2)
       (:w 147)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "function_process_label")
         (:doc "")))
       (:group-id nil)
       (:name "function_process_label")
       (:x 956)
       (:y 38)
       (:w 155)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name "TEXTBUFFER")
       (:x 284)
       (:y 115)
       (:w 148)
       (:h 82)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params (:read-mode :lines-cols))
       (:value
        (:object
         (:class textbuffer)
         (:slots ((:contents nil)))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 7))
      (:box
       (:type :object)
       (:reference sound)
       (:group-id nil)
       (:name nil)
       (:x 114)
       (:y 312)
       (:w 300)
       (:h 71)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font (:face "Calibri") (:size 12) (:style :italic)))
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value :choose-file)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "markers")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "access-from-file")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "markers") (:reactive nil))
        (:output (:name "access-from-file") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class sound)
         (:slots
          ((:onset 0)
           (:duration 0)
           (:n-samples nil)
           (:n-channels nil)
           (:sample-rate nil)
           (:smpl-type :float)
           (:sample-size 16)))
         (:add-slots
          ((:markers nil)
           (:gain 1.0)
           (:access-from-file nil)
           (:file-pathname nil)))))
       (:id 8))
      (:box
       (:type :function)
       (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
       (:group-id nil)
       (:name "om-make-pathname")
       (:x 93)
       (:y 205)
       (:w 145)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :key)
         (:name "directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "name")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "type")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference pathname-name)
       (:group-id nil)
       (:name "pathname-name")
       (:x 97)
       (:y 119)
       (:w 125)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:comment
       (:x 21)
       (:y 324)
       (:w 63)
       (:h 50)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "le même nom mais en .wav")
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-markers")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines processed_labels)"
           "  (loop for i from 0 to (- (length lines) 1)"
           "        collect"
           "         (list"
           "          (sec->ms (first (nth i lines)))"
           "          ;(first (nth i lines))"
           "          (write-to-string (nth i processed_labels))"
           "          )         "
           "         )"
           "  )"
           ""
           ";(lambda (lines list_activation_labels)"
           ";  (loop for line in lines collect"
           ";        (list"
           ";         (sec->ms (first line))"
           ";         (number-to-string (round (fourth line)))"
           ";         )"
           ";        ))"))))
       (:group-id nil)
       (:name "make-markers")
       (:x 271)
       (:y 279)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 213)
       (:y 54)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 13))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 357)
       (:y 461)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 14))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 235)
       (:y 400)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 15))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "make-memory")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines n processed_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        ;collect (write-to-string (list n (first line) (second line)))"
           "        into mem-segments"
           "        finally return (list mem-segments processed_labels))"
           ")"
           "                                 "
           "#|"
           "(lambda (lines n  list_activation_labels) "
           "  (loop for line in lines "
           "        collect (write-to-string (list n (sec->ms (first line)) (sec->ms (second line))))"
           "        into mem-segments"
           "        ;collect (write-to-string (round (/ (fourth line) div_intens)))"
           "        ;collect (write-to-string (list (round (/ (fourth line) div_intens))))"
           "        collect (write-to-string"
           "                 (list "
           "                 ; duree"
           "                  (if (> div_dur 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) div_dur)) -1)"
           "                 ;pitch"
           "                  (if (= mod_12 1) "
           "                      (if (= (round (third line)) 0) -1 (mod (round (third line))12))"
           "                    (if (< mod_12 0) -1 (round (third line)))"
           "                    )"
           "                 ;inten"
           "                  (if (> div_intens 0) (round (/ (fourth line) div_intens)) -1)"
           "                 ;voice casting"
           "                  (if (> vc 0) (round (/ (fifth line) vc)) -1)"
           "                 ;nmf"
           "                  (if (> nmf 0) (round (/ (sixth line) nmf)) -1)"
           "                 ))"
           "        into labels"
           "        finally return (list mem-segments labels)))"
           "|#"
           "                                 "))))
       (:group-id nil)
       (:name "make-memory")
       (:x 461)
       (:y 281)
       (:w 200)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESSED_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 485)
       (:y 387)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 17))
      (:box
       (:type :special)
       (:reference loop-for)
       (:group-id nil)
       (:name "for")
       (:x 508)
       (:y 92)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "from")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "to")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 18))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 375)
       (:y 51)
       (:w 71)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 502)
       (:y 57)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 20))
      (:comment
       (:x 556)
       (:y 102)
       (:w 47)
       (:h 22)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "#sound")
       (:id 21))
      (:box
       (:type :function)
       (:reference split)
       (:group-id nil)
       (:name "split")
       (:x 554)
       (:y 335)
       (:w 59)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 22))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 592)
       (:y 388)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 23))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 486)
       (:y 468)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 593)
       (:y 462)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 25))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "select-labels")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda (lines list_activation_labels)"
           "  (loop for line in lines "
           "        collect (append "
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
           "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
           "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
           "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
           "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
           "                       collect (nth (+ i 1) line)"
           "                       )"
           "                 )"
           "        into labels"
           "        finally return labels"
           "        )"
           "  )"
           ""))))
       (:group-id nil)
       (:name "select-labels")
       (:x 767)
       (:y 243)
       (:w 115)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LINES")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST_ACTIVATION_LABELS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 26))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 753)
       (:y 294)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value box)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value name)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 27))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "value box")
       (:x 416)
       (:y 277)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value t)
       (:id 28)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 0 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 26 :in 1)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 9 :in 2))
       (:attributes (:color nil :style nil :modif (0 1/3))))
      (:connection (:from (:box 6 :out 0)) (:to (:box 27 :in 0)))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/92))))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 16 :in 0))
       (:attributes (:color nil :style nil :modif (0 11/94))))
      (:connection (:from (:box 7 :out 1)) (:to (:box 26 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 15 :out 1)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 22 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 17 :out 1)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 16 :in 1)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 22 :out 1)) (:to (:box 23 :in 0)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 14 :in 2)))
      (:connection (:from (:box 23 :out 1)) (:to (:box 25 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 27 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 16 :in 2)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 8 :in 2))))))
   (:group-id nil)
   (:name "loop-process-dataset")
   (:x 930)
   (:y 357)
   (:w 150)
   (:h 39)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "lab_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_activation_labels")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "extension_audio_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function_process_label")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "sound") (:reactive nil))
    (:output (:name "mem") (:reactive nil))
    (:output (:name "labels") (:reactive nil)))
   (:id 41))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1027)
   (:y 298)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "wav")
   (:id 42))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 875)
   (:y 398)
   (:w 231)
   (:h 102)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(1 54 376)"
         "(1 376 596)"
         "(1 596 916)"
         "(1 916 1528)"
         "(1 1528 2018)"
         "(1 2018 2394)"
         "(1 2394 2712)"
         "(1 2712 2978)"
         "(1 2978 3208)"
         "(1 3208 3476)"
         "(1 3476 4048)"
         "(1 4048 4424)"
         "(1 4424 4914)"
         "(1 4914 5380)"
         "(1 5380 5594)"
         "(1 5594 5884)"
         "(1 5884 6138)"
         "(1 6138 6362)"
         "(1 6362 6662)"
         "(1 6662 7054)"
         "(1 7054 7324)"
         "(1 7324 7684)"
         "(1 7684 8028)"
         "(1 8028 8608)"
         "(1 8608 9250)"
         "(1 9250 9534)"
         "(1 9534 9738)"
         "(1 9738 10120)"
         "(1 10120 10544)"
         "(1 10544 10764)"
         "(1 10764 11048)"
         "(1 11048 11604)"
         "(1 11604 11840)"
         "(1 11840 12086)"
         "(1 12086 12370)"
         "(1 12370 12618)"
         "(1 12618 12812)"
         "(1 12812 13162)"
         "(1 13162 14048)"
         "(1 14048 14288)"
         "(1 14288 14534)"
         "(1 14534 14932)"
         "(1 14932 15154)"
         "(1 15154 15364)"
         "(1 15364 15856)"
         "(1 15856 16312)"
         "(1 16312 16544)"
         "(1 16544 16804)"
         "(1 16804 16988)"
         "(1 16988 17388)"
         "(1 17388 17948)"
         "(1 17948 18382)"
         "(1 18382 18706)"
         "(1 18706 19096)"
         "(1 19096 19278)"
         "(1 19278 19608)"
         "(1 19608 20038)"
         "(1 20038 20612)"
         "(1 20612 21016)"
         "(1 21016 21670)"
         "(1 21670 22206)"
         "(1 22206 22442)"
         "(1 22442 22654)"
         "(1 22654 22966)"
         "(1 22966 23190)"
         "(1 23190 23468)"
         "(1 23468 23716)"
         "(1 23716 23954)"
         "(1 23954 24202)"
         "(1 24202 24550)"
         "(1 24550 25306)"
         "(1 25306 25556)"
         "(1 25556 26118)"
         "(1 26118 26558)"
         "(1 26558 26872)"
         "(1 26872 27298)"
         "(1 27298 27600)"
         "(1 27600 28010)"
         "(1 28010 28312)"
         "(1 28312 28668)"
         "(1 28668 29190)"
         "(1 29190 29434)"
         "(1 29434 29754)"
         "(1 29754 30110)"
         "(1 30110 30458)"
         "(1 30458 31008)"
         "(1 31008 31334)"
         "(1 31334 31548)"
         "(1 31548 31976)"
         "(1 31976 32254)"
         "(1 32254 32726)"
         "(1 32726 32944)"
         "(1 32944 33284)"
         "(1 33284 33896)"
         "(1 33896 34104)"
         "(1 34104 34574)"
         "(1 34574 35324)"
         "(1 35324 36032)"
         "(1 36032 36292)"
         "(1 36292 36596)"
         "(1 36596 36878)"
         "(1 36878 37332)"
         "(1 37332 37776)"
         "(1 37776 38506)"
         "(1 38506 39174)"
         "(1 39174 39424)"
         "(1 39424 39814)"
         "(1 39814 40240)"
         "(1 40240 40602)"
         "(1 40602 40868)"
         "(1 40868 41116)"
         "(1 41116 41392)"
         "(1 41392 41644)"
         "(1 41644 42082)"
         "(1 42082 42708)"
         "(1 42708 43126)"
         "(1 43126 43548)"
         "(1 43548 43848)"
         "(1 43848 44858)"
         "(1 44858 45250)"
         "(1 45250 45728)"
         "(1 45728 45990)"
         "(1 45990 46368)"
         "(1 46368 46640)"
         "(1 46640 46996)"
         "(1 46996 47230)"
         "(1 47230 47822)"
         "(1 47822 48146)"
         "(1 48146 49146)"
         "(1 49146 49550)"
         "(1 49550 49840)"
         "(1 49840 50706)"
         "(1 50706 51138)"
         "(1 51138 51668)"
         "(1 51668 51894)"
         "(1 51894 52810)"
         "(1 52810 53038)"
         "(1 53038 54420)"
         "(1 54420 54944)"
         "(1 54944 55566)"
         "(1 55566 55794)"
         "(1 55794 56232)"
         "(1 56232 56686)"
         "(1 56686 57124)"
         "(1 57124 57466)"
         "(1 57466 57856)"
         "(1 57856 58078)"
         "(1 58078 58496)"
         "(1 58496 59302)"
         "(1 59302 59696)"
         "(1 59696 60086)"
         "(1 60086 60576)"
         "(1 60576 60986)"
         "(1 60986 61352)"
         "(1 61352 61692)"
         "(1 61692 62092)"
         "(1 62092 62344)"
         "(1 62344 62758)"
         "(1 62758 63038)"
         "(1 63038 63346)"
         "(1 63346 64040)"
         "(1 64040 65338)"
         "(1 65338 65646)"
         "(1 65646 66092)"
         "(1 66092 66570)"
         "(1 66570 66794)"
         "(1 66794 67082)"
         "(1 67082 67400)"
         "(1 67400 68116)"
         "(1 68116 69472)"
         "(1 69472 69916)"
         "(1 69916 70382)"
         "(1 70382 70820)"
         "(1 70820 71156)"
         "(1 71156 71586)"
         "(1 71586 71838)"
         "(1 71838 72104)"
         "(1 72104 72444)"))
       (:labls
        (:list
         "(3 10 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(3 2 0 -1 -1)"
         "(6 8 0 -1 -1)"
         "(5 2 0 -1 -1)"
         "(4 3 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(6 10 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 11 0 -1 -1)"
         "(5 10 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(6 -1 1 -1 -1)"
         "(6 10 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(2 9 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 10 1 -1 -1)"
         "(2 11 1 -1 -1)"
         "(3 10 1 -1 -1)"
         "(6 9 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(2 10 1 -1 -1)"
         "(3 -1 1 -1 -1)"
         "(2 10 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(9 10 1 -1 -1)"
         "(2 9 1 -1 -1)"
         "(2 11 1 -1 -1)"
         "(4 10 1 -1 -1)"
         "(2 10 1 -1 -1)"
         "(2 8 1 -1 -1)"
         "(5 10 1 -1 -1)"
         "(5 10 1 -1 -1)"
         "(2 11 1 -1 -1)"
         "(3 9 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(4 10 1 -1 -1)"
         "(6 9 0 -1 -1)"
         "(4 10 0 -1 -1)"
         "(3 11 1 -1 -1)"
         "(4 10 1 -1 -1)"
         "(2 10 1 -1 -1)"
         "(3 9 1 -1 -1)"
         "(4 9 1 -1 -1)"
         "(6 9 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 9 1 -1 -1)"
         "(5 10 0 -1 -1)"
         "(2 11 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(2 11 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(8 10 0 -1 -1)"
         "(2 10 0 -1 -1)"
         "(6 10 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(4 10 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(3 9 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(5 9 1 -1 -1)"
         "(2 8 1 -1 -1)"
         "(3 8 0 -1 -1)"
         "(4 9 0 -1 -1)"
         "(3 10 1 -1 -1)"
         "(6 8 1 -1 -1)"
         "(3 8 1 -1 -1)"
         "(2 7 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(3 10 1 -1 -1)"
         "(5 10 0 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(3 9 1 -1 -1)"
         "(6 8 1 -1 -1)"
         "(2 8 1 -1 -1)"
         "(5 10 1 -1 -1)"
         "(8 9 1 -1 -1)"
         "(7 9 1 -1 -1)"
         "(3 8 1 -1 -1)"
         "(3 10 1 -1 -1)"
         "(3 9 1 -1 -1)"
         "(5 10 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(7 -1 1 -1 -1)"
         "(2 -1 1 -1 -1)"
         "(4 -1 1 -1 -1)"
         "(4 10 0 -1 -1)"
         "(4 10 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(2 11 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(3 11 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 10 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(6 10 0 -1 -1)"
         "(3 11 0 -1 -1)"
         "(10 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(9 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(6 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(8 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(13 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(2 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(7 -1 0 -1 -1)"
         "(14 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(5 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(4 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"
         "(3 -1 0 -1 -1)"))))))
   (:id 43))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "loop-scenarios-with-stretch_1")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (963 660)) (:position (0 23)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "GENERATOR") (:doc "")))
       (:group-id nil)
       (:name "GENERATOR")
       (:x 0)
       (:y 42)
       (:w 104)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "LENGTH") (:doc "")))
       (:group-id nil)
       (:name "LENGTH")
       (:x 361)
       (:y 15)
       (:w 71)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "CONTINUITY-LIST")
         (:doc "")))
       (:group-id nil)
       (:name "CONTINUITY-LIST")
       (:x 197)
       (:y 18)
       (:w 125)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 139)
       (:y 464)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "VOICE-MAX-CONT-MASTER")
         (:doc "")))
       (:group-id nil)
       (:name "VOICE-MAX-CONT-MASTER")
       (:x 424)
       (:y 36)
       (:w 195)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 5)
         (:name "VOICEGENERATOR")
         (:doc "")))
       (:group-id nil)
       (:name "VOICEGENERATOR")
       (:x 561)
       (:y 54)
       (:w 135)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 6) (:name "SOUND_DB") (:doc "")))
       (:group-id nil)
       (:name "SOUND_DB")
       (:x 603)
       (:y 118)
       (:w 89)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 7) (:name "XFADE") (:doc "")))
       (:group-id nil)
       (:name "XFADE")
       (:x 546)
       (:y 131)
       (:w 62)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 8) (:name "RES_DIR") (:doc "")))
       (:group-id nil)
       (:name "RES_DIR")
       (:x 517)
       (:y 15)
       (:w 74)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "list_dur") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "list_dur")
       (:x 478)
       (:y 528)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 9))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "query") (:index 3) (:doc "")))
       (:group-id nil)
       (:name "query")
       (:x 288)
       (:y 527)
       (:w 55)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 10))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 337)
       (:y 88)
       (:w 111)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 92)
       (:y 266)
       (:w 131)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value
        (:list
         "69"
         "67"
         "65"
         "67"
         "64"
         "66"
         "69"
         "65"
         "53"
         "53"
         "46"
         "46"
         "53"
         "51"
         "52"
         "64"
         "66"
         "68"
         "64"
         "64"
         "65"
         "64"
         "59"
         "64"
         "66"
         "68"
         "64"
         "66"
         "66"
         "68"
         "69"
         "68"
         "65"
         "69"
         "67"
         "67"
         "66"
         "67"
         "67"
         "65"
         "-12723"
         "65"
         "65"
         "65"
         "65"
         "67"
         "65"
         "60"
         "65"
         "65"))
       (:id 12))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 57)
       (:y 98)
       (:w 107)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "max_continuity")
       (:id 13))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 367)
       (:y 122)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :function)
       (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
       (:group-id nil)
       (:name "om-print-format")
       (:x 104)
       (:y 375)
       (:w 120)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FORMAT-STRING")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "args")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "prompt")
         (:value "DYCI2")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 7)
       (:y 339)
       (:w 123)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "NEW SCENARIO: ~A")
       (:id 16))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 132)
       (:y 340)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:library "om-dyci2")
       (:type :function)
       (:reference (:symbol "DYCI2QUERY" "DYCI2"))
       (:group-id nil)
       (:name "dyci2query")
       (:x 83)
       (:y 192)
       (:w 96)
       (:h 30)
       (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "QUERY")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:library "om-dyci2")
       (:type :function)
       (:reference (:symbol "DYCI2SETPARAM" "DYCI2"))
       (:group-id nil)
       (:name "dyci2setparam")
       (:x 15)
       (:y 158)
       (:w 116)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PARAMETER")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "VALUE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :function)
       (:reference remove)
       (:group-id nil)
       (:name "remove")
       (:x 74)
       (:y 228)
       (:w 89)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "generate_and_write_variations")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by nil)
          (:version nil))
         (:window (:size (1604 955)) (:position (0 23)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "len_scen") (:doc "")))
           (:group-id nil)
           (:name "len_scen")
           (:x 653)
           (:y 154)
           (:w 74)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 147)
           (:y 784)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "cont_scen")
             (:doc "")))
           (:group-id nil)
           (:name "cont_scen")
           (:x 737)
           (:y 158)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "list_dur")
             (:index 2)
             (:doc "")))
           (:group-id nil)
           (:name "list_dur")
           (:x 61)
           (:y 529)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "cont_gen") (:doc "")))
           (:group-id nil)
           (:name "cont_gen")
           (:x 393)
           (:y 41)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "path_output_directory")
             (:doc "")))
           (:group-id nil)
           (:name "path_output_directory")
           (:x 822)
           (:y 311)
           (:w 148)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "xfade") (:doc "")))
           (:group-id nil)
           (:name "xfade")
           (:x 277)
           (:y 343)
           (:w 51)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 6) (:name "query") (:doc "")))
           (:group-id nil)
           (:name "query")
           (:x 305)
           (:y 269)
           (:w 81)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 7)
             (:name "GENERATOR")
             (:doc "")))
           (:group-id nil)
           (:name "GENERATOR")
           (:x 77)
           (:y 112)
           (:w 98)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 8)
             (:name "snd_database")
             (:doc "")))
           (:group-id nil)
           (:name "snd_database")
           (:x 10)
           (:y 355)
           (:w 104)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "remix")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size (936 834)) (:position (838 594)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "SOUNDS")
                 (:doc "")))
               (:group-id nil)
               (:name "SOUNDS")
               (:x 38)
               (:y 145)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "SEGMENTS")
                 (:doc "")))
               (:group-id nil)
               (:name "SEGMENTS")
               (:x 156)
               (:y 20)
               (:w 89)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "list_dur")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "list_dur")
               (:x 491)
               (:y 651)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "CROSSFADE")
                 (:doc "")))
               (:group-id nil)
               (:name "CROSSFADE")
               (:x 414)
               (:y 68)
               (:w 103)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "out")
                 (:index 2)
                 (:doc "")))
               (:group-id nil)
               (:name "out")
               (:x 207)
               (:y 638)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "outfile")
                 (:doc "")))
               (:group-id nil)
               (:name "outfile")
               (:x 253)
               (:y 509)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 36)
               (:y 600)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 164)
               (:y 78)
               (:w 65)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 7))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 115)
               (:y 533)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference split)
               (:group-id nil)
               (:name "split")
               (:x 166)
               (:y 160)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "out1") (:reactive nil))
                (:output (:name "out2") (:reactive nil)))
               (:id 9))
              (:box
               (:type :function)
               (:reference om+)
               (:group-id nil)
               (:name "om+")
               (:x 218)
               (:y 269)
               (:w 62)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 131)
               (:y 273)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 11))
              (:box
               (:type :function)
               (:reference nth)
               (:group-id nil)
               (:name "nth")
               (:x 39)
               (:y 267)
               (:w 55)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ORIG-N")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ORIG-LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 12))
              (:box
               (:type :function)
               (:reference read-from-string)
               (:group-id nil)
               (:name "read-from-string")
               (:x 134)
               (:y 125)
               (:w 123)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "STRING")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 13))
              (:box
               (:type :function)
               (:reference 1-)
               (:group-id nil)
               (:name "1-")
               (:x 19)
               (:y 234)
               (:w 49)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 308)
               (:y 243)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 2)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 505)
               (:y 342)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 16))
              (:box
               (:type :function)
               (:reference om-)
               (:group-id nil)
               (:name "om-")
               (:x 478)
               (:y 274)
               (:w 59)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-processing)
               (:group-id nil)
               (:name "supervp-processing")
               (:x 56)
               (:y 384)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SRC")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PROCESSINGS")
                 (:value "")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "BEGIN")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "END")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "FFTSIZE")
                 (:value 4096)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOWSTEP-OVERSAMP")
                 (:value 8)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "WINDOW-TYPE")
                 (:value "hanning")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SHAPE-INVARIANT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PRESERVE-TRANSIENT")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NORMALIZE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "OUTFILE")
                 (:value "out.aiff")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18))
              (:box
               (:library "OM-SuperVP")
               (:type :function)
               (:reference supervp-timestretch)
               (:group-id nil)
               (:name "supervp-timestretch")
               (:x 297)
               (:y 335)
               (:w 143)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 19))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 565)
               (:y 178)
               (:w 46)
               (:h 32)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 20))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 296)
               (:y 216)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 21))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 559)
               (:y 151)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 22))
              (:comment
               (:x 593)
               (:y 124)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "duration event")
               (:id 23))
              (:comment
               (:x 498)
               (:y 122)
               (:w 87)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "target duration")
               (:id 24))
              (:comment
               (:x 613)
               (:y 183)
               (:w 86)
               (:h 22)
               (:fgcolor nil)
               (:bgcolor nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:text "coef stretch")
               (:id 25))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 89)
               (:y 314)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 26))
              (:box
               (:type :function)
               (:reference ms->sec)
               (:group-id nil)
               (:name "ms->sec")
               (:x 192)
               (:y 313)
               (:w 84)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 27))
              (:box
               (:type :function)
               (:reference (:symbol "CONCAT-AUDIOFILES" "DYCI2"))
               (:group-id nil)
               (:name "concat-audiofiles")
               (:x 136)
               (:y 587)
               (:w 128)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FILES")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "crossfade")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :key)
                 (:name "out")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 28))
              (:box
               (:type :function)
               (:reference seq)
               (:group-id nil)
               (:name "seq")
               (:x 289)
               (:y 622)
               (:w 57)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OP")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "op+1") (:reactive nil)))
               (:id 29))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 404)
               (:y 585)
               (:w 78)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 30))
              (:box
               (:type :function)
               (:reference (:symbol "OM-DELETE-FILE" "OM-API"))
               (:group-id nil)
               (:name "om-delete-file")
               (:x 361)
               (:y 529)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NAME")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 31)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 12 :in 1)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 21 :in 0))
               (:attributes (:color nil :style nil :modif (0 0))))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 28 :in 1)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 28 :in 2)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 28 :in 0)))
              (:connection
               (:from (:box 8 :out 1))
               (:to (:box 30 :in 1)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 17 :in 1))
               (:attributes (:color nil :style nil :modif (0 -0.45))))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 17 :in 0))
               (:attributes
                (:color nil :style nil :modif (0 -1683/4277))))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 27 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 26 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 12 :in 0)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 10 :in 1)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 11 :in 1))
               (:attributes (:color nil :style nil :modif (0 -1/20))))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 6 :in 1))
               (:attributes (:color nil :style nil :modif (0 30/233))))
              (:connection
               (:from (:box 16 :out 1))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 22 :in 1))
               (:attributes
                (:color nil :style nil :modif (-221/2622 0))))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 22 :in 0)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 18 :in 1)))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 21 :in 1)))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 19 :in 0))
               (:attributes (:color nil :style nil :modif (0 -1/9))))
              (:connection
               (:from (:box 21 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 26 :out 0))
               (:to (:box 18 :in 2)))
              (:connection
               (:from (:box 27 :out 0))
               (:to (:box 18 :in 3)))
              (:connection
               (:from (:box 28 :out 0))
               (:to (:box 29 :in 0)))
              (:connection
               (:from (:box 29 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 30 :out 0))
               (:to (:box 29 :in 1)))
              (:connection
               (:from (:box 31 :out 0))
               (:to (:box 30 :in 0))))))
           (:group-id nil)
           (:name "remix")
           (:x 60)
           (:y 406)
           (:w 105)
           (:h 81)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOUNDS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEGMENTS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CROSSFADE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "outfile")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "list_dur") (:reactive nil))
            (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 165)
           (:y 200)
           (:w 107)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "max_continuity")
           (:id 11))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "path_generated_sequence")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size (707 565)) (:position (0 181)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "name_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "name_scen")
               (:x 103)
               (:y 34)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "path")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "path")
               (:x 230)
               (:y 507)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "len_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "len_scen")
               (:x 222)
               (:y 34)
               (:w 74)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "cont_scen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_scen")
               (:x 315)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "idtf_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "idtf_gen")
               (:x 417)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "cont_gen")
                 (:doc "")))
               (:group-id nil)
               (:name "cont_gen")
               (:x 500)
               (:y 37)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 6)
                 (:name "path_output_directory")
                 (:doc "")))
               (:group-id nil)
               (:name "path_output_directory")
               (:x 602)
               (:y 37)
               (:w 148)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "internal input value")
                 (:value
                  "/Users/nika/Desktop/OM7/OM-DYCI2_Tests/Results/")
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :function)
               (:reference concatenate)
               (:group-id nil)
               (:name "concatenate")
               (:x 19)
               (:y 389)
               (:w 500)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "RESULT-TYPE")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".aiff")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value ".wav")
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "sequences")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 17)
               (:y 301)
               (:w 47)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value string)
               (:id 8))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 83)
               (:y 339)
               (:w 54)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "Scen")
               (:id 9))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 158)
               (:y 339)
               (:w 40)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_L")
               (:id 10))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 226)
               (:y 339)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 11))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 289)
               (:y 333)
               (:w 53)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "-Gen")
               (:id 12))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 363)
               (:y 333)
               (:w 42)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "_C")
               (:id 13))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 203)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 299)
               (:y 110)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 401)
               (:y 174)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:type :function)
               (:reference write-to-string)
               (:group-id nil)
               (:name "write-to-string")
               (:x 525)
               (:y 142)
               (:w 111)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:type :function)
               (:reference pathname)
               (:group-id nil)
               (:name "pathname")
               (:x 398)
               (:y 448)
               (:w 91)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "P")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 7 :in 3)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 7 :in 1)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 7 :in 2)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 7 :in 4)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 7 :in 6)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 7 :in 8)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 7 :in 10)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 7 :in 5)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 7 :in 7)))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 7 :in 9)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 7 :in 11)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 1 :in 0))))))
           (:group-id nil)
           (:name "path_generated_sequence")
           (:x 599)
           (:y 520)
           (:w 200)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "name_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "len_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_scen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "idtf_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "cont_gen")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "path_output_directory")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "path") (:reactive nil)))
           (:id 12))
          (:box
           (:type :function)
           (:reference format)
           (:group-id nil)
           (:name "format")
           (:x 574)
           (:y 277)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "DESTINATION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTROL-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "format-arguments")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 582)
           (:y 233)
           (:w 73)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "[L~DC~D]")
           (:id 14))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 906)
           (:y 627)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 848)
           (:y 555)
           (:w 102)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "ITERATION #~D")
           (:id 16))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 934)
           (:y 595)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 318)
           (:y 647)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 247)
           (:y 615)
           (:w 100)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "OUTPUT ~A")
           (:id 19))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 347)
           (:y 580)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "filter-output")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by nil)
              (:version nil))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION"
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               "(lambda (output) "
               "  (if "
               "      (and (> (length output) 0) (nth 0 output)) "
               "      output "
               "    ;(if "
               "     ;   (and (> (length output) 0) (nth 1 output))"
               "        ;(list \"(1 0 200)\" \"(1 301 600)\")"
               "    (loop for i from 0 to 5 collect \"(1 0 100)\")"
               "      ;)"
               "    )"
               "  )"))))
           (:group-id nil)
           (:name "filter-output")
           (:x 156)
           (:y 316)
           (:w 98)
           (:h 28)
           (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "OUTPUT")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 21))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 119)
           (:y 351)
           (:w 78)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 22))
          (:box
           (:type :function)
           (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
           (:group-id nil)
           (:name "om-print-format")
           (:x 524)
           (:y 638)
           (:w 120)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FORMAT-STRING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "prompt")
             (:value "DYCI2")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 23))
          (:box
           (:type :value)
           (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
           (:group-id nil)
           (:name "value box")
           (:x 437)
           (:y 605)
           (:w 120)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "original output ~A")
           (:id 24))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 553)
           (:y 579)
           (:w 53)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 25))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2SETPARAM" "DYCI2"))
           (:group-id nil)
           (:name "dyci2setparam")
           (:x 52)
           (:y 239)
           (:w 116)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PARAMETER")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "VALUE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 26))
          (:box
           (:library "om-dyci2")
           (:type :function)
           (:reference (:symbol "DYCI2QUERY" "DYCI2"))
           (:group-id nil)
           (:name "dyci2query")
           (:x 157)
           (:y 276)
           (:w 96)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "QUERY")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 27))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 699)
           (:y 468)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 28))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 249)
           (:y 755)
           (:w 133)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 29)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 13 :in 2)))
          (:connection (:from (:box 0 :out 0)) (:to (:box 12 :in 1)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 13 :in 3)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 12 :in 2)))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 26 :in 2))
           (:attributes (:color nil :style nil :modif (0 -4/83))))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 12 :in 4))
           (:attributes (:color nil :style nil :modif (0 -1/3))))
          (:connection (:from (:box 5 :out 0)) (:to (:box 12 :in 5)))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 10 :in 2))
           (:attributes
            (:color nil :style nil :modif (0 -0.09545457))))
          (:connection (:from (:box 7 :out 0)) (:to (:box 27 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 26 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
          (:connection
           (:from (:box 10 :out 0))
           (:to (:box 3 :in 0))
           (:attributes (:color nil :style nil :modif (0 -41/12374))))
          (:connection (:from (:box 10 :out 1)) (:to (:box 29 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 26 :in 1)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 10 :in 3)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 29 :in 3)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 15 :in 1)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 29 :in 1)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 0)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 1)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 22 :in 1)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 25 :in 0)))
          (:connection
           (:from (:box 22 :out 0))
           (:to (:box 10 :in 1))
           (:attributes (:color nil :style nil :modif (0 -3/16))))
          (:connection
           (:from (:box 22 :out 0))
           (:to (:box 20 :in 0))
           (:attributes (:color nil :style nil :modif (0 -79/209))))
          (:connection (:from (:box 23 :out 0)) (:to (:box 29 :in 2)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 23 :in 0)))
          (:connection (:from (:box 25 :out 0)) (:to (:box 23 :in 1)))
          (:connection (:from (:box 26 :out 0)) (:to (:box 27 :in 0)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 28 :out 0)) (:to (:box 12 :in 3)))
          (:connection
           (:from (:box 28 :out 0))
           (:to (:box 17 :in 0))
           (:attributes (:color nil :style nil :modif (0 -36/107))))
          (:connection
           (:from (:box 29 :out 0))
           (:to (:box 1 :in 0))))))
       (:group-id nil)
       (:name "generate_and_write_variations")
       (:x 359)
       (:y 327)
       (:w 202)
       (:h 91)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "len_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_scen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "cont_gen")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "path_output_directory")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "xfade")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "query")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GENERATOR")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "snd_database")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "list_dur") (:reactive nil)))
       (:id 21)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 11 :in 0)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 19 :in 2))
       (:attributes (:color nil :style nil :modif (0 7/27))))
      (:connection (:from (:box 2 :out 0)) (:to (:box 21 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 21 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 21 :in 6)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 21 :in 7)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 21 :in 4)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 21 :in 3)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 17 :in 0)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 21 :in 5))
       (:attributes (:color nil :style nil :modif (-3/337 0))))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 10 :in 0))
       (:attributes (:color nil :style nil :modif (0 -83/241))))
      (:connection (:from (:box 13 :out 0)) (:to (:box 19 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 21 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 15 :in 1)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 20 :in 1)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 18 :in 0))
       (:attributes (:color nil :style nil :modif (0 29/105))))
      (:connection (:from (:box 20 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 21 :out 1)) (:to (:box 9 :in 0))))))
   (:group-id nil)
   (:name "loop-scenarios-with-stretch_1")
   (:x 773)
   (:y 723)
   (:w 200)
   (:h 30)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "GENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LENGTH")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTINUITY-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE-MAX-CONT-MASTER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICEGENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND_DB")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "XFADE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RES_DIR")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "list_dur") (:reactive nil))
    (:output (:name "query") (:reactive nil)))
   (:id 44))
  (:box
   (:type :function)
   (:reference car)
   (:group-id nil)
   (:name "car")
   (:x 833)
   (:y 693)
   (:w 55)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "X")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 45))
  (:box
   (:type :function)
   (:reference cdr)
   (:group-id nil)
   (:name "cdr")
   (:x 591)
   (:y 760)
   (:w 55)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "X")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 46))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "remove-scen-file")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (500 500)) (:position (-1162 301)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (a b) "
       "  ;(om::om-print-format \"~%~%~%TESTING\")"
       "  ;(print a)"
       "  ;(print b)"
       "  ;(print (remove a b :test (lambda (x y) (string-equal (namestring x) (namestring y)))))"
       "  (remove a b :test (lambda (x y) (string-equal (namestring x) (namestring y))))"
       "  )"
       ""))))
   (:group-id nil)
   (:name "remove-scen-file")
   (:x 899)
   (:y 281)
   (:w 127)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input (:type :standard) (:name "A") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "B")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 47))
  (:box
   (:type :function)
   (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
   (:group-id nil)
   (:name "om-make-pathname")
   (:x 1473)
   (:y 466)
   (:w 145)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :key)
     (:name "directory")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "name") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "type") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 48))
  (:box
   (:type :function)
   (:reference pathname-name)
   (:group-id nil)
   (:name "pathname-name")
   (:x 1451)
   (:y 379)
   (:w 125)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "P")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 49))
  (:box
   (:type :function)
   (:reference pathname-type)
   (:group-id nil)
   (:name "pathname-type")
   (:x 1582)
   (:y 378)
   (:w 118)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "P")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 50))
  (:comment
   (:x 160)
   (:y 103)
   (:w 492)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "/!\\ om7-beta/preferences/files and folders/ if output file exists --> auto-rename")
   (:id 51))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1285)
   (:y 193)
   (:w 110)
   (:h 31)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "1_scen")
   (:id 52))
  (:box
   (:type :function)
   (:reference reverse)
   (:group-id nil)
   (:name "reverse")
   (:x 1458)
   (:y 287)
   (:w 78)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 53))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "function_process_label")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (e list_activation_labels) "
       "  (let ("
       "        (div_dur (nth 0 list_activation_labels))"
       "        (mod_12 (nth 1 list_activation_labels))"
       "        (div_intens  (nth 2 list_activation_labels))"
       "        (vc (nth 3 list_activation_labels))"
       "        (nmf (nth 4 list_activation_labels))"
       "        (query_dur (nth 0 e))"
       "        (query_pitch (nth 1 e))"
       "        (query_intens  (nth 2 e))"
       "        (query_vc (nth 3 e))"
       "        (query_nmf (nth 4 e))"
       "        )"
       "    (write-to-string"
       "     (list "
       "      ;duration label"
       "      (if (and (> div_dur 0) (> query_dur -1))"
       "          (round (/ query_dur div_dur)) "
       "        -1)"
       "      ;pitch label"
       "     (if (and (> mod_12 0) (> query_pitch -1))"
       "         (if (= mod_12 2) "
       "             (if (= (round query_pitch) 0) -1 (mod (round query_pitch)12))"
       "           (round query_pitch))"
       "       -1)"
       "      ;intensity label"
       "      (if (and (> div_intens 0)  (> query_intens -1))"
       "          (round (/ (/ query_intens 3) div_intens)) "
       "        -1)"
       "      ;voice casting label"
       "      (if (and (> vc 0)  (> query_vc -1)) "
       "          (round (/ query_vc vc)) "
       "        -1)"
       "      ;nmf label"
       "      (if (and (> nmf 0)  (> query_nmf -1)) "
       "          (round (/ query_nmf nmf)) "
       "        -1)"
       "      )"
       "     )"
       "    ))"))))
   (:group-id nil)
   (:name "function_process_label")
   (:x 465)
   (:y 287)
   (:w 161)
   (:h 28)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.7890212535858154D0
       0.8168872594833374D0
       0.6561802625656128D0
       1.0D0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input (:type :standard) (:name "E") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST_ACTIVATION_LABELS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 54))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 671)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 2 10 0 0))
   (:id 55))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 950)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 2 20 0 0))
   (:id 56))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 924)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 2 10 0 0))
   (:id 57))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 898)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 2 5 0 0))
   (:id 58))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 845)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 1 10 0 0))
   (:id 59))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 872)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 1 15 0 0))
   (:id 60))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 8)
   (:y 818)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 1 5 0 0))
   (:id 61))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 645)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 2 5 0 0))
   (:id 62))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 696)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 2 20 0 0))
   (:id 63))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 5)
   (:y 596)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 1 10 0 0))
   (:id 64))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 570)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 1 5 0 0))
   (:id 65))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 621)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 1 20 0 0))
   (:id 66))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 352)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 1 10 0 0))
   (:id 67))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 326)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 1 5 0 0))
   (:id 68))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 377)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 1 15 0 0))
   (:id 69))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 0)
   (:y 430)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 2 10 0 0))
   (:id 70))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 404)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 2 5 0 0))
   (:id 71))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 455)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 2 20 0 0))
   (:id 72))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 112)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 1 10 0 0))
   (:id 73))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 88)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 1 5 0 0))
   (:id 74))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 137)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 1 15 0 0))
   (:id 75))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1)
   (:y 191)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 2 10 0 0))
   (:id 76))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 165)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 2 5 0 0))
   (:id 77))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 216)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 2 20 0 0))
   (:id 78))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 215)
   (:y 120)
   (:w 40)
   (:h 36)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 79))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "scen-directory")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (idx) "
       "    (string+ (write-to-string idx) \"_scen\") "
       "    )"
       "  "))))
   (:group-id nil)
   (:name "scen-directory")
   (:x 1115)
   (:y 150)
   (:w 115)
   (:h 29)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDX")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 80))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 765)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 0 10 0 0))
   (:id 81))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 792)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 0 15 0 0))
   (:id 82))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 6)
   (:y 738)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 150 0 5 0 0))
   (:id 83))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 37)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 0 10 0 0))
   (:id 84))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 5)
   (:y 11)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 0 5 0 0))
   (:id 85))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 62)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 50 0 15 0 0))
   (:id 86))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 2)
   (:y 276)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 0 10 0 0))
   (:id 87))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 3)
   (:y 250)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 0 5 0 0))
   (:id 88))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 3)
   (:y 301)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 75 0 15 0 0))
   (:id 89))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 5)
   (:y 520)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 0 10 0 0))
   (:id 90))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 4)
   (:y 494)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 0 5 0 0))
   (:id 91))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 5)
   (:y 545)
   (:w 93)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.53333337))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 0 20 0 0))
   (:id 92))
  (:comment
   (:x 746)
   (:y 856)
   (:w 336)
   (:h 64)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Yellow boxes: generation parameters
Blue boxes: other parameters (titles, crossfades, etc.)
Green boxes: for advanced users
Red boxes: run (selection then « v »)")
   (:id 93))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "mem-directory")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (idx) "
       "    (string+ (write-to-string idx) \"_mem\") "
       "    )"
       "  "))))
   (:group-id nil)
   (:name "mem-directory")
   (:x 580)
   (:y 153)
   (:w 115)
   (:h 29)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDX")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 94)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 8 :in 1))
   (:attributes (:color nil :style nil :modif (0 40/99))))
  (:connection (:from (:box 0 :out 0)) (:to (:box 44 :in 1)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 8 :in 6)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 44 :in 6)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 8 :in 2))
   (:attributes (:color nil :style nil :modif (0 145/374))))
  (:connection (:from (:box 5 :out 0)) (:to (:box 44 :in 2)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 46 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 45 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 16 :in 1)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 16 :in 2)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 38 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 10 :in 1)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 10 :in 4))
   (:attributes (:color nil :style nil :modif (0 67/336))))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 14 :in 0))
   (:attributes (:color nil :style nil :modif (0 -0.40283018))))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 12 :in 0))
   (:attributes (:color nil :style nil :modif (0 11120/28987))))
  (:connection (:from (:box 13 :out 0)) (:to (:box 49 :in 0)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 50 :in 0)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 9 :in 0)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 41 :in 0))
   (:attributes (:color nil :style nil :modif (0 -2/33))))
  (:connection (:from (:box 16 :out 0)) (:to (:box 44 :in 0)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 10 :in 3))
   (:attributes (:color nil :style nil :modif (0 -55/207))))
  (:connection (:from (:box 18 :out 0)) (:to (:box 19 :in 0)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 9 :in 1))
   (:attributes (:color nil :style nil :modif (0 0.41721314))))
  (:connection (:from (:box 18 :out 0)) (:to (:box 22 :in 1)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 27 :in 1))
   (:attributes (:color nil :style nil :modif (0 1/5))))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 41 :in 1))
   (:attributes (:color nil :style nil :modif (0 3/10))))
  (:connection (:from (:box 18 :out 0)) (:to (:box 54 :in 1)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 17 :in 2)))
  (:connection (:from (:box 19 :out 1)) (:to (:box 17 :in 3)))
  (:connection (:from (:box 19 :out 2)) (:to (:box 17 :in 4)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 10 :in 2)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 27 :in 3))
   (:attributes (:color nil :style nil :modif (0 2/27))))
  (:connection (:from (:box 24 :out 0)) (:to (:box 47 :in 1)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 24 :in 1)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 24 :in 0)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 48 :in 0)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 8 :in 5)))
  (:connection (:from (:box 27 :out 1)) (:to (:box 30 :in 1)))
  (:connection (:from (:box 27 :out 2)) (:to (:box 30 :in 2)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 26 :in 1)))
  (:connection
   (:from (:box 28 :out 0))
   (:to (:box 10 :in 5))
   (:attributes (:color nil :style nil :modif (0 0.44790366))))
  (:connection
   (:from (:box 29 :out 0))
   (:to (:box 27 :in 2))
   (:attributes (:color nil :style nil :modif (0 5/19))))
  (:connection (:from (:box 30 :out 0)) (:to (:box 8 :in 4)))
  (:connection
   (:from (:box 31 :out 0))
   (:to (:box 17 :in 1))
   (:attributes (:color nil :style nil :modif (0 1/12))))
  (:connection (:from (:box 33 :out 0)) (:to (:box 53 :in 0)))
  (:connection (:from (:box 33 :out 0)) (:to (:box 13 :in 0)))
  (:connection
   (:from (:box 34 :out 0))
   (:to (:box 33 :in 1))
   (:attributes (:color nil :style nil :modif (0 19/100))))
  (:connection (:from (:box 35 :out 0)) (:to (:box 33 :in 0)))
  (:connection (:from (:box 37 :out 0)) (:to (:box 44 :in 7)))
  (:connection
   (:from (:box 37 :out 0))
   (:to (:box 8 :in 7))
   (:attributes (:color nil :style nil :modif (0 -2/13))))
  (:connection (:from (:box 38 :out 0)) (:to (:box 37 :in 0)))
  (:connection
   (:from (:box 39 :out 0))
   (:to (:box 38 :in 0))
   (:attributes (:color nil :style nil :modif (0 0.41666666))))
  (:connection
   (:from (:box 39 :out 0))
   (:to (:box 35 :in 0))
   (:attributes (:color nil :style nil :modif (0 4/35))))
  (:connection
   (:from (:box 39 :out 0))
   (:to (:box 26 :in 0))
   (:attributes (:color nil :style nil :modif (0 1/33))))
  (:connection
   (:from (:box 41 :out 0))
   (:to (:box 44 :in 5))
   (:attributes (:color nil :style nil :modif (0 84/337))))
  (:connection (:from (:box 41 :out 1)) (:to (:box 43 :in 1)))
  (:connection (:from (:box 41 :out 2)) (:to (:box 43 :in 2)))
  (:connection
   (:from (:box 42 :out 0))
   (:to (:box 41 :in 2))
   (:attributes (:color nil :style nil :modif (0 5/19))))
  (:connection (:from (:box 43 :out 0)) (:to (:box 44 :in 4)))
  (:connection (:from (:box 44 :out 1)) (:to (:box 8 :in 8)))
  (:connection (:from (:box 44 :out 2)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 45 :out 0)) (:to (:box 44 :in 3)))
  (:connection (:from (:box 46 :out 0)) (:to (:box 8 :in 3)))
  (:connection (:from (:box 47 :out 0)) (:to (:box 27 :in 0)))
  (:connection
   (:from (:box 48 :out 0))
   (:to (:box 47 :in 0))
   (:attributes (:color nil :style nil :modif (-58/211 0))))
  (:connection (:from (:box 49 :out 0)) (:to (:box 48 :in 1)))
  (:connection (:from (:box 50 :out 0)) (:to (:box 48 :in 2)))
  (:connection (:from (:box 52 :out 0)) (:to (:box 35 :in 1)))
  (:connection (:from (:box 54 :out 0)) (:to (:box 9 :in 2)))
  (:connection (:from (:box 54 :out 0)) (:to (:box 41 :in 3)))
  (:connection (:from (:box 63 :out 0)) (:to (:box 18 :in 0)))
  (:connection (:from (:box 79 :out 0)) (:to (:box 80 :in 0)))
  (:connection (:from (:box 79 :out 0)) (:to (:box 94 :in 0)))
  (:connection (:from (:box 80 :out 0)) (:to (:box 52 :in 0)))
  (:connection (:from (:box 94 :out 0)) (:to (:box 28 :in 0)))))