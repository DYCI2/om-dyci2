
(:patch
 (:om-version 0.0102)
 (:name "dyci2generator-audio")
 (:doc "")
 (:info
  (:created "2018/06/17 2:59:29")
  (:modified "2018/07/17 23:51:59"))
 (:window (:size (1142 1042)) (:position (444 52)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "om-dyci2")
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:type :object)
   (:group-id nil)
   (:name "DYCI2GENERATOR")
   (:x 268)
   (:y 673)
   (:w 278)
   (:h 57)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 12.0D0) (:style :bold)))
     (:t-or-nil t)))
   (:name "DYCI2GENERATOR")
   (:display :text)
   (:showname t)
   (:group-id nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(100 300)"
         "(300 500)"
         "(500 700)"
         "(700 900)"
         "(900 1100)"
         "(1100 1300)"
         "(1300 1500)"
         "(1500 1700)"
         "(1700 1900)"
         "(1900 2100)"
         "(2100 2300)"
         "(2300 2500)"
         "(2500 2700)"
         "(2700 2900)"
         "(2900 3100)"
         "(3100 3300)"
         "(3300 3500)"
         "(3500 3700)"
         "(3700 3900)"
         "(3900 4100)"
         "(4100 4300)"
         "(4300 4500)"
         "(4500 4700)"
         "(4700 4900)"))
       (:labls
        (:list
         "D"
         "A"
         "C"
         "A"
         "B"
         "B"
         "C"
         "A"
         "A"
         "C"
         "D"
         "A"
         "B"
         "D"
         "B"
         "B"
         "C"
         "C"
         "A"
         "C"
         "A"
         "D"
         "B"
         "B"
         "C"))))))
   (:id 0))
  (:box
   (:library "om-dyci2")
   (:reference (:symbol "DYCI2QUERY" "DYCI2"))
   (:type :function)
   (:group-id nil)
   (:name "dyci2query")
   (:x 641)
   (:y 766)
   (:w 92)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "QUERY")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:reference sound)
   (:type :object)
   (:group-id nil)
   (:name nil)
   (:x 298)
   (:y 276)
   (:w 242)
   (:h 64)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:name nil)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock :locked)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "MARKERS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "markers") (:reactive nil)))
   (:window (:size (939 221)) (:position (471 294)))
   (:edition-params (:show-timeline nil))
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 4900)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:default-frame-type marker-frame)
       (:frames
        (:list
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 100)
            (:item-type :master)
            (:date 100)
            (:attributes nil)
            (:label "D"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 300)
            (:item-type 300)
            (:date 300)
            (:attributes nil)
            (:label "A"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 500)
            (:item-type 500)
            (:date 500)
            (:attributes nil)
            (:label "C"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 700)
            (:item-type 700)
            (:date 700)
            (:attributes nil)
            (:label "A"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 900)
            (:item-type 900)
            (:date 900)
            (:attributes nil)
            (:label "B"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 1100)
            (:item-type 1100)
            (:date 1100)
            (:attributes nil)
            (:label "B"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 1300)
            (:item-type 1300)
            (:date 1300)
            (:attributes nil)
            (:label "C"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 1500)
            (:item-type 1500)
            (:date 1500)
            (:attributes nil)
            (:label "A"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 1700)
            (:item-type 1700)
            (:date 1700)
            (:attributes nil)
            (:label "A"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 1900)
            (:item-type 1900)
            (:date 1900)
            (:attributes nil)
            (:label "C"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 2100)
            (:item-type 2100)
            (:date 2100)
            (:attributes nil)
            (:label "D"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 2300)
            (:item-type 2300)
            (:date 2300)
            (:attributes nil)
            (:label "A"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 2500)
            (:item-type 2500)
            (:date 2500)
            (:attributes nil)
            (:label "B"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 2700)
            (:item-type 2700)
            (:date 2700)
            (:attributes nil)
            (:label "D"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 2900)
            (:item-type 2900)
            (:date 2900)
            (:attributes nil)
            (:label "B"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 3100)
            (:item-type 3100)
            (:date 3100)
            (:attributes nil)
            (:label "B"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 3300)
            (:item-type 3300)
            (:date 3300)
            (:attributes nil)
            (:label "C"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 3500)
            (:item-type 3500)
            (:date 3500)
            (:attributes nil)
            (:label "C"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 3700)
            (:item-type 3700)
            (:date 3700)
            (:attributes nil)
            (:label "A"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 3900)
            (:item-type 3900)
            (:date 3900)
            (:attributes nil)
            (:label "C"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 4100)
            (:item-type 4100)
            (:date 4100)
            (:attributes nil)
            (:label "A"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 4300)
            (:item-type 4300)
            (:date 4300)
            (:attributes nil)
            (:label "D"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 4500)
            (:item-type 4500)
            (:date 4500)
            (:attributes nil)
            (:label "B"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 4700)
            (:item-type 4700)
            (:date 4700)
            (:attributes nil)
            (:label "B"))))
         (:object
          (:class marker-frame)
          (:slots
           ((:item-time nil)
            (:item-internal-time 4900)
            (:item-type :master)
            (:date 4900)
            (:attributes nil)
            (:label "C"))))))
       (:buffer nil)
       (:n-samples 262124)
       (:n-channels 1)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers
        (:list
         (:list 100 "D")
         (:list 300 "A")
         (:list 500 "C")
         (:list 700 "A")
         (:list 900 "B")
         (:list 1100 "B")
         (:list 1300 "C")
         (:list 1500 "A")
         (:list 1700 "A")
         (:list 1900 "C")
         (:list 2100 "D")
         (:list 2300 "A")
         (:list 2500 "B")
         (:list 2700 "D")
         (:list 2900 "B")
         (:list 3100 "B")
         (:list 3300 "C")
         (:list 3500 "C")
         (:list 3700 "A")
         (:list 3900 "C")
         (:list 4100 "A")
         (:list 4300 "D")
         (:list 4500 "B")
         (:list 4700 "B")
         (:list 4900 "C")))
       (:file-pathname
        (:pathname
         (:directory
          (:absolute
           "Users"
           "bresson"
           "_SHARED-FILES"
           "IN-FILES"
           "SOUNDFILES"))
         (:device :unspecific)
         (:host nil)
         (:name "guitar-lick")
         (:type "aif")))
       (:sample-rate 44100)
       (:n-channels 1)
       (:n-samples 262124)
       (:gain 1.0)
       (:access-from-file nil)))))
   (:id 2))
  (:box
   (:reference arithm-ser)
   (:type :function)
   (:group-id nil)
   (:name "arithm-ser")
   (:x 507)
   (:y 30)
   (:w 89)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 0)
     (:reactive nil))
    (:input (:type :standard) (:name "END") (:value 5) (:reactive nil))
    (:input
     (:type :standard)
     (:name "STEP")
     (:value 0.2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 588)
   (:y 0)
   (:w 36)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 200)
   (:id 4))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 540)
   (:y 0)
   (:w 42)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5000)
   (:id 5))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 497)
   (:y 0)
   (:w 36)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100)
   (:id 6))
  (:box
   (:reference file-chooser)
   (:type :function)
   (:group-id nil)
   (:name "file-chooser")
   (:x 167)
   (:y 197)
   (:w 96)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:reference pathname)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 34)
   (:y 231)
   (:w 372)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 8))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 602)
   (:y 90)
   (:w 99)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list "A" "B" "C" "D"))
   (:id 9))
  (:box
   (:reference nth-random)
   (:type :function)
   (:group-id nil)
   (:name "nth-random")
   (:x 604)
   (:y 124)
   (:w 97)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:reference
    (:object
     (:class repeater)
     (:slots
      ((:name "repeat-n")
       (:protected-p nil)
       (:icon nil)
       (:n-iter 25)))))
   (:type :special)
   (:group-id nil)
   (:name "repeat-n")
   (:x 627)
   (:y 162)
   (:w 90)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:inputs
    (:input
     (:type :standard)
     (:name "program to repeat")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "n") (:value 0) (:reactive nil)))
   (:outputs (:output (:name "collected results") (:reactive nil)))
   (:id 11))
  (:comment
   (:x 604)
   (:y 71)
   (:w 80)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "dummy labels")
   (:id 12))
  (:box
   (:reference length)
   (:type :function)
   (:group-id nil)
   (:name "length")
   (:x 721)
   (:y 75)
   (:w 69)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 744)
   (:y 118)
   (:w 32)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 25)
   (:id 14))
  (:comment
   (:x 487)
   (:y 66)
   (:w 52)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "markers")
   (:id 15))
  (:box
   (:reference mapcar)
   (:type :function)
   (:group-id nil)
   (:name "mapcar")
   (:x 317)
   (:y 605)
   (:w 75)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:reference mapcar)
   (:type :function)
   (:group-id nil)
   (:name "mapcar")
   (:x 605)
   (:y 868)
   (:w 75)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:reference read-from-string)
   (:type :function)
   (:group-id nil)
   (:name "read-from-string")
   (:x 510)
   (:y 821)
   (:w 119)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda :lambda)
   (:inputs
    (:input
     (:type :standard)
     (:name "STRING")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:reference
    (:patch
     (:om-version 0.0102)
     (:name "remix")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (528 694)) (:position (389 112)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:reference
        (:in (:type omin) (:index 1) (:name "SEGMENTS") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "SEGMENTS")
       (:x 154)
       (:y 59)
       (:w 81)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "out")
       (:x 268)
       (:y 569)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:reference
        (:in (:type omin) (:index 2) (:name "SOUND") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "SOUND")
       (:x 91)
       (:y 206)
       (:w 61)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:reference
        (:in (:type omin) (:index 3) (:name "CROSSFADE") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "CROSSFADE")
       (:x 320)
       (:y 144)
       (:w 84)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:reference
        (:object
         (:class ompatchiterator)
         (:slots
          ((:name "iterate")
           (:protected-p nil)
           (:icon nil)
           (:n-iter 0)))))
       (:type :special)
       (:group-id nil)
       (:name "iterate")
       (:x 134)
       (:y 380)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:reference
        (:object
         (:class omlooplist)
         (:slots
          ((:name "list-loop")
           (:protected-p nil)
           (:icon nil)
           (:looped-list nil)))))
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 166)
       (:y 116)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 5))
      (:box
       (:reference
        (:object
         (:class omcollect)
         (:slots ((:name "collect") (:protected-p nil) (:icon nil)))))
       (:type :special)
       (:group-id nil)
       (:name "collect")
       (:x 273)
       (:y 332)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 6))
      (:box
       (:reference split)
       (:type :function)
       (:group-id nil)
       (:name "split")
       (:x 170)
       (:y 169)
       (:w 59)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 7))
      (:box
       (:reference sound-cut)
       (:type :function)
       (:group-id nil)
       (:name "sound-cut")
       (:x 153)
       (:y 264)
       (:w 87)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "S")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "BEG")
         (:value 0.0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 1.0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:reference sound-seq)
       (:type :function)
       (:group-id nil)
       (:name "sound-seq")
       (:x 194)
       (:y 430)
       (:w 89)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda :lambda)
       (:inputs
        (:input
         (:type :standard)
         (:name "S1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "S2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "crossfade")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:reference reduce)
       (:type :function)
       (:group-id nil)
       (:name "reduce")
       (:x 257)
       (:y 474)
       (:w 72)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:reference om+)
       (:type :function)
       (:group-id nil)
       (:name "om+")
       (:x 242)
       (:y 225)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:reference om-)
       (:type :function)
       (:group-id nil)
       (:name "om-")
       (:x 168)
       (:y 224)
       (:w 58)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:reference sound-fade)
       (:type :function)
       (:group-id nil)
       (:name "sound-fade")
       (:x 291)
       (:y 517)
       (:w 93)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "S")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "IN")
         (:value 0.1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "OUT")
         (:value 0.1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 5 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 8 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 11 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 12 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 9 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 7 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 4 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 1))
       (:to (:box 10 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 1))
       (:to (:box 11 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 6 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 10 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 13 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 8 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 8 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 0))
       (:to (:box 1 :in 0))
       (:attributes (:color nil :style nil :modif nil))))))
   (:type :patch)
   (:group-id nil)
   (:name "remix")
   (:x 748)
   (:y 918)
   (:w 66)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEGMENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CROSSFADE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:reference sound)
   (:type :object)
   (:group-id nil)
   (:name nil)
   (:x 485)
   (:y 960)
   (:w 603)
   (:h 85)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:name nil)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size (966 385)) (:position (42 68)))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:default-frame-type marker-frame)
       (:frames nil)
       (:buffer nil)
       (:n-samples 74529)
       (:n-channels 1)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:file-pathname nil)
       (:sample-rate 44100)
       (:n-channels 1)
       (:n-samples 74529)
       (:gain 1.0)
       (:access-from-file nil)))))
   (:id 20))
  (:box
   (:reference textbuffer)
   (:type :object)
   (:group-id nil)
   (:name nil)
   (:x 716)
   (:y 576)
   (:w 170)
   (:h 73)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:name nil)
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock :locked)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "READ-MODE")
     (:value :list)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "read-mode") (:reactive nil)))
   (:window (:size (453 118)) (:position (105 137)))
   (:edition-params (:read-mode :list))
   (:value
    (:object
     (:class textbuffer)
     (:slots ((:contents (:list "A B C D A C D B "))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 21))
  (:box
   (:reference mapcar)
   (:type :function)
   (:group-id nil)
   (:name "mapcar")
   (:x 750)
   (:y 700)
   (:w 75)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 796)
   (:y 856)
   (:w 36)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 10)
   (:id 23))
  (:box
   (:reference string-upcase)
   (:type :function)
   (:group-id nil)
   (:name "string-upcase")
   (:x 666)
   (:y 658)
   (:w 103)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda :lambda)
   (:inputs
    (:input
     (:type :standard)
     (:name "STRING")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:reference list)
   (:type :function)
   (:group-id nil)
   (:name "list")
   (:x 601)
   (:y 195)
   (:w 52)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 25))
  (:box
   (:reference mat-trans)
   (:type :function)
   (:group-id nil)
   (:name "mat-trans")
   (:x 579)
   (:y 235)
   (:w 86)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MATRIX")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:reference cdr)
   (:type :function)
   (:group-id nil)
   (:name "cdr")
   (:x 377)
   (:y 450)
   (:w 54)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "X")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 27))
  (:box
   (:reference butlast)
   (:type :function)
   (:group-id nil)
   (:name "butlast")
   (:x 297)
   (:y 451)
   (:w 72)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 28))
  (:box
   (:reference mat-trans)
   (:type :function)
   (:group-id nil)
   (:name "mat-trans")
   (:x 320)
   (:y 528)
   (:w 86)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MATRIX")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 29))
  (:box
   (:reference list)
   (:type :function)
   (:group-id nil)
   (:name "list")
   (:x 327)
   (:y 491)
   (:w 83)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 30))
  (:box
   (:reference mat-trans)
   (:type :function)
   (:group-id nil)
   (:name "mat-trans")
   (:x 427)
   (:y 356)
   (:w 86)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MATRIX")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 31))
  (:box
   (:reference split)
   (:type :function)
   (:group-id nil)
   (:name "split")
   (:x 412)
   (:y 392)
   (:w 126)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 32))
  (:comment
   (:x 368)
   (:y 397)
   (:w 43)
   (:h 25)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14.0D0) (:style :italic)))
     (:t-or-nil t)))
   (:align nil)
   (:text "times")
   (:id 33))
  (:comment
   (:x 544)
   (:y 398)
   (:w 45)
   (:h 25)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14.0D0) (:style :italic)))
     (:t-or-nil t)))
   (:align nil)
   (:text "labels")
   (:id 34))
  (:comment
   (:x 476)
   (:y 870)
   (:w 128)
   (:h 25)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14.0D0) (:style :italic)))
     (:t-or-nil t)))
   (:align nil)
   (:text "get-segments (t1 t2)")
   (:id 35))
  (:box
   (:reference write-to-string)
   (:type :function)
   (:group-id nil)
   (:name "write-to-string")
   (:x 241)
   (:y 566)
   (:w 109)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda :lambda)
   (:inputs
    (:input
     (:type :standard)
     (:name "OBJECT")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 36)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 1 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 17 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 2 :out 1))
   (:to (:box 31 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 25 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 3 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 3 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 3 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 8 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 2 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 10 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 11 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 25 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 14 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 11 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 0 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 19 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 17 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 20 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 1))
   (:to (:box 22 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 1 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 23 :out 0))
   (:to (:box 19 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 24 :out 0))
   (:to (:box 22 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 25 :out 0))
   (:to (:box 26 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 26 :out 0))
   (:to (:box 2 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 27 :out 0))
   (:to (:box 30 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 28 :out 0))
   (:to (:box 30 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 29 :out 0))
   (:to (:box 16 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 30 :out 0))
   (:to (:box 29 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 31 :out 0))
   (:to (:box 32 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 32 :out 0))
   (:to (:box 28 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 32 :out 0))
   (:to (:box 27 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 32 :out 1))
   (:to (:box 0 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 36 :out 0))
   (:to (:box 16 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))