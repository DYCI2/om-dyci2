
(:patch
 (:name "generate_interpretations_of_scenario_sync")
 (:doc "")
 (:info
  (:created "2021/07/02 10:06:10")
  (:modified "2021/07/09 12:09:13")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1343 723)) (:position (-1343 23)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 1) (:name "len_scen") (:doc "")))
   (:group-id nil)
   (:name "len_scen")
   (:x 652)
   (:y 155)
   (:w 74)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :io)
   (:reference (:out (:type omout) (:name "out") (:index 1) (:doc "")))
   (:group-id nil)
   (:name "out")
   (:x 38)
   (:y 753)
   (:w 68)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "out-value")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 1))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 2) (:name "scen_max_cont") (:doc "")))
   (:group-id nil)
   (:name "scen_max_cont")
   (:x 736)
   (:y 159)
   (:w 127)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :io)
   (:reference
    (:in
     (:type omin)
     (:index 3)
     (:name "voice_max_cont_list")
     (:doc "")))
   (:group-id nil)
   (:name "voice_max_cont_list")
   (:x 448)
   (:y 73)
   (:w 130)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :io)
   (:reference
    (:in
     (:type omin)
     (:index 4)
     (:name "path_output_directory")
     (:doc "")))
   (:group-id nil)
   (:name "path_output_directory")
   (:x 817)
   (:y 260)
   (:w 148)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :io)
   (:reference (:in (:type omin) (:index 5) (:name "xfade") (:doc "")))
   (:group-id nil)
   (:name "xfade")
   (:x 272)
   (:y 292)
   (:w 51)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 6) (:name "scenario") (:doc "")))
   (:group-id nil)
   (:name "scenario")
   (:x 298)
   (:y 167)
   (:w 81)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 7) (:name "voice_generator") (:doc "")))
   (:group-id nil)
   (:name "voice_generator")
   (:x 14)
   (:y 50)
   (:w 108)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 8) (:name "snd_database") (:doc "")))
   (:group-id nil)
   (:name "snd_database")
   (:x 5)
   (:y 304)
   (:w 104)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :io)
   (:reference
    (:in
     (:type omin)
     (:index 9)
     (:name "slave_list_dur_sync")
     (:doc "")))
   (:group-id nil)
   (:name "slave_list_dur_sync")
   (:x 939)
   (:y 64)
   (:w 127)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 10) (:name "stretch_mode") (:doc "")))
   (:group-id nil)
   (:name "stretch_mode")
   (:x 1097)
   (:y 63)
   (:w 127)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :io)
   (:reference
    (:out (:type omout) (:name "list_dur_sync") (:index 2) (:doc "")))
   (:group-id nil)
   (:name "list_dur_sync")
   (:x 102)
   (:y 754)
   (:w 92)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "out-value")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 11))
  (:box
   (:type :special)
   (:reference loop-for)
   (:group-id nil)
   (:name "for")
   (:x 896)
   (:y 410)
   (:w 50)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "from")
     (:value 1)
     (:reactive nil))
    (:input (:type :standard) (:name "to") (:value 3) (:reactive nil))
    (:input (:type :optional) (:name "by") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 12))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 273)
   (:y 66)
   (:w 65)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 13))
  (:box
   (:type :special)
   (:reference iterate)
   (:group-id nil)
   (:name "iterate")
   (:x 179)
   (:y 715)
   (:w 105)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 14))
  (:box
   (:type :function)
   (:reference length)
   (:group-id nil)
   (:name "length")
   (:x 452)
   (:y 311)
   (:w 71)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :eval-once)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :function)
   (:reference make-list)
   (:group-id nil)
   (:name "make-list")
   (:x 757)
   (:y 349)
   (:w 86)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SIZE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "initial-element")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :function)
   (:reference make-list)
   (:group-id nil)
   (:name "make-list")
   (:x 577)
   (:y 349)
   (:w 86)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SIZE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "initial-element")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 800)
   (:y 406)
   (:w 65)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 18))
  (:box
   (:type :function)
   (:reference make-list)
   (:group-id nil)
   (:name "make-list")
   (:x 665)
   (:y 349)
   (:w 86)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SIZE")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "initial-element")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 671)
   (:y 407)
   (:w 65)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 20))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 583)
   (:y 407)
   (:w 65)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 21))
  (:box
   (:type :function)
   (:reference format)
   (:group-id nil)
   (:name "format")
   (:x 573)
   (:y 278)
   (:w 125)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "DESTINATION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTROL-STRING")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 581)
   (:y 234)
   (:w 73)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "[L~DC~D]")
   (:id 23))
  (:box
   (:type :function)
   (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
   (:group-id nil)
   (:name "om-print-format")
   (:x 901)
   (:y 576)
   (:w 120)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FORMAT-STRING")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "args")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "prompt")
     (:value "DYCI2")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 843)
   (:y 504)
   (:w 102)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "ITERATION #~D")
   (:id 25))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 929)
   (:y 544)
   (:w 53)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:type :function)
   (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
   (:group-id nil)
   (:name "om-print-format")
   (:x 313)
   (:y 588)
   (:w 120)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FORMAT-STRING")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "args")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "prompt")
     (:value "DYCI2")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 27))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 246)
   (:y 554)
   (:w 248)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "FILTERED GENERATED SEQUENCE~A")
   (:id 28))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 342)
   (:y 529)
   (:w 53)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 29))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative))
      (:device :unspecific)
      (:host :unspecific)
      (:name "path_generated_sequence")
      (:type "opat"))))
   (:group-id nil)
   (:name "path_generated_sequence")
   (:x 631)
   (:y 495)
   (:w 182)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "name_scen")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "len_scen")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "cont_scen")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "idtf_gen")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "cont_gen")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "path_output_directory")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "path") (:reactive nil)))
   (:id 30))
  (:box
   (:type :special)
   (:reference collect)
   (:group-id nil)
   (:name "collect")
   (:x 44)
   (:y 615)
   (:w 56)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data-in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "push")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "init")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "collect") (:reactive nil))
    (:output (:name "data-out") (:reactive nil))
    (:output (:name "init") (:reactive nil)))
   (:id 31))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative))
      (:device :unspecific)
      (:host :unspecific)
      (:name "generate_sequence")
      (:type "opat"))))
   (:group-id nil)
   (:name "generate_sequence")
   (:x 39)
   (:y 139)
   (:w 153)
   (:h 52)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock :eval-once)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "generator")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "max_continuity")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "scenario")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "filtered_generated_sequence") (:reactive nil))
    (:output (:name "generated_sequence") (:reactive nil)))
   (:id 32))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative))
      (:device :unspecific)
      (:host :unspecific)
      (:name "remix_supervp")
      (:type "opat"))))
   (:group-id nil)
   (:name "remix_supervp")
   (:x 41)
   (:y 447)
   (:w 117)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock :eval-once)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOUNDS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SEGMENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CROSSFADE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "outfile")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST_DUR_SYNC")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STRETCH_MODE")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "list_dur") (:reactive nil)))
   (:id 33))
  (:box
   (:type :special)
   (:reference collect)
   (:group-id nil)
   (:name "collect")
   (:x 120)
   (:y 616)
   (:w 56)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data-in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "push")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "init")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "collect") (:reactive nil))
    (:output (:name "data-out") (:reactive nil))
    (:output (:name "init") (:reactive nil)))
   (:id 34)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 19 :in 1))
   (:attributes (:color nil :style nil :modif (0 -131/495))))
  (:connection (:from (:box 0 :out 0)) (:to (:box 22 :in 2)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 16 :in 1))
   (:attributes (:color nil :style nil :modif (0 -131/496))))
  (:connection (:from (:box 2 :out 0)) (:to (:box 22 :in 3)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 15 :in 0))
   (:attributes (:color nil :style nil :modif (0 -3/41))))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif (0 -11/60))))
  (:connection (:from (:box 4 :out 0)) (:to (:box 30 :in 5)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 33 :in 2)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 32 :in 2))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 32 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 33 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 33 :in 4)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 33 :in 5)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 26 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 30 :in 3)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 30 :in 4)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 32 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 12 :in 1))
   (:attributes (:color nil :style nil :modif (0 45973/277033))))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 16 :in 0))
   (:attributes (:color nil :style nil :modif (0 190/429))))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 17 :in 0))
   (:attributes (:color nil :style nil :modif (0 26489/59345))))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 19 :in 0))
   (:attributes (:color nil :style nil :modif (0 0.445338))))
  (:connection (:from (:box 16 :out 0)) (:to (:box 18 :in 0)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 21 :in 0)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 30 :in 2)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 20 :in 0)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 30 :in 1)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 30 :in 0)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 17 :in 1)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 22 :in 1)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 24 :in 0)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 24 :in 1)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 14 :in 3)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 27 :in 0)))
  (:connection (:from (:box 29 :out 0)) (:to (:box 27 :in 1)))
  (:connection (:from (:box 30 :out 0)) (:to (:box 33 :in 3)))
  (:connection (:from (:box 31 :out 0)) (:to (:box 14 :in 1)))
  (:connection (:from (:box 31 :out 1)) (:to (:box 1 :in 0)))
  (:connection
   (:from (:box 32 :out 0))
   (:to (:box 29 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif (0 -43/289))))
  (:connection (:from (:box 32 :out 0)) (:to (:box 33 :in 1)))
  (:connection (:from (:box 33 :out 0)) (:to (:box 31 :in 0)))
  (:connection (:from (:box 33 :out 1)) (:to (:box 34 :in 0)))
  (:connection (:from (:box 34 :out 0)) (:to (:box 14 :in 2)))
  (:connection (:from (:box 34 :out 1)) (:to (:box 11 :in 0)))))