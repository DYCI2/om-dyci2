
(:patch
 (:name "generate_and_write_variations")
 (:doc "")
 (:info
  (:created "2021/07/02 10:06:10")
  (:modified "2021/07/02 10:10:18")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1107 723)) (:position (-1191 23)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 1) (:name "len_scen") (:doc "")))
   (:group-id nil)
   (:name "len_scen")
   (:x 657)
   (:y 206)
   (:w 74)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :io)
   (:reference (:out (:type omout) (:name "out") (:index 1) (:doc "")))
   (:group-id nil)
   (:name "out")
   (:x 267)
   (:y 832)
   (:w 68)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "out-value")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 1))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 2) (:name "cont_scen") (:doc "")))
   (:group-id nil)
   (:name "cont_scen")
   (:x 741)
   (:y 210)
   (:w 81)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 3) (:name "cont_gen") (:doc "")))
   (:group-id nil)
   (:name "cont_gen")
   (:x 453)
   (:y 124)
   (:w 81)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :io)
   (:reference
    (:in
     (:type omin)
     (:index 4)
     (:name "path_output_directory")
     (:doc "")))
   (:group-id nil)
   (:name "path_output_directory")
   (:x 822)
   (:y 311)
   (:w 148)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :io)
   (:reference (:in (:type omin) (:index 5) (:name "xfade") (:doc "")))
   (:group-id nil)
   (:name "xfade")
   (:x 277)
   (:y 343)
   (:w 51)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :io)
   (:reference (:in (:type omin) (:index 6) (:name "query") (:doc "")))
   (:group-id nil)
   (:name "query")
   (:x 305)
   (:y 269)
   (:w 81)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 7) (:name "GENERATOR") (:doc "")))
   (:group-id nil)
   (:name "GENERATOR")
   (:x 77)
   (:y 112)
   (:w 98)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 8) (:name "snd_database") (:doc "")))
   (:group-id nil)
   (:name "snd_database")
   (:x 10)
   (:y 355)
   (:w 104)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative))
      (:device :unspecific)
      (:host :unspecific)
      (:name "remix")
      (:type "opat"))))
   (:group-id nil)
   (:name "remix")
   (:x 41)
   (:y 404)
   (:w 105)
   (:h 81)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOUNDS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SEGMENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CROSSFADE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 156)
   (:y 147)
   (:w 107)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "max_continuity")
   (:id 10))
  (:box
   (:type :function)
   (:reference save-sound)
   (:group-id nil)
   (:name "save-sound")
   (:x 144)
   (:y 560)
   (:w 100)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FILENAME")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:type :special)
   (:reference loop-for)
   (:group-id nil)
   (:name "for")
   (:x 836)
   (:y 458)
   (:w 50)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "from")
     (:value 1)
     (:reactive nil))
    (:input (:type :standard) (:name "to") (:value 3) (:reactive nil))
    (:input (:type :optional) (:name "by") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 12))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 278)
   (:y 117)
   (:w 65)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 13))
  (:box
   (:type :special)
   (:reference iterate)
   (:group-id nil)
   (:name "iterate")
   (:x 156)
   (:y 724)
   (:w 100)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 14))
  (:box
   (:type :function)
   (:reference length)
   (:group-id nil)
   (:name "length")
   (:x 457)
   (:y 362)
   (:w 71)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "path_generated_sequence")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (939 584)) (:position (42 69)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "name_scen") (:doc "")))
       (:group-id nil)
       (:name "name_scen")
       (:x 103)
       (:y 34)
       (:w 84)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "path") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "path")
       (:x 230)
       (:y 507)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "len_scen") (:doc "")))
       (:group-id nil)
       (:name "len_scen")
       (:x 222)
       (:y 34)
       (:w 74)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "cont_scen") (:doc "")))
       (:group-id nil)
       (:name "cont_scen")
       (:x 315)
       (:y 37)
       (:w 81)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 4) (:name "idtf_gen") (:doc "")))
       (:group-id nil)
       (:name "idtf_gen")
       (:x 417)
       (:y 37)
       (:w 81)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 5) (:name "cont_gen") (:doc "")))
       (:group-id nil)
       (:name "cont_gen")
       (:x 500)
       (:y 37)
       (:w 81)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 6)
         (:name "path_output_directory")
         (:doc "")))
       (:group-id nil)
       (:name "path_output_directory")
       (:x 602)
       (:y 37)
       (:w 148)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :optional)
         (:name "internal input value")
         (:value "/Users/nika/Desktop/OM7/OM-DYCI2_Tests/Results/")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference concatenate)
       (:group-id nil)
       (:name "concatenate")
       (:x 19)
       (:y 389)
       (:w 500)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RESULT-TYPE")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "sequences")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "sequences")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "sequences")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "sequences")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "sequences")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "sequences")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "sequences")
         (:value ".aiff")
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "sequences")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "sequences")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "sequences")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "sequences")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "sequences")
         (:value ".wav")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "value box")
       (:x 17)
       (:y 301)
       (:w 47)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value string)
       (:id 8))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 83)
       (:y 339)
       (:w 54)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "Scen")
       (:id 9))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 158)
       (:y 339)
       (:w 40)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "_L")
       (:id 10))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 226)
       (:y 339)
       (:w 42)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "_C")
       (:id 11))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 289)
       (:y 333)
       (:w 53)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "-Gen")
       (:id 12))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 363)
       (:y 333)
       (:w 42)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "_C")
       (:id 13))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 203)
       (:y 142)
       (:w 111)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 299)
       (:y 110)
       (:w 111)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 401)
       (:y 174)
       (:w 111)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 525)
       (:y 142)
       (:w 111)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :function)
       (:reference namestring)
       (:group-id nil)
       (:name "namestring")
       (:x 19)
       (:y 219)
       (:w 97)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "P")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 7 :in 3)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 2)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 7 :in 4)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 7 :in 6)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 7 :in 8)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 7 :in 10)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 7 :in 5)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 7 :in 7)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 7 :in 9)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 7 :in 11)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 7 :in 1))))))
   (:group-id nil)
   (:name "path_generated_sequence")
   (:x 599)
   (:y 520)
   (:w 200)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "name_scen")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "len_scen")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "cont_scen")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "idtf_gen")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "cont_gen")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "path_output_directory")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "path") (:reactive nil)))
   (:id 16))
  (:box
   (:type :function)
   (:reference make-list)
   (:group-id nil)
   (:name "make-list")
   (:x 762)
   (:y 400)
   (:w 86)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SIZE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "initial-element")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :function)
   (:reference make-list)
   (:group-id nil)
   (:name "make-list")
   (:x 582)
   (:y 400)
   (:w 86)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SIZE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "initial-element")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 768)
   (:y 458)
   (:w 65)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 19))
  (:box
   (:type :function)
   (:reference make-list)
   (:group-id nil)
   (:name "make-list")
   (:x 670)
   (:y 400)
   (:w 86)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SIZE")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "initial-element")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 676)
   (:y 458)
   (:w 65)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 21))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 588)
   (:y 458)
   (:w 65)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 22))
  (:box
   (:type :function)
   (:reference format)
   (:group-id nil)
   (:name "format")
   (:x 578)
   (:y 329)
   (:w 125)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "DESTINATION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTROL-STRING")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "format-arguments")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 23))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 586)
   (:y 285)
   (:w 73)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "[L~DC~D]")
   (:id 24))
  (:box
   (:type :function)
   (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
   (:group-id nil)
   (:name "om-print-format")
   (:x 906)
   (:y 627)
   (:w 120)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FORMAT-STRING")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "args")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "prompt")
     (:value "DYCI2")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 25))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 848)
   (:y 555)
   (:w 102)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "ITERATION #~D")
   (:id 26))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 934)
   (:y 595)
   (:w 53)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 27))
  (:box
   (:type :function)
   (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
   (:group-id nil)
   (:name "om-print-format")
   (:x 318)
   (:y 639)
   (:w 120)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FORMAT-STRING")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "args")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "prompt")
     (:value "DYCI2")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 28))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 251)
   (:y 605)
   (:w 100)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "OUTPUT ~A")
   (:id 29))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 347)
   (:y 580)
   (:w 53)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 30))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "filter-output")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (500 500)) (:position (537 294)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (output) "
       "  (if "
       "      (and (> (length output) 0) (nth 0 output)) "
       "      output "
       "    ;(if "
       "     ;   (and (> (length output) 0) (nth 1 output))"
       "        ;(list \"(1 0 200)\" \"(1 301 600)\")"
       "    (loop for i from 0 to 5 collect \"(1 0 100)\")"
       "      ;)"
       "    )"
       "  )"))))
   (:group-id nil)
   (:name "filter-output")
   (:x 118)
   (:y 320)
   (:w 98)
   (:h 28)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "OUTPUT")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 31))
  (:box
   (:type :function)
   (:reference remove)
   (:group-id nil)
   (:name "remove")
   (:x 119)
   (:y 351)
   (:w 78)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ITEM")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 32))
  (:box
   (:type :function)
   (:reference (:symbol "OM-PRINT-FORMAT" "OM-LISP"))
   (:group-id nil)
   (:name "om-print-format")
   (:x 524)
   (:y 638)
   (:w 120)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FORMAT-STRING")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "args")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "prompt")
     (:value "DYCI2")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 33))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 457)
   (:y 604)
   (:w 120)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "original output ~A")
   (:id 34))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 553)
   (:y 579)
   (:w 53)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 35))
  (:box
   (:library "om-dyci2")
   (:type :function)
   (:reference (:symbol "DYCI2SETPARAM" "DYCI2"))
   (:group-id nil)
   (:name "dyci2setparam")
   (:x 52)
   (:y 239)
   (:w 116)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PARAMETER")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VALUE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 36))
  (:box
   (:library "om-dyci2")
   (:type :function)
   (:reference (:symbol "DYCI2QUERY" "DYCI2"))
   (:group-id nil)
   (:name "dyci2query")
   (:x 157)
   (:y 276)
   (:w 96)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "QUERY")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 37))
  (:box
   (:type :function)
   (:reference make-list)
   (:group-id nil)
   (:name "make-list")
   (:x 926)
   (:y 399)
   (:w 86)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SIZE")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "initial-element")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 38))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 927)
   (:y 443)
   (:w 65)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 39)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 20 :in 1))
   (:attributes (:color nil :style nil :modif (0 -131/495))))
  (:connection (:from (:box 0 :out 0)) (:to (:box 23 :in 2)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 17 :in 1))
   (:attributes (:color nil :style nil :modif (0 -131/496))))
  (:connection (:from (:box 2 :out 0)) (:to (:box 23 :in 3)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 15 :in 0))
   (:attributes (:color nil :style nil :modif (0 -3/41))))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif (0 -11/60))))
  (:connection (:from (:box 4 :out 0)) (:to (:box 38 :in 1)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 16 :in 5)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 9 :in 2))
   (:attributes (:color nil :style nil :modif (0 -0.09545457))))
  (:connection (:from (:box 6 :out 0)) (:to (:box 37 :in 1)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 36 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 11 :in 0))
   (:attributes (:color nil :style nil :modif (0 1/230))))
  (:connection (:from (:box 9 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 36 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 16 :in 3)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 27 :in 0)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 16 :in 4))
   (:attributes (:color nil :style nil :modif (0 -1/4))))
  (:connection (:from (:box 13 :out 0)) (:to (:box 36 :in 2)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 12 :in 1))
   (:attributes (:color nil :style nil :modif (0 45973/277033))))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 17 :in 0))
   (:attributes (:color nil :style nil :modif (0 190/429))))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 18 :in 0))
   (:attributes (:color nil :style nil :modif (0 26489/59345))))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 20 :in 0))
   (:attributes (:color nil :style nil :modif (0 0.445338))))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 11 :in 1))
   (:attributes (:color nil :style nil :modif (-3/511 0))))
  (:connection (:from (:box 17 :out 0)) (:to (:box 19 :in 0)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 22 :in 0)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 16 :in 2)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 21 :in 0)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 16 :in 1)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 16 :in 0)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 18 :in 1)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 23 :in 1)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 14 :in 1)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 25 :in 0)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 25 :in 1)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 14 :in 3)))
  (:connection (:from (:box 29 :out 0)) (:to (:box 28 :in 0)))
  (:connection (:from (:box 30 :out 0)) (:to (:box 28 :in 1)))
  (:connection (:from (:box 31 :out 0)) (:to (:box 32 :in 1)))
  (:connection (:from (:box 31 :out 0)) (:to (:box 35 :in 0)))
  (:connection
   (:from (:box 32 :out 0))
   (:to (:box 9 :in 1))
   (:attributes (:color nil :style nil :modif (0 -3/16))))
  (:connection (:from (:box 32 :out 0)) (:to (:box 30 :in 0)))
  (:connection (:from (:box 33 :out 0)) (:to (:box 14 :in 2)))
  (:connection (:from (:box 34 :out 0)) (:to (:box 33 :in 0)))
  (:connection (:from (:box 35 :out 0)) (:to (:box 33 :in 1)))
  (:connection (:from (:box 36 :out 0)) (:to (:box 37 :in 0)))
  (:connection (:from (:box 37 :out 0)) (:to (:box 31 :in 0)))
  (:connection (:from (:box 38 :out 0)) (:to (:box 39 :in 0)))))