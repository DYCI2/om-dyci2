
(:patch
 (:om-version 0.05)
 (:name "1-source-filt-synth")
 (:doc "")
 (:info
  (:created "2019/10/29 20:42:19")
  (:modified "2019/10/29 20:48:26"))
 (:window (:size (496 380)) (:position (464 483)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference simple-base-string)
   (:group-id nil)
   (:name "aux1")
   (:x 333)
   (:y 142)
   (:w 53)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "Out.aif")
   (:id 0))
  (:comment
   (:x 125)
   (:y 23)
   (:w 246)
   (:h 25)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :bold)))
   (:align nil)
   (:text "Source/Filter Cross Synthesis")
   (:id 1))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name "SOUND2")
   (:x 152)
   (:y 83)
   (:w 110)
   (:h 53)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 5097.211)
       (:n-samples 224787)
       (:n-channels 1)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname
        (:pathname
         (:directory (:relative :up :up "resources" "sound"))
         (:device :unspecific)
         (:host :unspecific)
         (:name "voix-6NV0033")
         (:type "aif")))))))
   (:id 2))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name "SOUND2")
   (:x 51)
   (:y 84)
   (:w 98)
   (:h 52)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 2491.9048)
       (:n-samples 109893)
       (:n-channels 1)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname
        (:pathname
         (:directory (:relative :up :up "resources" "sound"))
         (:device :unspecific)
         (:host :unspecific)
         (:name "PianoOriginal")
         (:type "aiff")))))))
   (:id 3))
  (:box
   (:library "OM-SuperVP")
   (:type :function)
   (:reference supervp-sourcefilter-synthesis)
   (:group-id nil)
   (:name "supervp-sourcefilter-synthesis")
   (:x 113)
   (:y 174)
   (:w 264)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOURCE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FILTRE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "WINDOWSIZE")
     (:value 4096)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FFTSIZE")
     (:value 4096)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "WINDOWSTEP-OVERSAMP")
     (:value 8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "WINDOW-TYPE")
     (:value "hanning")
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "NORMALIZE")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CROSSMODE")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SPECTENV-TYPE")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTFILE")
     (:value "out.aiff")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name "SOUND1")
   (:x 151)
   (:y 249)
   (:w 230)
   (:h 65)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "markers")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "markers") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:n-samples nil)
       (:n-channels nil)
       (:sample-rate nil)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname nil)))))
   (:id 5)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 4 :in 9))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 4 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 4 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 5 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))