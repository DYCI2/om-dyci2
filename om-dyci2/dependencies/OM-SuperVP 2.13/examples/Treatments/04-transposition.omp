; OM File Header - Saved 2009/06/15 16:37:19
; (6.0011 :patc (om-make-point 40 70) (om-make-point 50 50) (om-make-point 896 679) "" 183 0 nil "2009/06/15 16:37:19")
; End File Header
(in-package :om)(load-lib-for (quote ("OM-SuperVP")))(setf *om-current-persistent* (om-load-patch1 "04-transposition" (quote ((om-load-boxcomment "comment" (om-make-point 161 61) (quote "Try to connect the different parameter objetcs --->") "" (om-make-point 138 307) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 77 154) (om-make-point 100 28) (list (list 0 300) (list 2 500)) "((0 300)(2 500))" nil) (om-load-boxcomment "comment" (om-make-point 177 76) (quote "Fourth inlet : filter order. Increase this value if you want more details in the spectral enveloppe.") "" (om-make-point 628 130) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-editor-box1 "BPF" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "no documentation" "Y-POINTS" (list 0 100)) (om-load-inputfun (quote input-funbox) "no documentation" "DECIMALS" 3))) (om-make-point 238 152) (om-make-point 129 76) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.046 0.052 0.058 0.064 0.07 0.075 0.081 0.087 0.093 0.099 0.104 0.11 0.116 0.122 0.128 0.134 0.139 0.145 0.151 0.157 0.163 0.168 0.174 0.18 0.186 0.192 0.197 0.203 0.209 0.215 0.221 0.226 0.232 0.238 0.244 0.25 0.255 0.261 0.267 0.273 0.279 0.284 0.29 0.296 0.302 0.308 0.313 0.319 0.325 0.331 0.337 0.342 0.348 0.354 0.36 0.366 0.372 0.377 0.383 0.389 0.395 0.401 0.406 0.412 0.418 0.424 0.43 0.435 0.441 0.447 0.453 0.459 0.464 0.47 0.476 0.482 0.488 0.493 0.499 0.505 0.511 0.517 0.522 0.528 0.534 0.54 0.546 0.551 0.557 0.563 0.569 0.575 0.58 0.586 0.592 0.598 0.604 0.61 0.615 0.621 0.627 0.633 0.639 0.644 0.65 0.656 0.662 0.668 0.673 0.679 0.685 0.691 0.697 0.702 0.708 0.714 0.72 0.726 0.731 0.737 0.743 0.749 0.755 0.76 0.766 0.772 0.778 0.784 0.789 0.795 0.801 0.807 0.813 0.818 0.824 0.83 0.836 0.842 0.848 0.853 0.859 0.865 0.871 0.877 0.882 0.888 0.894 0.9 0.906 0.911 0.917 0.923 0.929 0.935 0.94 0.946 0.952 0.958 0.964 0.969 0.975 0.981 0.987 0.993 0.998 1.004 1.01 1.016 1.022 1.027 1.033 1.039 1.045 1.051 1.056 1.062 1.068 1.074 1.08 1.086 1.091 1.097 1.103 1.109 1.115 1.12 1.126 1.132 1.138 1.144 1.149 1.155 1.161 1.167 1.173 1.178 1.184 1.19 1.196 1.202 1.207 1.213 1.219 1.225 1.231 1.236 1.242 1.248 1.254 1.26 1.265 1.271 1.277 1.283 1.289 1.295 1.3 1.306 1.312 1.318 1.324 1.329 1.335 1.341 1.347 1.353 1.358 1.364 1.37 1.376 1.382 1.387 1.393 1.399 1.405 1.411 1.416 1.422 1.428 1.434 1.44 1.445 1.451 1.457 1.463 1.469 1.474 1.48 1.486 1.492 1.498 1.503 1.509 1.515 1.521 1.527 1.533 1.538 1.544 1.55 1.556 1.562 1.567 1.573 1.579 1.585 1.591 1.596 1.602 1.608 1.614 1.62 1.625 1.631 1.637 1.643 1.649 1.654 1.66 1.666 1.672 1.678 1.683 1.689 1.695 1.701 1.707 1.712 1.718 1.724 1.73 1.736 1.741 1.747 1.753 1.759 1.765 1.771 1.776 1.782 1.788 1.794 1.8 1.805 1.811 1.817 1.823 1.829 1.834 1.84 1.846 1.852 1.858 1.863 1.869 1.875 1.881 1.887 1.892 1.898 1.904 1.91 1.916 1.921 1.927 1.933 1.939 1.945 1.95 1.956 1.962 1.968 1.974 1.979 1.985 1.991 1.997 2.003 2.009 2.014 2.02 2.026 2.032 2.038 2.043 2.049 2.055 2.061 2.067 2.072 2.078 2.084 2.09 2.096 2.101 2.107 2.113 2.119 2.125 2.13 2.136 2.142 2.148 2.154 2.159 2.165 2.171 2.177 2.183 2.188 2.194 2.2 2.206 2.212 2.217 2.223 2.229 2.235 2.241 2.247 2.252 2.258 2.264 2.27 2.276 2.281 2.287 2.293 2.299 2.305 2.31 2.316 2.322 2.328 2.334 2.339 2.345 2.351 2.357 2.363 2.368 2.374 2.38 2.386 2.392 2.397 2.403 2.409 2.415 2.421 2.426 2.432 2.438 2.444 2.45 2.455 2.461 2.467 2.473 2.479 2.485 2.49 2.496 2.502 2.508 2.514 2.519 2.525 2.531 2.537 2.543 2.548 2.554 2.56 2.566 2.572 2.577 2.583 2.589 2.595 2.601 2.606 2.612 2.618 2.624 2.63 2.635 2.641 2.647 2.653 2.659 2.664 2.67 2.676 2.682 2.688 2.694 2.699 2.705 2.711 2.717 2.723 2.728 2.734 2.74 2.746 2.752 2.757 2.763 2.769 2.775 2.781 2.786 2.792 2.798 2.804 2.81 2.815 2.821 2.827 2.833 2.839 2.844 2.85 2.856 2.862 2.868 2.873 2.879 2.885 2.891 2.897 2.902 2.908 2.914 2.92 2.926 2.932 2.937 2.943 2.949 2.955 2.961 2.966 2.972 2.978 2.984 2.99 2.995 3.001 3.007 3.013 3.019 3.024 3.03 3.036 3.042 3.048 3.053 3.059 3.065 3.071 3.077 3.082 3.088 3.094 3.1 3.106 3.111 3.117 3.123 3.129 3.135 3.14 3.146 3.152 3.158 3.164 3.17 3.175 3.181 3.187 3.193 3.199 3.204 3.21 3.216 3.222 3.228 3.233 3.239 3.245 3.251 3.257 3.262 3.268 3.274 3.28 3.286 3.291 3.297 3.303 3.309 3.315 3.32 3.326 3.332 3.338 3.344 3.349 3.355 3.361 3.367 3.373 3.378 3.384 3.39 3.396 3.402 3.408 3.413 3.419 3.425 3.431 3.437 3.442 3.448 3.454 3.46 3.466 3.471 3.477 3.483 3.489 3.495 3.5 3.506 3.512 3.518 3.524 3.529 3.535 3.541 3.547 3.553 3.558 3.564 3.57 3.576 3.582 3.587 3.593 3.599 3.605 3.611 3.616 3.622 3.628 3.634 3.64 3.646 3.651 3.657 3.663 3.669 3.675 3.68 3.686 3.692 3.698 3.704 3.709 3.715 3.721 3.727 3.733 3.738 3.744 3.75 3.756 3.762 3.767 3.773 3.779 3.785 3.791 3.796 3.802 3.808 3.814 3.82 3.825 3.831 3.837 3.843 3.849 3.855 3.86 3.866 3.872 3.878 3.884 3.889 3.895 3.901 3.907 3.913 3.918 3.924 3.93 3.936 3.942 3.947 3.953 3.959 3.965 3.971 3.976 3.982 3.988 3.994 4.0 4.005 4.011 4.017 4.023 4.029 4.034 4.04 4.046 4.052 4.058 4.063 4.069 4.075 4.081 4.087 4.093 4.098 4.104 4.11 4.116 4.122 4.127 4.133 4.139 4.145 4.151 4.156 4.162 4.168 4.174 4.18 4.185 4.191 4.197 4.203 4.209 4.214 4.22 4.226 4.232 4.238 4.243 4.249 4.255 4.261 4.267 4.272 4.278 4.284 4.29 4.296 4.301 4.307 4.313 4.319 4.325 4.331 4.336 4.342 4.348 4.354 4.36 4.365 4.371 4.377 4.383 4.389 4.394 4.4 4.406 4.412 4.418 4.423 4.429 4.435 4.441 4.447 4.452 4.458 4.464 4.47 4.476 4.481 4.487 4.493 4.499 4.505 4.51 4.516 4.522 4.528 4.534 4.539 4.545 4.551 4.557 4.563 4.569 4.574 4.58 4.586 4.592 4.598 4.603 4.609 4.615 4.621 4.627 4.632 4.638 4.644 4.65 4.656 4.661 4.667 4.673 4.679 4.685 4.69 4.696 4.702 4.708 4.714 4.719 4.725 4.731 4.737 4.743 4.748 4.754 4.76 4.766 4.772 4.777 4.783 4.789 4.795 4.801 4.807 4.812 4.818 4.824 4.83 4.836 4.841 4.847 4.853 4.859 4.865 4.87 4.876 4.882 4.888 4.894 4.899 4.905 4.911 4.917 4.923 4.928 4.934 4.94 4.946 4.952 4.957 4.963)) (quote (50.0 62.0 90.0 106.0 104.0 132.0 138.0 144.0 150.0 156.0 162.0 168.0 172.0 174.0 182.0 188.0 210.0 236.0 246.0 254.0 266.0 268.0 274.0 276.0 284.0 294.0 294.0 294.0 294.0 294.0 294.0 294.0 290.0 288.0 272.0 268.0 268.0 268.0 268.0 268.0 268.0 272.0 274.0 280.0 282.0 284.0 286.0 286.0 288.0 288.0 290.0 292.0 292.0 292.0 292.0 292.0 292.0 288.0 278.0 278.0 276.0 250.0 248.0 132.0 132.0 124.0 124.0 124.0 38.0 38.0 38.0 38.0 38.0 38.0 108.0 136.0 230.0 230.0 234.0 234.0 234.0 242.0 250.0 254.0 260.0 278.0 294.0 294.0 294.0 294.0 294.0 294.0 286.0 278.0 272.0 270.0 270.0 266.0 264.0 258.0 258.0 216.0 216.0 216.0 216.0 216.0 216.0 216.0 238.0 276.0 278.0 280.0 294.0 308.0 314.0 316.0 316.0 316.0 316.0 316.0 316.0 316.0 316.0 316.0 316.0 316.0 316.0 320.0 322.0 326.0 326.0 330.0 330.0 332.0 334.0 334.0 334.0 334.0 334.0 334.0 308.0 262.0 260.0 260.0 248.0 232.0 204.0 182.0 170.0 162.0 158.0 156.0 150.0 146.0 142.0 138.0 134.0 118.0 106.0 104.0 104.0 100.0 88.0 86.0 84.0 84.0 82.0 82.0 82.0 80.0 78.0 78.0 74.0 72.0 64.0 64.0 64.0 64.0 64.0 64.0 70.0 90.0 90.0 90.0 90.0 90.0 90.0 86.0 84.0 80.0 74.0 74.0 74.0 74.0 74.0 74.0 78.0 80.0 86.0 90.0 90.0 92.0 94.0 94.0 94.0 94.0 94.0 94.0 94.0 94.0 94.0 94.0 94.0 94.0 94.0 94.0 92.0 92.0 92.0 92.0 88.0 80.0 74.0 70.0 42.0 24.0 22.0 18.0 -91.996 -113.996 -115.996 -115.996 -151.996 -157.996 -157.996 -157.996 -157.996 -157.996 -157.996 -157.996 -155.996 -151.996 -91.996 -91.996 -91.996 -85.996 -83.996 -83.996 -31.996 -33.996 -33.996 -45.996 -45.996 -45.996 -43.996 -43.996 -41.996 -41.996 -43.996 -43.996 -45.996 -47.996 -61.996 -85.996 -95.996 -97.996 -99.996 -99.996 -99.996 -99.996 -99.996 -99.996 -95.996 -91.996 -89.996 -79.996 -79.996 -75.996 -75.996 -73.996 -69.996 -11.996 10.0 12.0 24.0 32.0 32.0 32.0 32.0 32.0 108.0 108.0 32.0 32.0 32.0 30.0 -181.996 -181.996 -181.996 -181.996 -181.996 -181.996 -175.996 -173.996 -171.996 -169.996 -167.996 -167.996 -165.996 -165.996 -165.996 -163.996 -163.996 -161.996 -161.996 -161.996 -159.996 -159.996 16.0 34.0 68.0 70.0 70.0 70.0 70.0 70.0 70.0 40.0 38.0 38.0 34.0 34.0 34.0 34.0 34.0 32.0 26.0 26.0 22.0 -193.996 -199.996 -205.996 -215.996 -219.996 -229.996 -229.996 -229.996 -229.996 -229.996 -229.996 -221.996 -193.996 -165.996 -155.996 -151.996 -151.996 -149.996 -149.996 -149.996 -149.996 -149.996 -149.996 -149.996 -143.996 -143.996 -139.996 -119.996 -93.996 -93.996 -93.996 -93.996 -93.996 -93.996 -93.996 -97.996 -101.996 -101.996 -101.996 -103.996 -107.996 -111.996 -117.996 -117.996 -117.996 -117.996 -117.996 -117.996 -117.996 -105.996 -103.996 -101.996 -101.996 -99.996 -95.996 -95.996 -93.996 -93.996 -93.996 -93.996 -93.996 -97.996 -103.996 -105.996 -105.996 -105.996 -105.996 -107.996 -107.996 -107.996 -107.996 -107.996 -107.996 -109.996 -111.996 -111.996 -111.996 -111.996 -111.996 -111.996 -111.996 -111.996 -111.996 -111.996 -111.996 -95.996 -87.996 -77.996 -77.996 -77.996 -77.996 -77.996 -77.996 -77.996 -77.996 -77.996 -77.996 -79.996 -81.996 -81.996 -81.996 -83.996 -87.996 -87.996 -87.996 -89.996 -93.996 -93.996 -93.996 -93.996 -93.996 -93.996 -97.996 -99.996 -101.996 -107.996 -113.996 -119.996 -119.996 -119.996 -119.996 -119.996 -119.996 -117.996 -111.996 -111.996 -109.996 -109.996 -109.996 -109.996 -111.996 -111.996 -115.996 -115.996 -115.996 -115.996 -115.996 -115.996 -101.996 -97.996 -83.996 -13.996 -3.996 0.0 4.0 4.0 8.0 20.0 50.0 56.0 58.0 58.0 58.0 64.0 64.0 64.0 66.0 66.0 66.0 66.0 68.0 68.0 68.0 68.0 68.0 72.0 74.0 74.0 78.0 82.0 84.0 86.0 88.0 88.0 88.0 88.0 88.0 88.0 86.0 84.0 82.0 82.0 82.0 82.0 82.0 82.0 84.0 88.0 92.0 98.0 102.0 106.0 112.0 116.0 118.0 118.0 118.0 118.0 118.0 118.0 114.0 112.0 108.0 100.0 38.0 26.0 10.0 6.0 0.0 -89.996 -107.996 -115.996 -115.996 -115.996 -115.996 -115.996 -115.996 -111.996 -109.996 -105.996 -101.996 -95.996 -89.996 -87.996 -83.996 -81.996 -75.996 -59.996 -55.996 -53.996 -53.996 -51.996 -51.996 -47.996 -47.996 -43.996 -41.996 -41.996 -41.996 -37.996 8.0 120.0 172.0 174.0 178.0 178.0 182.0 184.0 186.0 188.0 190.0 226.0 226.0 238.0 260.0 296.0 300.0 310.0 318.0 318.0 318.0 318.0 318.0 318.0 316.0 314.0 310.0 308.0 304.0 302.0 298.0 288.0 282.0 282.0 282.0 282.0 282.0 282.0 282.0 284.0 284.0 284.0 284.0 284.0 286.0 286.0 286.0 286.0 288.0 290.0 292.0 296.0 302.0 302.0 302.0 302.0 302.0 302.0 286.0 248.0 248.0 240.0 238.0 236.0 134.0 130.0 130.0 236.0 238.0 236.0 120.0 110.0 50.0 28.0 6.0 6.0 8.0 8.0 8.0 8.0 8.0 12.0 14.0 16.0 24.0 28.0 40.0 46.0 60.0 100.0 104.0 108.0 110.0 118.0 122.0 126.0 136.0 138.0 138.0 138.0 138.0 138.0 138.0 136.0 132.0 130.0 124.0 116.0 100.0 96.0 94.0 88.0 86.0 84.0 78.0 72.0 70.0 64.0 60.0 58.0 56.0 56.0 54.0 54.0 52.0 48.0 42.0 42.0 42.0 42.0 42.0 42.0 48.0 50.0 52.0 56.0 58.0 58.0 58.0 58.0 58.0 58.0 60.0 60.0 60.0 60.0 58.0 56.0 56.0 56.0 64.0 64.0 64.0 54.0 54.0 52.0 52.0 52.0 36.0 32.0 32.0 32.0 32.0 30.0 30.0 30.0 30.0 24.0 24.0 24.0 -57.996 -59.996 -61.996 -65.996 -67.996 -79.996 -83.996 -91.996 -93.996 -93.996 -95.996 -97.996 -97.996 -97.996 -111.996 -97.996 -163.996 -163.996 -163.996 -163.996 -163.996 -163.996 -145.996 -145.996 -137.996 -137.996 -137.996 -137.996 -137.996 -135.996 -135.996 -135.996 -135.996 -135.996 -131.996 -127.996 -125.996 -123.996 -121.996 -119.996 -117.996 -117.996 -117.996 -117.996 -117.996 -117.996 -117.996 -117.996 -117.996 -117.996 -117.996 -115.996 -111.996 -107.996 -97.996 -91.996 -83.996 -79.996 -73.996 -69.996 -59.996 -47.996 -43.996 -43.996 -39.996 -39.996 -39.996 -39.996 -39.996 -43.996 -45.996 -75.996 -107.996 -113.996 -127.996 -135.996 -137.996 -139.996 -139.996 -149.996 -151.996 -151.996 -151.996 -151.996 -151.996 -151.996 -151.996 -149.996 -119.996 -109.996 -109.996 -109.996 -109.996 -107.996 -107.996 -105.996 -101.996 -95.996 20.0)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) newbpf)))) newobj) "x" nil (pairlis (quote (show-stems obj-mode palette-mode winpos winsize deltapict outport inport zoom cmnpref notechancolor? grillestep mode)) (list (quote t) 0 0 (om-make-point 40 10) (om-make-point 370 280) (om-make-point 0 0) 0 0 1 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0)) t nil nil nil) (om-load-editor-box1 "TEXTFILE" (quote textfile) (quote ((om-load-inputfun (quote input-funbox) "object or object list" "self" nil) (om-load-inputfun (quote input-funbox) "text to put in the file" "exp-list" nil) (om-load-inputfunmenu1 (quote input-funmenu) "append or supersede mode" "ed-mode" "append" (list (list "append" "append") (list "supersede" "supersede"))) (om-load-inputfunmenu1 (quote input-funmenu) "contents eval mode" "eval-mode" "text" (list (list "text" "text") (list "data list" "data") (list "list" "list"))))) (om-make-point 153 173) (om-make-point 70 50) (load-buffer-textfile (quote ("0 -200" "4 200" "" "" "")) (quote textfile) "append" "text") "x" nil (pairlis (quote (mode grillestep notechancolor? cmnpref zoom inport outport deltapict winsize winpos palette-mode obj-mode show-stems)) (list 0 1000 nil (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 1 0 0 (om-make-point 0 0) (om-make-point 370 280) (om-make-point 40 10) 0 0 (quote t))) nil nil nil nil) (om-load-boxcomment "comment" (om-make-point 183 42) (quote "First inlet : parameters for the transposition") "" (om-make-point 47 110) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 164 54) (quote "Third inlet : spectral enveloppe type (True enveloppe recommanded).") "" (om-make-point 492 214) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 169 87) (quote "Second inlet : enveloppe preservation On/Off (recommanded when transposing voices).$$$$$.") "" (om-make-point 403 128) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux4" (quote t) (quote nil) (om-make-point 634 277) (om-make-point 26 28) 30 "30" nil) (om-load-boxcall (quote bastype) "aux3" (quote t) (quote nil) (om-make-point 75 191) (om-make-point 32 28) 700 "700" nil) (om-load-boxcall (quote genfun) "SUPERVP-TRANSPOSITION" (quote supervp-transposition) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "SELF" 1) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "PRESERVE-ENVELOPPE" (quote t) (list (list "Preserve Enveloppe On" (quote t)) (list "Preserve Enveloppe Off" nil))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "ENVELOPPE-TYPE" (quote t) (list (list "True Enveloppe" (quote t)) (list "LPC Enveloppe" nil))) (om-load-inputfun (quote input-funbox) "no documentation" "FILTER-ORDER" 30))) (om-make-point 316 306) (om-make-point 378 63) nil nil nil 1) (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 577 412) (om-make-point 61 28) "out.aiff" "\"out.aiff\"" nil) (om-load-editor-box1 "SOUND1" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "TRACKNUM" 1) (om-load-inputfun (quote input-funbox) "no documentation" "MARKERS" nil))) (om-make-point 340 536) (om-make-point 255 69) (let ((newobj nil)) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (scale microplay show-stems obj-mode palette-mode winpos winsize mode grillestep notechancolor? zoom inport outport deltapict cmnpref staff fontsize approx player)) (list nil nil (quote t) 1 0 (om-make-point 40 10) (om-make-point 370 280) 0 1000 nil 1 0 0 (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2 (quote :midishare))) t nil nil nil) (om-load-editor-box1 "SOUND" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "TRACKNUM" 1) (om-load-inputfun (quote input-funbox) "no documentation" "MARKERS" nil))) (om-make-point 300 378) (om-make-point 80 58) (let ((newobj (let ((thesound (load-sound (make-pathname :directory (quote (:relative "in-files")) :device :unspecific :name "voix-6NV0033" :type "aif") 1))) (when thesound (setf (markers thesound) (quote nil))) thesound))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (scale microplay show-stems obj-mode palette-mode winpos winsize mode grillestep notechancolor? zoom inport outport deltapict cmnpref staff fontsize approx player)) (list nil nil (quote t) 1 0 (om-make-point 40 10) (om-make-point 942 399) 0 1000 nil 1 0 0 (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2 (quote :midishare))) t nil nil nil) (om-load-boxcall (quote genfun) "SUPERVP-PROCESSING" (quote supervp-processing) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "SRCPATH" nil) (om-load-inputfun (quote input-funbox) "no documentation" "PROCESSINGS" "") (om-load-inputfun (quote input-funbox) "no documentation" "BEGIN" nil) (om-load-inputfun (quote input-funbox) "no documentation" "END" nil) (om-load-inputfun (quote input-funbox) "no documentation" "WINDOWSIZE" 4096) (om-load-inputfun (quote input-funbox) "no documentation" "FFTSIZE" 4096) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "WINDOWSTEP-OVERSAMP" 8 (list (list "1/4" 4) (list "1/8" 8) (list "1/16" 16) (list "1/32" 32))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "WINDOW-TYPE" "hanning" (list (list "Blackman" "blackman") (list "Hanning" "hanning") (list "Hamming" "hamming"))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "SHAPE-INVARIANT" nil (list (list "Shape Invariant On" (quote t)) (list "Shape Invariant Off" nil))) (om-load-inputfun (quote input-funbox) "no documentation" "PRESERVE-TRANSIENT" (quote t)) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "NORMALIZE" (quote t) (list (list "Normalize On" (quote t)) (list "Normalize Off" nil))) (om-load-inputfun (quote input-funbox) "no documentation" "OUTFILE" "out.aiff"))) (om-make-point 388 446) (om-make-point 201 63) nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 241 35) (quote "04. Transposition example") "" (om-make-point 84 36) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (quote ((1 0 10 0 nil 0) (8 0 10 3 nil 0) (14 0 12 0 nil 0) (13 0 14 0 nil 0) (10 0 14 1 nil 0) (11 0 14 11 nil 0))) (list (let ((newpict (make-instance (quote patch-picture) :name "superVP" :source (quote |OM-SuperVP|) :pict-pathname nil :thepict (om-get-picture "superVP" (quote |OM-SuperVP|)) :storemode :external :extraobjs nil))) (setf (pict-pos newpict) (om-make-point 18 38)) (setf (pict-size newpict) (om-make-point 63 57)) newpict)) 6.0011))
