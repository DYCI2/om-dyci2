; OM File Header - Saved 2009/06/15 16:37:19
; (6.0011 :patc (om-make-point 181 70) (om-make-point 208 31) (om-make-point 892 534) "" 183 0 nil "2009/06/15 16:37:19")
; End File Header
(in-package :om)(load-lib-for (quote ("OM-SuperVP")))(setf *om-current-persistent* (om-load-patch1 "05-frequency-shifting" (quote ((om-load-boxcomment "comment" (om-make-point 279 60) (quote "WARNING:$PRESERVE-TRANSIENTS MUST BE DISABLED$WITH FREQUENCY SHIFTING") "" (om-make-point 451 238) nil (om-make-color 0.6515837 0.18255173 0.15180372) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 324 256) (om-make-point 33 30) nil "NIL" nil) (om-load-boxcomment "comment1" (om-make-point 151 54) (quote "<-- Try to connect the different parameter objects.") "" (om-make-point 323 165) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-editor-box1 "BPF" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "no documentation" "Y-POINTS" (list 0 100)) (om-load-inputfun (quote input-funbox) "no documentation" "DECIMALS" 3))) (om-make-point 293 74) (om-make-point 97 64) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.046 0.052 0.058 0.064 0.07 0.075 0.081 0.087 0.093 0.099 0.104 0.11 0.116 0.122 0.128 0.134 0.139 0.145 0.151 0.157 0.163 0.168 0.174 0.18 0.186 0.192 0.197 0.203 0.209 0.215 0.221 0.226 0.232 0.238 0.244 0.25 0.255 0.261 0.267 0.273 0.279 0.284 0.29 0.296 0.302 0.308 0.313 0.319 0.325 0.331 0.337 0.342 0.348 0.354 0.36 0.366 0.372 0.377 0.383 0.389 0.395 0.401 0.406 0.412 0.418 0.424 0.43 0.435 0.441 0.447 0.453 0.459 0.464 0.47 0.476 0.482 0.488 0.493 0.499 0.505 0.511 0.517 0.522 0.528 0.534 0.54 0.546 0.551 0.557 0.563 0.569 0.575 0.58 0.586 0.592 0.598 0.604 0.61 0.615 0.621 0.627 0.633 0.639 0.644 0.65 0.656 0.662 0.668 0.673 0.679 0.685 0.691 0.697 0.702 0.708 0.714 0.72 0.726 0.731 0.737 0.743 0.749 0.755 0.76 0.766 0.772 0.778 0.784 0.789 0.795 0.801 0.807 0.813 0.818 0.824 0.83 0.836 0.842 0.848 0.853 0.859 0.865 0.871 0.877 0.882 0.888 0.894 0.9 0.906 0.911 0.917 0.923 0.929 0.935 0.94 0.946 0.952 0.958 0.964 0.969 0.975 0.981 0.987 0.993 0.998 1.004 1.01 1.016 1.022 1.027 1.033 1.039 1.045 1.051 1.056 1.062 1.068 1.074 1.08 1.086 1.091 1.097 1.103 1.109 1.115 1.12 1.126 1.132 1.138 1.144 1.149 1.155 1.161 1.167 1.173 1.178 1.184 1.19 1.196 1.202 1.207 1.213 1.219 1.225 1.231 1.236 1.242 1.248 1.254 1.26 1.265 1.271 1.277 1.283 1.289 1.295 1.3 1.306 1.312 1.318 1.324 1.329 1.335 1.341 1.347 1.353 1.358 1.364 1.37 1.376 1.382 1.387 1.393 1.399 1.405 1.411 1.416 1.422 1.428 1.434 1.44 1.445 1.451 1.457 1.463 1.469 1.474 1.48 1.486 1.492 1.498 1.503 1.509 1.515 1.521 1.527 1.533 1.538 1.544 1.55 1.556 1.562 1.567 1.573 1.579 1.585 1.591 1.596 1.602 1.608 1.614 1.62 1.625 1.631 1.637 1.643 1.649 1.654 1.66 1.666 1.672 1.678 1.683 1.689 1.695 1.701 1.707 1.712 1.718 1.724 1.73 1.736 1.741 1.747 1.753 1.759 1.765 1.771 1.776 1.782 1.788 1.794 1.8 1.805 1.811 1.817 1.823 1.829 1.834 1.84 1.846 1.852 1.858 1.863 1.869 1.875 1.881 1.887 1.892 1.898 1.904 1.91 1.916 1.921 1.927 1.933 1.939 1.945 1.95 1.956 1.962 1.968 1.974 1.979 1.985 1.991 1.997 2.003 2.009 2.014 2.02 2.026 2.032 2.038 2.043 2.049 2.055 2.061 2.067 2.072 2.078 2.084 2.09 2.096 2.101 2.107 2.113 2.119 2.125 2.13 2.136 2.142 2.148 2.154 2.159 2.165 2.171 2.177 2.183 2.188 2.194 2.2 2.206 2.212 2.217 2.223 2.229 2.235 2.241 2.247 2.252 2.258 2.264 2.27 2.276 2.281 2.287 2.293 2.299 2.305 2.31 2.316 2.322 2.328 2.334 2.339 2.345 2.351 2.357 2.363 2.368 2.374 2.38 2.386 2.392 2.397 2.403 2.409 2.415 2.421 2.426 2.432 2.438 2.444 2.45 2.455 2.461 2.467 2.473 2.479 2.485 2.49 2.496 2.502 2.508 2.514 2.519 2.525 2.531 2.537 2.543 2.548 2.554 2.56 2.566 2.572 2.577 2.583 2.589 2.595 2.601 2.606 2.612 2.618 2.624 2.63 2.635 2.641 2.647 2.653 2.659 2.664 2.67 2.676 2.682 2.688 2.694 2.699 2.705 2.711 2.717 2.723 2.728 2.734 2.74 2.746 2.752 2.757 2.763 2.769 2.775 2.781 2.786 2.792 2.798 2.804 2.81 2.815 2.821 2.827 2.833 2.839 2.844 2.85 2.856 2.862 2.868 2.873 2.879 2.885 2.891 2.897 2.902 2.908 2.914 2.92 2.926 2.932 2.937 2.943 2.949 2.955 2.961 2.966 2.972 2.978 2.984 2.99 2.995 3.001 3.007 3.013 3.019 3.024 3.03 3.036 3.042 3.048 3.053 3.059 3.065 3.071 3.077 3.082 3.088 3.094 3.1 3.106 3.111 3.117 3.123 3.129 3.135 3.14 3.146 3.152 3.158 3.164 3.17 3.175 3.181 3.187 3.193 3.199 3.204 3.21 3.216 3.222 3.228 3.233 3.239 3.245 3.251 3.257 3.262 3.268 3.274 3.28 3.286 3.291 3.297 3.303 3.309 3.315 3.32 3.326 3.332 3.338 3.344 3.349 3.355 3.361 3.367 3.373 3.378 3.384 3.39 3.396 3.402 3.408 3.413 3.419 3.425 3.431 3.437 3.442 3.448 3.454 3.46 3.466 3.471 3.477 3.483 3.489 3.495 3.5 3.506 3.512 3.518 3.524 3.529 3.535 3.541 3.547 3.553 3.558 3.564 3.57 3.576 3.582 3.587 3.593 3.599 3.605 3.611 3.616 3.622 3.628 3.634 3.64 3.646 3.651 3.657 3.663 3.669 3.675 3.68 3.686 3.692 3.698 3.704 3.709 3.715 3.721 3.727 3.733 3.738 3.744 3.75 3.756 3.762 3.767 3.773 3.779 3.785 3.791 3.796 3.802 3.808 3.814 3.82 3.825 3.831 3.837 3.843 3.849 3.855 3.86 3.866 3.872 3.878 3.884 3.889 3.895 3.901 3.907 3.913 3.918 3.924 3.93 3.936 3.942 3.947 3.953 3.959 3.965 3.971 3.976 3.982 3.988 3.994 4.0 4.005 4.011 4.017 4.023 4.029 4.034 4.04 4.046 4.052 4.058 4.063 4.069 4.075 4.081 4.087 4.093 4.098 4.104 4.11 4.116 4.122 4.127 4.133 4.139 4.145 4.151 4.156 4.162 4.168 4.174 4.18 4.185 4.191 4.197 4.203 4.209 4.214 4.22 4.226 4.232 4.238 4.243 4.249 4.255 4.261 4.267 4.272 4.278 4.284 4.29 4.296 4.301 4.307 4.313 4.319 4.325 4.331 4.336 4.342 4.348 4.354 4.36 4.365 4.371 4.377 4.383 4.389 4.394 4.4 4.406 4.412 4.418 4.423 4.429 4.435 4.441 4.447 4.452 4.458 4.464 4.47 4.476 4.481 4.487 4.493 4.499 4.505 4.51 4.516 4.522 4.528 4.534 4.539 4.545 4.551 4.557 4.563 4.569 4.574 4.58 4.586 4.592 4.598 4.603 4.609 4.615 4.621 4.627 4.632 4.638 4.644 4.65 4.656 4.661 4.667 4.673 4.679 4.685 4.69 4.696 4.702 4.708 4.714 4.719 4.725 4.731 4.737 4.743 4.748 4.754 4.76 4.766 4.772 4.777 4.783 4.789 4.795 4.801 4.807 4.812 4.818 4.824 4.83 4.836 4.841 4.847 4.853 4.859 4.865 4.87 4.876 4.882 4.888 4.894 4.899 4.905 4.911 4.917 4.923 4.928 4.934 4.94 4.946 4.952 4.957 4.963 4.969 4.975 4.981 4.986 4.992 4.998 5.004 5.01 5.015 5.021 5.027 5.033 5.039 5.045 5.05 5.056 5.062 5.068 5.074 5.079 5.085 5.091)) (quote (479.917 483.357 491.256 495.719 495.212 502.844 504.953 506.489 508.281 509.927 511.71 513.379 514.628 515.579 517.837 519.841 526.445 534.188 537.307 540.001 543.585 544.409 545.926 546.427 549.161 552.263 552.629 552.629 552.629 552.629 552.629 552.629 551.321 550.812 545.738 544.305 544.305 544.305 544.305 544.305 544.305 545.181 546.3 547.979 548.456 549.104 549.635 549.892 550.492 550.803 551.279 551.85 551.85 551.85 551.85 551.85 551.85 550.307 547.55 547.116 546.824 538.573 537.986 503.378 503.228 500.629 500.629 500.629 476.627 476.627 476.627 476.627 476.627 476.627 496.106 503.986 532.107 532.107 533.707 533.707 533.707 536.126 538.869 540.132 541.396 547.517 552.349 552.349 552.349 552.349 552.349 552.349 550.158 547.314 545.738 544.98 544.608 543.299 542.755 541.362 541.298 528.059 528.059 528.059 528.059 528.059 528.059 528.342 534.874 546.622 547.614 548.18 552.321 557.006 558.975 559.65 559.65 559.65 559.65 559.675 559.675 559.675 559.675 559.675 559.675 559.675 559.807 560.587 561.509 562.436 562.99 563.768 564.28 564.983 565.676 565.676 565.676 565.676 565.676 565.676 557.216 542.371 541.962 541.593 537.749 532.902 524.645 517.927 513.966 511.902 510.783 510.135 508.085 507.263 505.933 505.021 503.852 498.945 495.336 494.984 494.782 494.019 490.413 490.087 489.304 489.211 489.003 488.803 488.546 488.188 487.812 487.52 486.784 486.105 483.91 483.91 483.91 483.91 483.91 483.91 485.322 490.758 490.758 490.758 490.758 490.758 490.758 490.145 489.071 488.369 486.434 486.434 486.434 486.434 486.434 486.434 487.37 488.437 489.861 490.821 491.024 491.702 492.251 492.251 492.251 492.251 492.251 492.251 492.202 492.202 492.162 492.162 492.162 492.085 491.921 491.921 491.384 491.384 491.384 491.384 490.307 488.314 486.624 485.48 477.859 472.862 471.94 471.19 442.066 436.564 435.93 435.739 427.014 425.319 425.319 425.319 425.319 425.319 425.319 425.535 425.766 426.916 441.886 441.886 442.052 443.503 443.94 443.94 457.371 457.309 457.309 453.95 453.95 453.95 454.643 454.643 455.091 455.091 454.643 454.319 453.95 453.522 449.563 443.362 440.949 440.416 440.151 440.151 440.151 440.151 440.151 440.151 440.802 442.205 442.611 444.872 444.872 446.074 446.397 446.881 447.643 462.987 468.939 469.281 472.685 474.863 474.863 474.863 474.992 474.992 496.337 496.337 474.992 474.863 474.671 474.118 419.722 419.722 419.722 419.722 419.722 419.722 420.877 421.565 421.997 422.452 422.819 423.005 423.378 423.477 423.698 423.885 424.085 424.281 424.374 424.544 424.773 425.039 470.621 475.418 485.029 485.497 485.587 485.587 485.587 485.587 485.587 476.864 476.522 476.522 475.562 475.54 475.54 475.381 475.146 475.102 473.321 473.213 471.88 416.606 415.183 413.96 411.566 410.434 408.241 408.241 408.241 408.241 408.241 408.241 409.841 416.74 423.55 426.042 427.071 427.163 427.379 427.379 427.379 427.363 427.363 427.379 427.488 428.827 429.143 429.951 434.855 441.285 441.71 441.71 441.71 441.71 441.71 441.285 440.483 439.639 439.447 439.38 439.059 438.197 437.065 435.513 435.378 435.378 435.378 435.378 435.378 435.378 438.545 439.19 439.663 439.722 440.093 440.796 440.796 441.35 441.35 441.35 441.35 441.35 440.342 438.809 438.696 438.617 438.444 438.299 438.151 438.151 438.096 437.943 437.943 437.943 437.348 437.193 437.023 436.823 436.753 436.753 436.723 436.723 436.723 436.723 436.753 436.885 441.132 442.958 445.55 445.55 445.55 445.617 445.617 445.617 445.55 445.55 445.55 445.55 444.921 444.509 444.509 444.509 443.856 442.992 442.936 442.888 442.5 441.761 441.558 441.525 441.525 441.312 441.312 440.663 439.779 439.368 438.186 436.633 435.092 435.092 435.092 435.092 435.092 435.092 435.388 436.904 437.212 437.476 437.476 437.476 437.476 437.212 436.904 436.04 436.04 436.04 436.04 436.04 436.04 439.398 440.724 444.107 462.343 465.121 466.336 467.31 467.489 468.141 471.695 479.919 481.325 482.069 482.1 482.293 483.698 483.824 483.945 484.298 484.298 484.298 484.555 484.564 484.566 484.84 484.84 485.102 485.766 486.271 486.661 487.692 488.802 489.252 489.908 490.531 490.531 490.531 490.531 490.531 490.531 489.941 489.204 488.882 488.882 488.882 488.882 488.882 488.882 489.407 490.22 491.508 493.087 494.605 495.797 497.259 498.728 499.132 499.132 499.132 499.132 499.132 499.132 498.031 497.317 496.451 494.045 476.494 473.096 468.818 467.837 466.201 442.385 437.952 436.129 436.129 436.129 436.129 436.129 436.129 436.817 437.661 438.437 439.625 441.131 442.322 443.172 443.909 444.7 446.383 450.197 451.292 451.774 451.774 452.154 452.616 453.382 453.382 454.331 454.748 454.889 455.146 455.866 468.061 499.479 514.625 515.308 516.434 516.85 517.85 518.525 518.951 519.744 520.43 531.106 531.419 534.611 541.436 553.255 554.439 557.859 560.165 560.165 560.165 560.165 560.165 560.165 559.55 558.619 557.885 557.105 555.941 554.765 553.868 550.769 548.323 548.323 548.323 548.323 548.323 548.323 548.922 549.305 549.321 549.398 549.41 549.482 549.679 549.952 549.984 550.034 550.429 551.151 551.63 553.304 554.825 554.825 554.825 554.825 554.825 554.825 549.696 538.187 538.138 535.458 534.604 534.41 503.548 502.514 502.514 534.41 534.604 534.41 499.363 496.796 479.6 473.868 467.686 467.686 468.546 468.546 468.546 468.546 468.546 469.432 470.049 470.721 472.749 474.015 476.791 478.858 482.544 493.91 495.057 496.139 496.693 499.095 500.222 501.505 504.44 505.028 505.028 505.028 505.028 505.028 505.028 504.095 503.229 502.389 500.6 498.264 494.084 492.748 492.012 490.685 490.132 489.197 487.785 486.188 485.323 483.581 482.649 482.009 481.606 481.257 480.964 480.791 480.243 479.023 477.804 477.804 477.804 477.804 477.804 477.804 479.06 479.767 480.493 481.356 481.89 481.89 481.89 481.89 481.89 481.89 482.382 482.461 482.461 482.461 481.852 481.353 481.33 481.33 483.824 483.824 483.824 480.781 480.687 480.354 480.354 480.354 476.197 475.036 475.036 475.036 474.979 474.312 474.312 474.312 474.312 472.623 472.623 472.623 450.878 450.33 449.844 448.786 448.43 445.133 444.268 442.148 441.311 441.311 440.782 440.666 440.417 440.353 437.203 440.353 424.096 424.096 424.019 424.019 424.019 424.096 428.584 428.584 430.641 430.641 430.641 430.641 430.641 430.742 430.742 430.742 430.742 431.082 432.065 433.017 433.68 434.163 434.692 435.054 435.269 435.355 435.357 435.357 435.39 435.438 435.444 435.444 435.444 435.448 435.54 436.0 436.809 438.049 440.513 442.292 443.871 445.167 446.545 447.833 450.289 453.496 454.265 454.502 455.698 455.698 455.698 455.698 455.698 454.502 453.972 446.22 437.939 436.332 433.172 430.794 430.413 430.071 429.804 427.362 427.112 427.112 427.088 427.088 427.088 427.112 427.149 427.362 435.109 437.376 437.376 437.423 437.617 437.801 438.193 438.37 439.327 441.191 471.61 473.181 475.561 475.561 475.561 475.561 477.148 477.148 477.148 498.355 498.986 499.542 502.547 503.524 504.328 504.579 504.579 504.971 505.318 505.563 505.563 505.563 505.752)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) newbpf)))) newobj) "x" nil (pairlis (quote (show-stems obj-mode palette-mode winpos winsize deltapict outport inport zoom cmnpref notechancolor? grillestep mode)) (list (quote t) 0 0 (om-make-point 40 10) (om-make-point 370 280) (om-make-point 0 0) 0 0 1 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0)) t nil nil nil) (om-load-editor-box1 "SOUND" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "TRACKNUM" 1) (om-load-inputfun (quote input-funbox) "no documentation" "MARKERS" nil))) (om-make-point 136 365) (om-make-point 159 69) (let ((newobj nil)) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (player show-stems obj-mode palette-mode winpos winsize mode grillestep notechancolor? zoom inport outport deltapict cmnpref staff fontsize approx microplay scale)) (list (quote :midishare) (quote t) 1 0 (om-make-point 40 10) (om-make-point 370 280) 0 1000 nil 1 0 0 (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2 nil nil)) t nil nil nil) (om-load-editor-box1 "SOUND" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "TRACKNUM" 1) (om-load-inputfun (quote input-funbox) "no documentation" "MARKERS" nil))) (om-make-point 77 191) (om-make-point 80 50) (let ((newobj (let ((thesound (load-sound (make-pathname :directory (quote (:relative "in-files")) :device :unspecific :name "PianoOriginal" :type "aiff") 1))) (when thesound (setf (markers thesound) (quote nil))) thesound))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (player show-stems obj-mode palette-mode winpos winsize mode grillestep notechancolor? zoom inport outport deltapict cmnpref staff fontsize approx microplay scale)) (list (quote :midishare) (quote t) 1 0 (om-make-point 40 10) (om-make-point 370 280) 0 1000 nil 1 0 0 (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2 nil nil)) t nil nil nil) (om-load-editor-box1 "TEXTFILE" (quote textfile) (quote ((om-load-inputfun (quote input-funbox) "object or object list" "self" nil) (om-load-inputfun (quote input-funbox) "text to put in the file" "exp-list" nil) (om-load-inputfunmenu1 (quote input-funmenu) "append or supersede mode" "ed-mode" "append" (list (list "append" "append") (list "supersede" "supersede"))) (om-load-inputfunmenu1 (quote input-funmenu) "contents eval mode" "eval-mode" "text" (list (list "text" "text") (list "data list" "data") (list "list" "list"))))) (om-make-point 199 90) (om-make-point 70 50) (load-buffer-textfile (quote ("0 -200" "2 200" "5 0" "" "" "" "" "" "")) (quote textfile) "append" "text") "x" nil (pairlis (quote (show-stems obj-mode palette-mode winpos winsize deltapict outport inport zoom cmnpref notechancolor? grillestep mode)) (list (quote t) 0 0 (om-make-point 40 10) (om-make-point 370 280) (om-make-point 0 0) 0 0 1 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0)) nil nil nil nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 154 100) (om-make-point 32 28) 200 "200" nil) (om-load-boxcall (quote genfun) "SUPERVP-FREQUENCYSHIFT" (quote supervp-frequencyshift) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "SELF" nil))) (om-make-point 173 191) nil nil nil nil 1) (om-load-boxcall (quote genfun) "SUPERVP-PROCESSING" (quote supervp-processing) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "SRCPATH" nil) (om-load-inputfun (quote input-funbox) "no documentation" "PROCESSINGS" "") (om-load-inputfun (quote input-funbox) "no documentation" "BEGIN" nil) (om-load-inputfun (quote input-funbox) "no documentation" "END" nil) (om-load-inputfun (quote input-funbox) "no documentation" "WINDOWSIZE" 4096) (om-load-inputfun (quote input-funbox) "no documentation" "FFTSIZE" 4096) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "WINDOWSTEP-OVERSAMP" 8 (list (list "1/4" 4) (list "1/8" 8) (list "1/16" 16) (list "1/32" 32))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "WINDOW-TYPE" "hanning" (list (list "Blackman" "blackman") (list "Hanning" "hanning") (list "Hamming" "hamming"))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "SHAPE-INVARIANT" nil (list (list "Shape Invariant On" (quote t)) (list "Shape Invariant Off" nil))) (om-load-inputfun (quote input-funbox) "no documentation" "PRESERVE-TRANSIENT" (quote t)) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "NORMALIZE" (quote t) (list (list "Normalize On" (quote t)) (list "Normalize Off" nil))) (om-load-inputfun (quote input-funbox) "no documentation" "OUTFILE" "out.aiff"))) (om-make-point 93 290) (om-make-point 269 63) nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 188 36) (quote "05. Frequency shifting") "" (om-make-point 90 40) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (quote ((9 0 4 0 nil 0) (3 0 8 0 nil 0) (5 0 9 0 nil 0) (8 0 9 1 nil 0) (1 0 9 9 nil 0))) (list (let ((newpict (make-instance (quote patch-picture) :name nil :source (quote nil) :pict-pathname nil :thepict nil :storemode :external :extraobjs (list (list (quote arrow) (list 332/335 24/47 3/335 117/235) (list (om-make-color 0 0 0) 2 (quote line) nil) nil))))) (setf (pict-pos newpict) (om-make-point 362 255)) (setf (pict-size newpict) (om-make-point 86 22)) newpict) (let ((newpict (make-instance (quote patch-picture) :name "superVP" :source (quote |OM-SuperVP|) :pict-pathname nil :thepict (om-get-picture "superVP" (quote |OM-SuperVP|)) :storemode :external :extraobjs nil))) (setf (pict-pos newpict) (om-make-point 22 42)) (setf (pict-size newpict) (om-make-point 63 57)) newpict)) 6.0011))
