; OM File Header - Saved 2019/10/27 9:52:39
; (6.1501 :patc (om-make-point 172 118) (om-make-point 628 53) (om-make-point 916 809) "" 183 0 nil "2019/10/27 9:52:39")
; End File Header
; External resources 
; (list (list (quote :picture) "#P\"../../resources/pict/superVP\"") (list (quote :sound) "#P\"../../../../../_SHARED-FILES/WORKSPACES/my-workspace/in-files/PianoOriginal.aiff\"") (list (quote :sdif) "#P\"../../../../../_SHARED-FILES/WORKSPACES/my-workspace/out-files/formants.sdif\""))
(in-package :om)(load-lib-for (quote ("OM-SuperVP")))(setf *om-current-persistent* (om-load-patch1 "04-formants" (quote ((let ((box (om-load-boxcall (quote abstraction) "make-spectral-envelopes" (om-load-patch-abs1 "make-spectral-envelopes" (quote ((let ((box (om-load-editor-box1 "BPF" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 3))) (om-make-point 147 316) (om-make-point 95 83) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 100)) (quote (0 100)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) nil nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MAKE-SPEC-ENV" (quote make-spec-env) (quote ((om-load-inputfun (quote input-funbox) "list of formant values" "FORMANTS" (list (list 800 0 80))) (om-load-inputfun (quote input-funbox) "resolution" "RES" 200))) (om-make-point 154 240) nil nil nil nil 2))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 220 205) (om-make-point 35 30) 200 "200" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 151 421) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "formant-values" 0 (om-make-point 108 90) "" "formant-values" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((1 0 0 1 nil 0) (1 1 0 2 nil 0) (4 0 1 0 nil 0) (2 0 1 1 nil 0) (0 0 3 0 nil 0))) 6.1501 nil "" (om-make-point 200 200) (om-make-point 400 500)) (quote ((om-load-inputfun (quote input-funbox) "" "formant-values" nil))) (om-make-point 229 433) nil (list nil) "l" "make-spectral-envelopes"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 189 72) (quote "MAKE-SPEC-ENV: regenerates a spectral envelope from a list of formants") "" (om-make-point 31 430) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPF-LIB" (quote bpf-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "list of BPF objects" "BPF-LIST" (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 100)) (quote (0 100)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 341 609) (om-make-point 266 175) (if (find-class (quote bpf-lib) nil) (make-instance (quote bpf-lib) :bpf-list (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-36.366 -35.789 -35.282 -34.864 -34.554 -34.366 -34.309 -34.384 -34.583 -34.888 -35.28 -35.738 -36.242 -36.775 -37.323 -37.874 -38.42 -38.954 -39.471 -39.966 -40.436 -40.881 -41.3 -41.694 -42.064 -42.416 -42.754 -43.085 -43.416 -43.753 -44.103 -44.469 -44.852 -45.252 -45.663 -46.08 -46.496 -46.903 -47.291 -47.654 -47.987 -48.287 -48.558 -48.806 -49.045 -49.292 -49.565 -49.881 -50.251 -50.677 -51.157 -51.683 -52.244 -52.831 -53.432 -54.041 -54.649 -55.248 -55.832 -56.392 -56.921 -57.41 -57.849 -58.232 -58.549 -58.797 -58.978 -59.103 -59.191 -59.275 -59.397 -59.595 -59.896 -60.305 -60.808 -61.382 -62.002 -62.647 -63.301 -63.953 -64.598 -65.23 -65.847 -66.446 -67.026 -67.588 -68.13 -68.652 -69.157 -69.644 -70.115 -70.572 -71.016 -71.449 -71.875 -72.298 -72.72 -73.146 -73.578 -74.021 -74.475 -74.942 -75.423 -75.917 -76.423 -76.938 -77.459 -77.984 -78.509 -79.031 -79.547 -80.059 -80.563 -81.061 -81.549 -82.024 -82.483 -82.922 -83.336 -83.725 -84.089 -84.429 -84.751 -85.06 -85.362 -85.662 -85.966 -86.278 -86.6 -86.934 -87.28 -87.637 -88.004 -88.376 -88.752 -89.129 -89.503 -89.872 -90.232 -90.579 -90.906 -91.208 -91.479 -91.716 -91.918 -92.088 -92.231 -92.355 -92.469 -92.583 -92.705 -92.84 -92.994 -93.171 -93.372 -93.599 -93.848 -94.119 -94.409 -94.712 -95.026 -95.346 -95.667 -95.982 -96.285 -96.568 -96.824 -97.044 -97.224 -97.365 -97.468 -97.54 -97.591 -97.632 -97.673 -97.723 -97.789 -97.878 -97.993 -98.137 -98.309 -98.511 -98.739 -98.989 -99.26 -99.544 -99.839 -100.137 -100.431 -100.715 -100.977 -101.21 -101.405 -101.558 -101.666 -101.734 -101.768 -101.78 -101.78 -101.779)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-32.859 -32.332 -31.889 -31.547 -31.324 -31.23 -31.269 -31.435 -31.715 -32.091 -32.542 -33.048 -33.591 -34.156 -34.732 -35.308 -35.876 -36.432 -36.968 -37.482 -37.969 -38.428 -38.855 -39.253 -39.622 -39.965 -40.29 -40.603 -40.915 -41.236 -41.576 -41.941 -42.336 -42.761 -43.211 -43.681 -44.162 -44.644 -45.12 -45.58 -46.02 -46.437 -46.83 -47.203 -47.563 -47.918 -48.279 -48.655 -49.054 -49.48 -49.937 -50.423 -50.937 -51.474 -52.031 -52.601 -53.178 -53.756 -54.328 -54.885 -55.417 -55.913 -56.362 -56.749 -57.063 -57.292 -57.429 -57.476 -57.451 -57.392 -57.364 -57.441 -57.685 -58.111 -58.689 -59.366 -60.092 -60.835 -61.575 -62.302 -63.014 -63.708 -64.385 -65.045 -65.688 -66.314 -66.921 -67.51 -68.077 -68.622 -69.141 -69.635 -70.103 -70.546 -70.968 -71.373 -71.768 -72.158 -72.55 -72.948 -73.358 -73.782 -74.222 -74.678 -75.151 -75.639 -76.138 -76.646 -77.157 -77.666 -78.172 -78.673 -79.166 -79.651 -80.123 -80.578 -81.009 -81.413 -81.785 -82.124 -82.434 -82.718 -82.983 -83.238 -83.489 -83.744 -84.008 -84.287 -84.583 -84.898 -85.233 -85.587 -85.958 -86.341 -86.732 -87.127 -87.522 -87.911 -88.289 -88.647 -88.979 -89.277 -89.533 -89.745 -89.914 -90.045 -90.148 -90.231 -90.308 -90.387 -90.478 -90.589 -90.724 -90.888 -91.082 -91.308 -91.563 -91.845 -92.152 -92.477 -92.815 -93.16 -93.506 -93.843 -94.163 -94.455 -94.709 -94.917 -95.076 -95.187 -95.256 -95.293 -95.31 -95.319 -95.332 -95.358 -95.406 -95.482 -95.59 -95.732 -95.909 -96.119 -96.361 -96.631 -96.925 -97.235 -97.556 -97.88 -98.197 -98.497 -98.769 -99.0 -99.184 -99.315 -99.395 -99.43 -99.431 -99.41 -99.381 -99.356)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-31.178 -30.616 -30.142 -29.781 -29.551 -29.467 -29.532 -29.738 -30.068 -30.498 -31.004 -31.562 -32.153 -32.761 -33.374 -33.983 -34.58 -35.16 -35.717 -36.248 -36.749 -37.217 -37.652 -38.053 -38.422 -38.761 -39.078 -39.38 -39.678 -39.984 -40.307 -40.658 -41.042 -41.459 -41.908 -42.382 -42.873 -43.371 -43.868 -44.355 -44.825 -45.276 -45.704 -46.112 -46.505 -46.888 -47.271 -47.66 -48.061 -48.481 -48.922 -49.386 -49.873 -50.381 -50.906 -51.445 -51.993 -52.545 -53.092 -53.628 -54.142 -54.623 -55.059 -55.436 -55.741 -55.96 -56.084 -56.115 -56.067 -55.979 -55.916 -55.96 -56.183 -56.603 -57.187 -57.874 -58.61 -59.362 -60.108 -60.841 -61.558 -62.259 -62.945 -63.617 -64.277 -64.924 -65.558 -66.177 -66.779 -67.361 -67.92 -68.452 -68.957 -69.432 -69.879 -70.302 -70.706 -71.097 -71.482 -71.867 -72.256 -72.656 -73.068 -73.496 -73.938 -74.396 -74.867 -75.347 -75.833 -76.321 -76.807 -77.289 -77.768 -78.24 -78.701 -79.145 -79.566 -79.958 -80.317 -80.642 -80.936 -81.204 -81.453 -81.693 -81.93 -82.173 -82.427 -82.697 -82.987 -83.299 -83.633 -83.989 -84.365 -84.757 -85.16 -85.57 -85.983 -86.393 -86.793 -87.174 -87.528 -87.845 -88.117 -88.339 -88.514 -88.647 -88.748 -88.827 -88.898 -88.972 -89.058 -89.164 -89.296 -89.458 -89.652 -89.878 -90.137 -90.426 -90.741 -91.078 -91.431 -91.794 -92.159 -92.517 -92.857 -93.168 -93.438 -93.658 -93.822 -93.933 -93.997 -94.025 -94.032 -94.03 -94.032 -94.049 -94.089 -94.159 -94.263 -94.402 -94.579 -94.792 -95.04 -95.318 -95.623 -95.947 -96.285 -96.628 -96.966 -97.286 -97.576 -97.822 -98.014 -98.148 -98.224 -98.25 -98.239 -98.204 -98.161 -98.122)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-30.552 -29.94 -29.431 -29.056 -28.842 -28.806 -28.947 -29.249 -29.683 -30.216 -30.816 -31.457 -32.117 -32.782 -33.441 -34.085 -34.71 -35.31 -35.882 -36.424 -36.932 -37.407 -37.846 -38.251 -38.624 -38.968 -39.289 -39.594 -39.891 -40.191 -40.501 -40.829 -41.182 -41.562 -41.968 -42.399 -42.848 -43.309 -43.775 -44.239 -44.696 -45.14 -45.57 -45.986 -46.39 -46.786 -47.18 -47.577 -47.98 -48.394 -48.822 -49.264 -49.72 -50.191 -50.674 -51.166 -51.665 -52.164 -52.659 -53.143 -53.606 -54.038 -54.429 -54.765 -55.035 -55.226 -55.333 -55.354 -55.307 -55.227 -55.174 -55.224 -55.439 -55.838 -56.391 -57.043 -57.745 -58.465 -59.183 -59.891 -60.586 -61.269 -61.94 -62.602 -63.254 -63.898 -64.532 -65.155 -65.765 -66.358 -66.93 -67.478 -67.999 -68.49 -68.954 -69.393 -69.812 -70.218 -70.615 -71.01 -71.407 -71.811 -72.224 -72.649 -73.087 -73.538 -73.999 -74.469 -74.943 -75.419 -75.894 -76.366 -76.834 -77.296 -77.747 -78.181 -78.592 -78.973 -79.322 -79.638 -79.925 -80.188 -80.436 -80.676 -80.916 -81.161 -81.419 -81.692 -81.984 -82.296 -82.63 -82.985 -83.358 -83.748 -84.149 -84.558 -84.969 -85.379 -85.779 -86.162 -86.517 -86.834 -87.106 -87.33 -87.508 -87.646 -87.754 -87.844 -87.928 -88.016 -88.117 -88.237 -88.381 -88.553 -88.756 -88.989 -89.253 -89.546 -89.863 -90.202 -90.556 -90.92 -91.286 -91.646 -91.987 -92.298 -92.566 -92.783 -92.946 -93.055 -93.12 -93.153 -93.167 -93.175 -93.19 -93.22 -93.273 -93.355 -93.47 -93.619 -93.803 -94.022 -94.274 -94.556 -94.863 -95.19 -95.531 -95.875 -96.214 -96.535 -96.823 -97.066 -97.253 -97.381 -97.452 -97.475 -97.464 -97.433 -97.397 -97.369)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-29.767 -29.196 -28.737 -28.421 -28.271 -28.298 -28.497 -28.847 -29.318 -29.878 -30.498 -31.155 -31.83 -32.51 -33.186 -33.851 -34.501 -35.133 -35.744 -36.332 -36.897 -37.436 -37.951 -38.441 -38.908 -39.354 -39.784 -40.2 -40.609 -41.016 -41.428 -41.85 -42.288 -42.744 -43.222 -43.721 -44.24 -44.776 -45.324 -45.88 -46.438 -46.992 -47.54 -48.08 -48.612 -49.14 -49.665 -50.191 -50.72 -51.255 -51.797 -52.345 -52.899 -53.457 -54.017 -54.575 -55.126 -55.662 -56.177 -56.659 -57.098 -57.479 -57.787 -58.009 -58.13 -58.141 -58.04 -57.836 -57.556 -57.251 -57.0 -56.894 -57.003 -57.344 -57.873 -58.521 -59.227 -59.952 -60.674 -61.383 -62.077 -62.758 -63.426 -64.085 -64.734 -65.375 -66.006 -66.626 -67.23 -67.814 -68.375 -68.906 -69.406 -69.874 -70.311 -70.723 -71.115 -71.495 -71.867 -72.239 -72.615 -72.999 -73.394 -73.801 -74.22 -74.65 -75.089 -75.534 -75.978 -76.417 -76.847 -77.264 -77.667 -78.051 -78.409 -78.735 -79.022 -79.266 -79.464 -79.62 -79.741 -79.837 -79.916 -79.992 -80.072 -80.168 -80.286 -80.435 -80.618 -80.84 -81.103 -81.405 -81.745 -82.119 -82.521 -82.946 -83.387 -83.837 -84.289 -84.732 -85.157 -85.552 -85.91 -86.226 -86.502 -86.741 -86.952 -87.144 -87.326 -87.509 -87.698 -87.903 -88.126 -88.373 -88.647 -88.948 -89.278 -89.633 -90.012 -90.41 -90.821 -91.238 -91.654 -92.056 -92.433 -92.771 -93.056 -93.282 -93.444 -93.548 -93.605 -93.627 -93.632 -93.632 -93.639 -93.665 -93.716 -93.798 -93.915 -94.07 -94.264 -94.496 -94.764 -95.065 -95.393 -95.743 -96.106 -96.472 -96.828 -97.161 -97.455 -97.694 -97.87 -97.981 -98.03 -98.03 -97.996 -97.945 -97.89 -97.846)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-29.805 -29.201 -28.711 -28.367 -28.198 -28.217 -28.419 -28.782 -29.273 -29.855 -30.497 -31.175 -31.868 -32.565 -33.255 -33.933 -34.596 -35.239 -35.861 -36.461 -37.038 -37.592 -38.123 -38.631 -39.117 -39.584 -40.035 -40.471 -40.898 -41.319 -41.739 -42.163 -42.593 -43.033 -43.485 -43.95 -44.427 -44.915 -45.41 -45.908 -46.406 -46.899 -47.386 -47.866 -48.341 -48.813 -49.285 -49.761 -50.243 -50.734 -51.234 -51.742 -52.259 -52.782 -53.309 -53.836 -54.358 -54.87 -55.364 -55.832 -56.262 -56.644 -56.965 -57.211 -57.371 -57.435 -57.401 -57.278 -57.091 -56.884 -56.726 -56.693 -56.842 -57.185 -57.689 -58.297 -58.961 -59.645 -60.33 -61.007 -61.673 -62.329 -62.976 -63.615 -64.248 -64.875 -65.496 -66.109 -66.71 -67.295 -67.86 -68.401 -68.913 -69.395 -69.847 -70.274 -70.679 -71.068 -71.448 -71.823 -72.198 -72.576 -72.96 -73.352 -73.753 -74.161 -74.576 -74.993 -75.409 -75.821 -76.224 -76.617 -76.998 -77.361 -77.702 -78.013 -78.289 -78.525 -78.72 -78.875 -78.999 -79.099 -79.184 -79.266 -79.353 -79.456 -79.581 -79.736 -79.926 -80.154 -80.422 -80.73 -81.074 -81.45 -81.853 -82.277 -82.716 -83.164 -83.613 -84.053 -84.474 -84.868 -85.226 -85.544 -85.824 -86.069 -86.286 -86.485 -86.675 -86.864 -87.058 -87.265 -87.489 -87.733 -88.0 -88.292 -88.608 -88.947 -89.307 -89.685 -90.074 -90.47 -90.864 -91.247 -91.608 -91.934 -92.213 -92.438 -92.605 -92.72 -92.791 -92.831 -92.855 -92.874 -92.899 -92.941 -93.004 -93.095 -93.218 -93.374 -93.564 -93.789 -94.046 -94.332 -94.644 -94.975 -95.319 -95.666 -96.006 -96.326 -96.61 -96.846 -97.025 -97.144 -97.208 -97.226 -97.213 -97.184 -97.151 -97.126)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-29.954 -29.389 -28.929 -28.599 -28.423 -28.413 -28.566 -28.868 -29.293 -29.813 -30.399 -31.028 -31.682 -32.348 -33.014 -33.674 -34.324 -34.958 -35.575 -36.171 -36.747 -37.3 -37.83 -38.337 -38.822 -39.286 -39.732 -40.163 -40.584 -41.0 -41.416 -41.837 -42.269 -42.715 -43.178 -43.659 -44.157 -44.671 -45.196 -45.729 -46.265 -46.799 -47.328 -47.85 -48.366 -48.878 -49.387 -49.897 -50.41 -50.928 -51.452 -51.983 -52.519 -53.06 -53.603 -54.144 -54.679 -55.203 -55.707 -56.184 -56.624 -57.016 -57.35 -57.613 -57.799 -57.904 -57.932 -57.897 -57.825 -57.755 -57.733 -57.803 -57.995 -58.315 -58.749 -59.27 -59.852 -60.474 -61.119 -61.779 -62.449 -63.129 -63.816 -64.513 -65.217 -65.93 -66.649 -67.371 -68.092 -68.806 -69.506 -70.182 -70.83 -71.441 -72.015 -72.55 -73.049 -73.517 -73.96 -74.384 -74.794 -75.196 -75.594 -75.991 -76.388 -76.787 -77.185 -77.581 -77.972 -78.355 -78.728 -79.086 -79.426 -79.742 -80.027 -80.272 -80.472 -80.622 -80.721 -80.773 -80.787 -80.775 -80.748 -80.72 -80.702 -80.707 -80.743 -80.82 -80.942 -81.113 -81.334 -81.603 -81.914 -82.262 -82.64 -83.04 -83.455 -83.877 -84.295 -84.699 -85.078 -85.423 -85.726 -85.981 -86.191 -86.358 -86.492 -86.601 -86.696 -86.785 -86.877 -86.979 -87.095 -87.231 -87.388 -87.569 -87.775 -88.006 -88.26 -88.535 -88.828 -89.136 -89.452 -89.769 -90.079 -90.372 -90.638 -90.872 -91.069 -91.231 -91.363 -91.472 -91.568 -91.66 -91.758 -91.868 -91.996 -92.149 -92.328 -92.538 -92.778 -93.05 -93.353 -93.683 -94.039 -94.414 -94.803 -95.197 -95.585 -95.954 -96.291 -96.582 -96.818 -96.993 -97.11 -97.177 -97.206 -97.211 -97.205 -97.201)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-29.544 -28.951 -28.473 -28.14 -27.98 -28.005 -28.211 -28.574 -29.064 -29.646 -30.289 -30.97 -31.668 -32.371 -33.07 -33.759 -34.432 -35.087 -35.721 -36.333 -36.92 -37.481 -38.016 -38.525 -39.007 -39.466 -39.903 -40.323 -40.73 -41.131 -41.532 -41.94 -42.362 -42.802 -43.263 -43.748 -44.254 -44.78 -45.321 -45.871 -46.425 -46.976 -47.521 -48.058 -48.587 -49.11 -49.63 -50.15 -50.673 -51.201 -51.735 -52.276 -52.822 -53.372 -53.924 -54.474 -55.018 -55.55 -56.064 -56.551 -57.003 -57.409 -57.762 -58.053 -58.276 -58.432 -58.528 -58.576 -58.601 -58.63 -58.693 -58.816 -59.014 -59.295 -59.654 -60.082 -60.566 -61.093 -61.656 -62.246 -62.86 -63.494 -64.148 -64.819 -65.507 -66.209 -66.924 -67.646 -68.37 -69.089 -69.795 -70.478 -71.129 -71.742 -72.315 -72.847 -73.342 -73.805 -74.243 -74.661 -75.066 -75.463 -75.857 -76.251 -76.647 -77.046 -77.448 -77.852 -78.256 -78.658 -79.054 -79.44 -79.809 -80.154 -80.465 -80.733 -80.948 -81.107 -81.209 -81.26 -81.27 -81.254 -81.225 -81.197 -81.183 -81.192 -81.233 -81.315 -81.441 -81.615 -81.836 -82.102 -82.411 -82.757 -83.135 -83.537 -83.956 -84.383 -84.807 -85.216 -85.598 -85.941 -86.236 -86.48 -86.673 -86.823 -86.938 -87.03 -87.11 -87.187 -87.271 -87.368 -87.484 -87.623 -87.788 -87.981 -88.203 -88.453 -88.731 -89.034 -89.358 -89.698 -90.048 -90.397 -90.736 -91.052 -91.334 -91.574 -91.768 -91.92 -92.035 -92.124 -92.199 -92.271 -92.349 -92.442 -92.556 -92.697 -92.869 -93.074 -93.313 -93.587 -93.896 -94.236 -94.606 -94.999 -95.408 -95.825 -96.235 -96.624 -96.975 -97.273 -97.506 -97.67 -97.768 -97.811 -97.813 -97.792 -97.763 -97.739)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-28.889 -28.202 -27.647 -27.274 -27.121 -27.208 -27.518 -28.013 -28.641 -29.355 -30.118 -30.901 -31.687 -32.463 -33.224 -33.964 -34.681 -35.373 -36.038 -36.675 -37.283 -37.861 -38.409 -38.925 -39.411 -39.869 -40.3 -40.711 -41.105 -41.491 -41.876 -42.268 -42.675 -43.102 -43.555 -44.034 -44.539 -45.067 -45.612 -46.168 -46.726 -47.279 -47.823 -48.356 -48.878 -49.394 -49.907 -50.422 -50.941 -51.467 -52.001 -52.542 -53.09 -53.643 -54.2 -54.755 -55.306 -55.846 -56.368 -56.867 -57.332 -57.757 -58.131 -58.448 -58.703 -58.896 -59.033 -59.126 -59.194 -59.261 -59.35 -59.482 -59.67 -59.922 -60.237 -60.612 -61.04 -61.513 -62.027 -62.574 -63.152 -63.758 -64.39 -65.046 -65.724 -66.423 -67.138 -67.865 -68.598 -69.328 -70.043 -70.733 -71.388 -72.0 -72.568 -73.092 -73.578 -74.033 -74.463 -74.875 -75.276 -75.67 -76.064 -76.459 -76.859 -77.265 -77.677 -78.095 -78.519 -78.945 -79.371 -79.791 -80.198 -80.582 -80.931 -81.233 -81.476 -81.655 -81.77 -81.829 -81.848 -81.842 -81.825 -81.813 -81.816 -81.842 -81.898 -81.99 -82.121 -82.292 -82.503 -82.756 -83.046 -83.373 -83.731 -84.115 -84.519 -84.933 -85.346 -85.745 -86.113 -86.437 -86.707 -86.92 -87.078 -87.192 -87.274 -87.337 -87.395 -87.455 -87.528 -87.619 -87.734 -87.877 -88.05 -88.254 -88.492 -88.762 -89.064 -89.394 -89.75 -90.126 -90.513 -90.9 -91.274 -91.619 -91.921 -92.169 -92.359 -92.496 -92.592 -92.659 -92.713 -92.766 -92.829 -92.911 -93.018 -93.155 -93.327 -93.535 -93.782 -94.068 -94.392 -94.754 -95.15 -95.574 -96.019 -96.475 -96.926 -97.354 -97.735 -98.051 -98.285 -98.434 -98.505 -98.514 -98.482 -98.428 -98.37 -98.323)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-28.548 -27.783 -27.159 -26.737 -26.572 -26.687 -27.06 -27.637 -28.353 -29.15 -29.985 -30.83 -31.667 -32.487 -33.283 -34.054 -34.797 -35.511 -36.195 -36.848 -37.469 -38.059 -38.614 -39.137 -39.626 -40.084 -40.513 -40.919 -41.306 -41.682 -42.056 -42.437 -42.833 -43.252 -43.698 -44.174 -44.68 -45.212 -45.763 -46.327 -46.892 -47.452 -48.0 -48.535 -49.057 -49.572 -50.085 -50.6 -51.121 -51.649 -52.186 -52.731 -53.284 -53.844 -54.406 -54.969 -55.528 -56.076 -56.607 -57.114 -57.588 -58.02 -58.4 -58.721 -58.977 -59.168 -59.298 -59.381 -59.437 -59.493 -59.574 -59.701 -59.89 -60.145 -60.466 -60.849 -61.286 -61.768 -62.291 -62.847 -63.435 -64.05 -64.692 -65.36 -66.05 -66.763 -67.494 -68.239 -68.991 -69.74 -70.474 -71.181 -71.847 -72.466 -73.035 -73.557 -74.038 -74.486 -74.909 -75.314 -75.709 -76.098 -76.488 -76.88 -77.279 -77.686 -78.102 -78.527 -78.959 -79.397 -79.839 -80.279 -80.709 -81.119 -81.496 -81.823 -82.087 -82.28 -82.401 -82.463 -82.48 -82.471 -82.453 -82.439 -82.442 -82.468 -82.524 -82.615 -82.744 -82.911 -83.119 -83.365 -83.649 -83.969 -84.321 -84.7 -85.1 -85.511 -85.921 -86.315 -86.676 -86.986 -87.234 -87.417 -87.539 -87.614 -87.657 -87.683 -87.704 -87.731 -87.772 -87.835 -87.924 -88.042 -88.194 -88.38 -88.602 -88.86 -89.154 -89.482 -89.84 -90.225 -90.627 -91.035 -91.435 -91.808 -92.136 -92.407 -92.616 -92.767 -92.873 -92.951 -93.014 -93.077 -93.15 -93.242 -93.361 -93.51 -93.696 -93.919 -94.183 -94.488 -94.834 -95.221 -95.644 -96.101 -96.583 -97.078 -97.571 -98.039 -98.457 -98.797 -99.041 -99.184 -99.236 -99.218 -99.154 -99.07 -98.984 -98.913)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-28.605 -27.766 -27.062 -26.571 -26.362 -26.469 -26.87 -27.496 -28.271 -29.125 -30.011 -30.899 -31.771 -32.62 -33.44 -34.229 -34.986 -35.712 -36.404 -37.064 -37.691 -38.283 -38.841 -39.365 -39.854 -40.312 -40.74 -41.144 -41.529 -41.902 -42.272 -42.648 -43.038 -43.45 -43.888 -44.355 -44.852 -45.375 -45.918 -46.474 -47.033 -47.585 -48.125 -48.65 -49.162 -49.668 -50.172 -50.679 -51.194 -51.717 -52.251 -52.794 -53.347 -53.906 -54.47 -55.035 -55.597 -56.149 -56.685 -57.196 -57.675 -58.111 -58.494 -58.815 -59.068 -59.251 -59.368 -59.433 -59.47 -59.507 -59.575 -59.697 -59.891 -60.161 -60.504 -60.913 -61.377 -61.886 -62.434 -63.013 -63.621 -64.254 -64.912 -65.594 -66.298 -67.023 -67.767 -68.525 -69.291 -70.055 -70.805 -71.525 -72.203 -72.829 -73.402 -73.925 -74.404 -74.85 -75.27 -75.673 -76.065 -76.451 -76.838 -77.228 -77.625 -78.029 -78.443 -78.865 -79.295 -79.732 -80.173 -80.613 -81.046 -81.461 -81.844 -82.178 -82.447 -82.64 -82.758 -82.812 -82.819 -82.799 -82.771 -82.749 -82.743 -82.763 -82.814 -82.901 -83.027 -83.192 -83.398 -83.644 -83.929 -84.251 -84.606 -84.99 -85.396 -85.816 -86.237 -86.644 -87.018 -87.339 -87.593 -87.776 -87.894 -87.96 -87.991 -88.004 -88.011 -88.024 -88.051 -88.098 -88.17 -88.272 -88.406 -88.573 -88.777 -89.018 -89.294 -89.607 -89.953 -90.329 -90.726 -91.135 -91.54 -91.923 -92.264 -92.548 -92.767 -92.927 -93.041 -93.125 -93.195 -93.264 -93.345 -93.444 -93.57 -93.726 -93.919 -94.149 -94.42 -94.733 -95.087 -95.483 -95.918 -96.388 -96.886 -97.401 -97.917 -98.411 -98.855 -99.219 -99.479 -99.628 -99.677 -99.649 -99.574 -99.476 -99.378 -99.295)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-27.809 -27.205 -26.721 -26.39 -26.242 -26.289 -26.525 -26.924 -27.451 -28.071 -28.751 -29.466 -30.2 -30.938 -31.673 -32.4 -33.114 -33.812 -34.493 -35.156 -35.798 -36.419 -37.018 -37.593 -38.146 -38.676 -39.185 -39.675 -40.149 -40.613 -41.071 -41.528 -41.992 -42.465 -42.952 -43.455 -43.973 -44.505 -45.046 -45.592 -46.136 -46.672 -47.198 -47.711 -48.214 -48.71 -49.203 -49.697 -50.196 -50.702 -51.217 -51.742 -52.277 -52.819 -53.368 -53.921 -54.472 -55.018 -55.551 -56.064 -56.549 -56.994 -57.392 -57.731 -58.007 -58.217 -58.364 -58.463 -58.533 -58.601 -58.696 -58.842 -59.055 -59.342 -59.699 -60.118 -60.588 -61.1 -61.645 -62.218 -62.815 -63.434 -64.073 -64.732 -65.409 -66.102 -66.808 -67.523 -68.239 -68.948 -69.64 -70.304 -70.931 -71.514 -72.051 -72.543 -72.995 -73.414 -73.809 -74.185 -74.552 -74.914 -75.276 -75.644 -76.018 -76.402 -76.795 -77.196 -77.605 -78.019 -78.434 -78.845 -79.247 -79.628 -79.979 -80.288 -80.544 -80.742 -80.881 -80.969 -81.015 -81.035 -81.042 -81.049 -81.067 -81.106 -81.171 -81.269 -81.403 -81.574 -81.784 -82.032 -82.317 -82.636 -82.985 -83.359 -83.751 -84.153 -84.552 -84.937 -85.293 -85.607 -85.87 -86.077 -86.232 -86.341 -86.416 -86.471 -86.515 -86.56 -86.614 -86.684 -86.775 -86.892 -87.037 -87.212 -87.418 -87.655 -87.923 -88.219 -88.54 -88.881 -89.235 -89.592 -89.941 -90.267 -90.559 -90.806 -91.004 -91.156 -91.27 -91.356 -91.427 -91.494 -91.568 -91.657 -91.769 -91.909 -92.08 -92.287 -92.529 -92.809 -93.125 -93.476 -93.858 -94.267 -94.693 -95.128 -95.556 -95.962 -96.325 -96.628 -96.858 -97.011 -97.091 -97.113 -97.091 -97.046 -96.995 -96.95)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-27.913 -27.167 -26.553 -26.126 -25.939 -26.014 -26.338 -26.866 -27.538 -28.299 -29.106 -29.931 -30.756 -31.568 -32.363 -33.135 -33.885 -34.609 -35.309 -35.983 -36.631 -37.252 -37.846 -38.414 -38.955 -39.471 -39.964 -40.437 -40.893 -41.337 -41.775 -42.212 -42.653 -43.105 -43.57 -44.051 -44.547 -45.057 -45.577 -46.1 -46.62 -47.131 -47.628 -48.111 -48.584 -49.05 -49.517 -49.989 -50.47 -50.962 -51.467 -51.984 -52.513 -53.053 -53.6 -54.153 -54.706 -55.254 -55.791 -56.308 -56.796 -57.244 -57.642 -57.978 -58.244 -58.434 -58.553 -58.613 -58.638 -58.662 -58.721 -58.847 -59.06 -59.364 -59.754 -60.214 -60.729 -61.285 -61.871 -62.481 -63.112 -63.761 -64.428 -65.113 -65.814 -66.531 -67.262 -68.002 -68.745 -69.481 -70.199 -70.887 -71.533 -72.128 -72.672 -73.168 -73.622 -74.044 -74.443 -74.825 -75.198 -75.569 -75.942 -76.32 -76.706 -77.102 -77.507 -77.921 -78.341 -78.767 -79.194 -79.619 -80.033 -80.428 -80.791 -81.107 -81.362 -81.548 -81.664 -81.72 -81.731 -81.715 -81.688 -81.665 -81.658 -81.676 -81.726 -81.812 -81.939 -82.109 -82.323 -82.58 -82.878 -83.214 -83.585 -83.985 -84.407 -84.843 -85.28 -85.703 -86.095 -86.439 -86.721 -86.938 -87.093 -87.198 -87.266 -87.314 -87.354 -87.397 -87.452 -87.525 -87.621 -87.745 -87.898 -88.083 -88.3 -88.549 -88.83 -89.14 -89.476 -89.834 -90.205 -90.58 -90.943 -91.28 -91.573 -91.81 -91.988 -92.11 -92.19 -92.242 -92.282 -92.323 -92.376 -92.45 -92.551 -92.683 -92.852 -93.059 -93.305 -93.592 -93.919 -94.284 -94.685 -95.116 -95.572 -96.039 -96.505 -96.947 -97.344 -97.67 -97.909 -98.054 -98.113 -98.106 -98.055 -97.982 -97.906 -97.843)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-27.68 -26.854 -26.169 -25.7 -25.515 -25.644 -26.059 -26.695 -27.473 -28.328 -29.214 -30.102 -30.977 -31.828 -32.654 -33.45 -34.218 -34.956 -35.666 -36.347 -36.998 -37.621 -38.213 -38.777 -39.312 -39.82 -40.303 -40.764 -41.207 -41.638 -42.063 -42.487 -42.917 -43.359 -43.815 -44.29 -44.783 -45.291 -45.811 -46.335 -46.855 -47.365 -47.858 -48.336 -48.803 -49.265 -49.729 -50.2 -50.681 -51.176 -51.685 -52.207 -52.743 -53.289 -53.844 -54.405 -54.965 -55.521 -56.064 -56.587 -57.078 -57.527 -57.92 -58.246 -58.493 -58.656 -58.735 -58.747 -58.718 -58.691 -58.708 -58.81 -59.019 -59.339 -59.758 -60.255 -60.808 -61.401 -62.022 -62.663 -63.321 -63.995 -64.685 -65.392 -66.115 -66.853 -67.606 -68.369 -69.135 -69.894 -70.634 -71.339 -71.997 -72.599 -73.145 -73.641 -74.094 -74.516 -74.914 -75.299 -75.676 -76.052 -76.432 -76.819 -77.215 -77.621 -78.038 -78.463 -78.896 -79.334 -79.774 -80.211 -80.638 -81.045 -81.417 -81.736 -81.986 -82.157 -82.249 -82.275 -82.254 -82.207 -82.152 -82.105 -82.077 -82.078 -82.115 -82.193 -82.315 -82.485 -82.702 -82.966 -83.274 -83.625 -84.013 -84.433 -84.878 -85.338 -85.799 -86.246 -86.656 -87.012 -87.296 -87.504 -87.644 -87.73 -87.78 -87.809 -87.833 -87.862 -87.905 -87.967 -88.055 -88.171 -88.318 -88.497 -88.711 -88.958 -89.238 -89.55 -89.892 -90.259 -90.643 -91.034 -91.416 -91.77 -92.076 -92.319 -92.495 -92.612 -92.685 -92.73 -92.766 -92.805 -92.859 -92.936 -93.042 -93.182 -93.36 -93.579 -93.839 -94.142 -94.488 -94.875 -95.3 -95.759 -96.245 -96.746 -97.245 -97.72 -98.141 -98.48 -98.715 -98.841 -98.87 -98.828 -98.742 -98.638 -98.537 -98.453)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-27.455 -26.621 -25.935 -25.475 -25.313 -25.473 -25.924 -26.593 -27.398 -28.274 -29.176 -30.076 -30.96 -31.819 -32.65 -33.452 -34.225 -34.968 -35.682 -36.368 -37.025 -37.652 -38.25 -38.819 -39.36 -39.874 -40.363 -40.83 -41.279 -41.716 -42.146 -42.576 -43.012 -43.459 -43.921 -44.401 -44.898 -45.41 -45.933 -46.458 -46.979 -47.487 -47.977 -48.451 -48.913 -49.371 -49.831 -50.299 -50.779 -51.272 -51.779 -52.3 -52.835 -53.381 -53.936 -54.496 -55.056 -55.611 -56.153 -56.673 -57.161 -57.605 -57.992 -58.309 -58.544 -58.69 -58.751 -58.742 -58.691 -58.643 -58.644 -58.735 -58.94 -59.263 -59.69 -60.197 -60.762 -61.366 -61.997 -62.648 -63.315 -63.997 -64.695 -65.409 -66.139 -66.885 -67.644 -68.414 -69.186 -69.951 -70.695 -71.403 -72.061 -72.663 -73.208 -73.703 -74.156 -74.578 -74.979 -75.366 -75.748 -76.129 -76.515 -76.909 -77.313 -77.728 -78.155 -78.591 -79.034 -79.482 -79.933 -80.38 -80.817 -81.232 -81.61 -81.931 -82.18 -82.344 -82.427 -82.441 -82.408 -82.349 -82.282 -82.224 -82.186 -82.177 -82.205 -82.275 -82.393 -82.559 -82.776 -83.042 -83.355 -83.713 -84.109 -84.538 -84.993 -85.462 -85.932 -86.385 -86.799 -87.153 -87.433 -87.634 -87.765 -87.842 -87.884 -87.907 -87.926 -87.953 -87.995 -88.059 -88.149 -88.27 -88.424 -88.612 -88.835 -89.093 -89.386 -89.711 -90.066 -90.445 -90.841 -91.241 -91.629 -91.984 -92.285 -92.518 -92.681 -92.781 -92.836 -92.866 -92.887 -92.915 -92.959 -93.028 -93.128 -93.265 -93.44 -93.658 -93.919 -94.224 -94.573 -94.963 -95.394 -95.858 -96.35 -96.856 -97.36 -97.837 -98.257 -98.59 -98.814 -98.926 -98.941 -98.886 -98.789 -98.678 -98.571 -98.484)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-27.358 -26.53 -25.853 -25.406 -25.258 -25.432 -25.894 -26.571 -27.38 -28.259 -29.162 -30.063 -30.947 -31.807 -32.639 -33.443 -34.217 -34.964 -35.682 -36.371 -37.032 -37.665 -38.27 -38.846 -39.394 -39.916 -40.414 -40.89 -41.349 -41.795 -42.235 -42.674 -43.118 -43.572 -44.04 -44.525 -45.026 -45.541 -46.065 -46.59 -47.109 -47.613 -48.1 -48.569 -49.026 -49.479 -49.935 -50.399 -50.874 -51.363 -51.868 -52.386 -52.918 -53.462 -54.015 -54.573 -55.132 -55.685 -56.226 -56.745 -57.232 -57.674 -58.058 -58.371 -58.601 -58.741 -58.792 -58.77 -58.706 -58.642 -58.628 -58.707 -58.905 -59.226 -59.655 -60.167 -60.738 -61.348 -61.986 -62.642 -63.314 -64.001 -64.703 -65.419 -66.152 -66.899 -67.66 -68.429 -69.201 -69.965 -70.706 -71.41 -72.065 -72.662 -73.202 -73.693 -74.142 -74.561 -74.96 -75.345 -75.725 -76.106 -76.492 -76.886 -77.291 -77.708 -78.135 -78.573 -79.018 -79.467 -79.919 -80.367 -80.806 -81.223 -81.603 -81.928 -82.181 -82.352 -82.445 -82.472 -82.454 -82.414 -82.368 -82.331 -82.314 -82.326 -82.373 -82.459 -82.587 -82.759 -82.975 -83.234 -83.536 -83.877 -84.253 -84.66 -85.089 -85.532 -85.975 -86.4 -86.788 -87.117 -87.374 -87.555 -87.672 -87.739 -87.775 -87.797 -87.819 -87.851 -87.901 -87.975 -88.078 -88.213 -88.381 -88.585 -88.825 -89.099 -89.408 -89.747 -90.113 -90.501 -90.902 -91.302 -91.685 -92.029 -92.315 -92.529 -92.669 -92.747 -92.781 -92.791 -92.795 -92.807 -92.837 -92.894 -92.984 -93.11 -93.278 -93.487 -93.741 -94.038 -94.379 -94.762 -95.184 -95.64 -96.122 -96.618 -97.111 -97.577 -97.987 -98.312 -98.532 -98.644 -98.663 -98.616 -98.53 -98.43 -98.336 -98.261)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-27.225 -26.293 -25.517 -25.002 -24.841 -25.068 -25.63 -26.422 -27.342 -28.315 -29.294 -30.254 -31.185 -32.081 -32.941 -33.767 -34.559 -35.319 -36.047 -36.744 -37.411 -38.049 -38.656 -39.233 -39.782 -40.304 -40.8 -41.274 -41.73 -42.173 -42.608 -43.041 -43.479 -43.926 -44.386 -44.862 -45.354 -45.859 -46.373 -46.889 -47.395 -47.885 -48.354 -48.803 -49.24 -49.675 -50.114 -50.565 -51.03 -51.511 -52.008 -52.522 -53.051 -53.593 -54.145 -54.704 -55.264 -55.82 -56.365 -56.889 -57.381 -57.83 -58.22 -58.538 -58.769 -58.904 -58.942 -58.897 -58.8 -58.7 -58.651 -58.704 -58.892 -59.218 -59.664 -60.2 -60.797 -61.433 -62.093 -62.769 -63.458 -64.158 -64.871 -65.599 -66.34 -67.097 -67.866 -68.645 -69.427 -70.201 -70.951 -71.661 -72.316 -72.909 -73.443 -73.925 -74.368 -74.781 -75.175 -75.559 -75.938 -76.319 -76.706 -77.102 -77.51 -77.929 -78.361 -78.802 -79.251 -79.705 -80.162 -80.617 -81.063 -81.491 -81.883 -82.22 -82.481 -82.654 -82.745 -82.768 -82.749 -82.711 -82.671 -82.643 -82.638 -82.663 -82.723 -82.821 -82.96 -83.14 -83.363 -83.627 -83.93 -84.271 -84.645 -85.048 -85.473 -85.913 -86.352 -86.774 -87.156 -87.475 -87.714 -87.874 -87.966 -88.011 -88.03 -88.039 -88.053 -88.08 -88.13 -88.207 -88.314 -88.455 -88.632 -88.846 -89.095 -89.381 -89.701 -90.053 -90.432 -90.833 -91.247 -91.661 -92.055 -92.405 -92.689 -92.89 -93.009 -93.059 -93.065 -93.049 -93.03 -93.023 -93.037 -93.081 -93.159 -93.276 -93.435 -93.638 -93.885 -94.178 -94.515 -94.895 -95.315 -95.771 -96.255 -96.757 -97.259 -97.736 -98.155 -98.485 -98.701 -98.803 -98.809 -98.749 -98.655 -98.551 -98.457 -98.385)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-27.006 -25.854 -24.849 -24.161 -23.965 -24.317 -25.107 -26.146 -27.281 -28.423 -29.528 -30.58 -31.576 -32.518 -33.408 -34.251 -35.051 -35.81 -36.53 -37.213 -37.859 -38.47 -39.045 -39.587 -40.094 -40.569 -41.013 -41.43 -41.822 -42.193 -42.549 -42.893 -43.23 -43.565 -43.899 -44.236 -44.576 -44.916 -45.253 -45.581 -45.893 -46.181 -46.444 -46.688 -46.927 -47.17 -47.428 -47.705 -48.004 -48.328 -48.676 -49.048 -49.444 -49.861 -50.299 -50.754 -51.223 -51.702 -52.186 -52.67 -53.146 -53.607 -54.043 -54.444 -54.796 -55.09 -55.318 -55.48 -55.595 -55.694 -55.821 -56.019 -56.321 -56.734 -57.246 -57.831 -58.464 -59.126 -59.803 -60.49 -61.182 -61.879 -62.581 -63.288 -64.002 -64.722 -65.447 -66.175 -66.902 -67.618 -68.312 -68.969 -69.578 -70.136 -70.647 -71.121 -71.569 -71.999 -72.417 -72.829 -73.239 -73.65 -74.066 -74.487 -74.915 -75.35 -75.791 -76.235 -76.682 -77.129 -77.574 -78.015 -78.448 -78.866 -79.258 -79.605 -79.89 -80.101 -80.242 -80.331 -80.388 -80.433 -80.48 -80.538 -80.616 -80.718 -80.849 -81.011 -81.207 -81.437 -81.702 -82.001 -82.333 -82.696 -83.088 -83.505 -83.944 -84.397 -84.854 -85.301 -85.715 -86.073 -86.358 -86.569 -86.722 -86.837 -86.935 -87.031 -87.134 -87.252 -87.392 -87.556 -87.749 -87.973 -88.229 -88.517 -88.838 -89.192 -89.575 -89.987 -90.424 -90.88 -91.347 -91.811 -92.253 -92.642 -92.948 -93.15 -93.249 -93.27 -93.244 -93.197 -93.151 -93.118 -93.108 -93.128 -93.182 -93.274 -93.405 -93.577 -93.79 -94.044 -94.338 -94.67 -95.038 -95.437 -95.861 -96.301 -96.741 -97.157 -97.517 -97.784 -97.935 -97.973 -97.925 -97.829 -97.713 -97.6 -97.505 -97.438)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-27.017 -25.77 -24.66 -23.885 -23.666 -24.078 -24.977 -26.133 -27.372 -28.601 -29.78 -30.899 -31.958 -32.959 -33.91 -34.815 -35.678 -36.502 -37.29 -38.041 -38.755 -39.43 -40.066 -40.658 -41.204 -41.701 -42.148 -42.545 -42.895 -43.203 -43.478 -43.733 -43.983 -44.246 -44.536 -44.864 -45.236 -45.648 -46.093 -46.555 -47.013 -47.447 -47.842 -48.2 -48.529 -48.84 -49.143 -49.444 -49.748 -50.058 -50.376 -50.706 -51.048 -51.405 -51.777 -52.164 -52.566 -52.981 -53.407 -53.84 -54.276 -54.708 -55.131 -55.537 -55.918 -56.263 -56.568 -56.83 -57.058 -57.27 -57.485 -57.721 -57.99 -58.301 -58.658 -59.061 -59.506 -59.988 -60.502 -61.044 -61.609 -62.194 -62.796 -63.412 -64.038 -64.672 -65.31 -65.945 -66.571 -67.177 -67.749 -68.273 -68.738 -69.143 -69.498 -69.818 -70.116 -70.406 -70.698 -71.001 -71.324 -71.67 -72.045 -72.449 -72.885 -73.351 -73.847 -74.371 -74.923 -75.5 -76.101 -76.722 -77.36 -78.005 -78.644 -79.259 -79.823 -80.316 -80.733 -81.086 -81.394 -81.673 -81.937 -82.196 -82.459 -82.731 -83.019 -83.328 -83.66 -84.021 -84.411 -84.833 -85.288 -85.776 -86.296 -86.845 -87.421 -88.013 -88.609 -89.185 -89.704 -90.123 -90.41 -90.566 -90.621 -90.615 -90.581 -90.543 -90.517 -90.515 -90.545 -90.612 -90.721 -90.876 -91.078 -91.33 -91.632 -91.985 -92.388 -92.84 -93.337 -93.874 -94.441 -95.018 -95.575 -96.067 -96.438 -96.648 -96.7 -96.634 -96.5 -96.34 -96.182 -96.045 -95.94 -95.877 -95.859 -95.893 -95.98 -96.123 -96.323 -96.581 -96.897 -97.271 -97.701 -98.183 -98.712 -99.276 -99.854 -100.412 -100.899 -101.25 -101.421 -101.415 -101.279 -101.07 -100.837 -100.609 -100.408 -100.244)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.838 -26.145 -25.583 -25.204 -25.049 -25.138 -25.456 -25.965 -26.613 -27.352 -28.145 -28.962 -29.788 -30.611 -31.424 -32.223 -33.006 -33.771 -34.518 -35.244 -35.947 -36.626 -37.279 -37.9 -38.489 -39.041 -39.554 -40.025 -40.454 -40.843 -41.196 -41.519 -41.821 -42.114 -42.409 -42.717 -43.045 -43.396 -43.769 -44.158 -44.553 -44.944 -45.323 -45.683 -46.022 -46.341 -46.64 -46.921 -47.186 -47.438 -47.676 -47.906 -48.129 -48.352 -48.58 -48.822 -49.085 -49.379 -49.712 -50.09 -50.515 -50.989 -51.508 -52.066 -52.655 -53.265 -53.887 -54.512 -55.132 -55.744 -56.344 -56.933 -57.511 -58.08 -58.641 -59.197 -59.749 -60.301 -60.852 -61.405 -61.961 -62.518 -63.076 -63.632 -64.182 -64.721 -65.242 -65.736 -66.193 -66.602 -66.953 -67.237 -67.452 -67.599 -67.689 -67.735 -67.754 -67.765 -67.782 -67.822 -67.896 -68.013 -68.18 -68.4 -68.673 -69.0 -69.376 -69.8 -70.269 -70.777 -71.321 -71.896 -72.495 -73.111 -73.735 -74.355 -74.96 -75.538 -76.083 -76.591 -77.063 -77.501 -77.912 -78.301 -78.676 -79.042 -79.408 -79.776 -80.154 -80.544 -80.95 -81.375 -81.821 -82.287 -82.772 -83.273 -83.783 -84.292 -84.788 -85.254 -85.67 -86.019 -86.285 -86.465 -86.563 -86.589 -86.56 -86.492 -86.398 -86.291 -86.177 -86.062 -85.95 -85.84 -85.73 -85.613 -85.482 -85.323 -85.122 -84.859 -84.511 -84.061 -83.505 -82.879 -82.308 -82.017 -82.207 -82.85 -83.731 -84.647 -85.496 -86.245 -86.895 -87.459 -87.957 -88.405 -88.821 -89.219 -89.612 -90.009 -90.419 -90.848 -91.302 -91.784 -92.295 -92.834 -93.396 -93.973 -94.552 -95.115 -95.64 -96.101 -96.48 -96.765 -96.958 -97.071 -97.123 -97.133 -97.119 -97.098)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.913 -26.313 -25.798 -25.396 -25.13 -25.02 -25.073 -25.284 -25.635 -26.102 -26.659 -27.281 -27.948 -28.642 -29.354 -30.073 -30.794 -31.513 -32.224 -32.925 -33.613 -34.284 -34.934 -35.558 -36.152 -36.711 -37.227 -37.696 -38.113 -38.474 -38.78 -39.036 -39.251 -39.443 -39.635 -39.851 -40.113 -40.436 -40.823 -41.264 -41.742 -42.236 -42.725 -43.192 -43.624 -44.013 -44.356 -44.651 -44.901 -45.108 -45.275 -45.409 -45.516 -45.608 -45.698 -45.801 -45.937 -46.124 -46.378 -46.712 -47.127 -47.622 -48.187 -48.81 -49.478 -50.177 -50.894 -51.619 -52.342 -53.056 -53.756 -54.437 -55.099 -55.74 -56.361 -56.965 -57.553 -58.129 -58.695 -59.252 -59.803 -60.348 -60.885 -61.411 -61.924 -62.419 -62.888 -63.324 -63.719 -64.063 -64.35 -64.574 -64.732 -64.827 -64.865 -64.86 -64.826 -64.782 -64.745 -64.731 -64.754 -64.824 -64.948 -65.13 -65.37 -65.666 -66.017 -66.418 -66.866 -67.355 -67.883 -68.443 -69.032 -69.644 -70.272 -70.908 -71.545 -72.173 -72.785 -73.372 -73.93 -74.458 -74.954 -75.422 -75.865 -76.29 -76.703 -77.11 -77.516 -77.925 -78.341 -78.768 -79.209 -79.666 -80.137 -80.621 -81.112 -81.606 -82.094 -82.563 -83.002 -83.397 -83.734 -84.004 -84.201 -84.326 -84.385 -84.388 -84.346 -84.271 -84.173 -84.061 -83.94 -83.812 -83.678 -83.532 -83.366 -83.166 -82.911 -82.574 -82.115 -81.48 -80.599 -79.39 -77.835 -76.322 -76.11 -77.575 -79.453 -81.094 -82.423 -83.495 -84.366 -85.085 -85.69 -86.209 -86.668 -87.088 -87.484 -87.872 -88.261 -88.662 -89.08 -89.519 -89.983 -90.471 -90.982 -91.51 -92.047 -92.583 -93.102 -93.588 -94.023 -94.394 -94.69 -94.911 -95.062 -95.153 -95.198 -95.214)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-27.193 -26.12 -25.065 -24.083 -23.264 -22.73 -22.59 -22.876 -23.518 -24.393 -25.387 -26.423 -27.455 -28.462 -29.434 -30.37 -31.267 -32.129 -32.956 -33.748 -34.506 -35.228 -35.912 -36.555 -37.152 -37.701 -38.194 -38.629 -39.001 -39.309 -39.554 -39.741 -39.882 -39.993 -40.094 -40.21 -40.364 -40.571 -40.84 -41.165 -41.532 -41.919 -42.302 -42.659 -42.974 -43.239 -43.457 -43.632 -43.77 -43.879 -43.965 -44.038 -44.108 -44.187 -44.288 -44.425 -44.612 -44.859 -45.173 -45.558 -46.011 -46.529 -47.103 -47.726 -48.388 -49.079 -49.79 -50.509 -51.226 -51.933 -52.624 -53.297 -53.952 -54.589 -55.21 -55.815 -56.406 -56.984 -57.55 -58.105 -58.65 -59.184 -59.706 -60.214 -60.705 -61.174 -61.617 -62.028 -62.402 -62.731 -63.011 -63.234 -63.399 -63.504 -63.555 -63.564 -63.548 -63.525 -63.512 -63.523 -63.566 -63.651 -63.783 -63.964 -64.195 -64.476 -64.807 -65.184 -65.607 -66.071 -66.576 -67.117 -67.692 -68.296 -68.924 -69.57 -70.225 -70.876 -71.511 -72.12 -72.695 -73.238 -73.75 -74.238 -74.707 -75.163 -75.609 -76.053 -76.497 -76.944 -77.396 -77.86 -78.338 -78.832 -79.345 -79.874 -80.42 -80.979 -81.544 -82.109 -82.658 -83.172 -83.629 -84.003 -84.277 -84.45 -84.533 -84.545 -84.506 -84.433 -84.338 -84.23 -84.113 -83.992 -83.863 -83.723 -83.562 -83.367 -83.115 -82.777 -82.307 -81.637 -80.664 -79.22 -77.05 -74.085 -72.885 -75.735 -78.691 -80.879 -82.505 -83.749 -84.727 -85.512 -86.16 -86.708 -87.188 -87.622 -88.031 -88.429 -88.83 -89.243 -89.677 -90.138 -90.632 -91.161 -91.728 -92.331 -92.967 -93.625 -94.291 -94.939 -95.533 -96.034 -96.412 -96.656 -96.782 -96.818 -96.795 -96.74)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-27.075 -25.932 -24.774 -23.648 -22.641 -21.898 -21.58 -21.775 -22.424 -23.368 -24.453 -25.577 -26.686 -27.756 -28.78 -29.755 -30.685 -31.572 -32.418 -33.227 -33.997 -34.731 -35.426 -36.08 -36.692 -37.257 -37.774 -38.239 -38.65 -39.008 -39.314 -39.573 -39.792 -39.984 -40.16 -40.335 -40.523 -40.733 -40.97 -41.233 -41.515 -41.801 -42.077 -42.325 -42.533 -42.697 -42.823 -42.918 -42.99 -43.046 -43.096 -43.146 -43.209 -43.294 -43.414 -43.58 -43.802 -44.087 -44.438 -44.855 -45.335 -45.873 -46.46 -47.089 -47.753 -48.443 -49.15 -49.864 -50.576 -51.277 -51.959 -52.623 -53.267 -53.895 -54.507 -55.104 -55.688 -56.26 -56.819 -57.367 -57.902 -58.425 -58.934 -59.426 -59.899 -60.35 -60.775 -61.169 -61.528 -61.848 -62.124 -62.352 -62.529 -62.655 -62.731 -62.768 -62.782 -62.788 -62.803 -62.839 -62.904 -63.005 -63.147 -63.332 -63.561 -63.835 -64.152 -64.512 -64.913 -65.354 -65.831 -66.343 -66.887 -67.458 -68.054 -68.666 -69.289 -69.91 -70.516 -71.097 -71.645 -72.159 -72.646 -73.111 -73.559 -73.998 -74.432 -74.864 -75.3 -75.738 -76.182 -76.638 -77.106 -77.59 -78.09 -78.606 -79.137 -79.681 -80.233 -80.786 -81.329 -81.845 -82.314 -82.709 -83.011 -83.214 -83.327 -83.372 -83.368 -83.331 -83.275 -83.206 -83.131 -83.049 -82.96 -82.86 -82.739 -82.584 -82.376 -82.085 -81.666 -81.053 -80.139 -78.742 -76.551 -73.258 -71.573 -74.924 -78.111 -80.352 -81.977 -83.201 -84.151 -84.909 -85.531 -86.056 -86.516 -86.933 -87.327 -87.711 -88.097 -88.495 -88.912 -89.355 -89.828 -90.335 -90.876 -91.452 -92.06 -92.691 -93.334 -93.966 -94.553 -95.056 -95.437 -95.683 -95.807 -95.841 -95.817 -95.765)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.991 -25.912 -24.834 -23.798 -22.881 -22.198 -21.874 -21.985 -22.5 -23.305 -24.273 -25.308 -26.352 -27.375 -28.364 -29.315 -30.228 -31.104 -31.944 -32.75 -33.523 -34.263 -34.969 -35.641 -36.277 -36.874 -37.431 -37.945 -38.417 -38.845 -39.232 -39.581 -39.896 -40.186 -40.457 -40.719 -40.979 -41.243 -41.513 -41.788 -42.062 -42.326 -42.569 -42.778 -42.944 -43.065 -43.145 -43.19 -43.208 -43.205 -43.188 -43.165 -43.146 -43.145 -43.179 -43.265 -43.42 -43.657 -43.982 -44.395 -44.891 -45.459 -46.086 -46.762 -47.474 -48.211 -48.963 -49.72 -50.473 -51.211 -51.929 -52.625 -53.3 -53.954 -54.592 -55.213 -55.82 -56.414 -56.995 -57.564 -58.121 -58.664 -59.193 -59.706 -60.199 -60.668 -61.11 -61.519 -61.891 -62.218 -62.497 -62.721 -62.889 -63.0 -63.057 -63.072 -63.061 -63.044 -63.037 -63.055 -63.108 -63.202 -63.343 -63.533 -63.772 -64.059 -64.394 -64.774 -65.197 -65.661 -66.163 -66.7 -67.271 -67.87 -68.493 -69.133 -69.782 -70.428 -71.059 -71.66 -72.225 -72.752 -73.244 -73.709 -74.153 -74.584 -75.008 -75.43 -75.855 -76.282 -76.716 -77.161 -77.621 -78.097 -78.591 -79.101 -79.629 -80.169 -80.719 -81.269 -81.808 -82.319 -82.779 -83.164 -83.452 -83.638 -83.728 -83.744 -83.707 -83.636 -83.544 -83.441 -83.333 -83.222 -83.106 -82.979 -82.834 -82.656 -82.425 -82.111 -81.669 -81.034 -80.101 -78.698 -76.548 -73.495 -72.128 -75.119 -78.14 -80.335 -81.95 -83.176 -84.129 -84.89 -85.511 -86.035 -86.491 -86.905 -87.294 -87.674 -88.056 -88.451 -88.866 -89.306 -89.778 -90.283 -90.824 -91.4 -92.007 -92.639 -93.281 -93.912 -94.5 -95.005 -95.395 -95.651 -95.784 -95.82 -95.793 -95.733)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.714 -25.672 -24.638 -23.652 -22.782 -22.13 -21.807 -21.88 -22.329 -23.06 -23.961 -24.941 -25.942 -26.931 -27.894 -28.825 -29.722 -30.586 -31.418 -32.219 -32.993 -33.738 -34.456 -35.146 -35.809 -36.442 -37.047 -37.622 -38.166 -38.679 -39.161 -39.613 -40.035 -40.429 -40.796 -41.138 -41.455 -41.75 -42.019 -42.263 -42.476 -42.654 -42.789 -42.878 -42.917 -42.91 -42.864 -42.788 -42.689 -42.573 -42.446 -42.313 -42.185 -42.074 -42.0 -41.982 -42.043 -42.198 -42.456 -42.812 -43.256 -43.769 -44.333 -44.931 -45.548 -46.173 -46.794 -47.404 -47.994 -48.56 -49.098 -49.608 -50.095 -50.56 -51.008 -51.443 -51.868 -52.285 -52.698 -53.107 -53.515 -53.923 -54.331 -54.741 -55.152 -55.562 -55.972 -56.378 -56.78 -57.173 -57.553 -57.917 -58.259 -58.575 -58.864 -59.125 -59.364 -59.589 -59.807 -60.026 -60.252 -60.49 -60.743 -61.015 -61.307 -61.621 -61.957 -62.317 -62.699 -63.104 -63.531 -63.978 -64.444 -64.926 -65.419 -65.921 -66.424 -66.921 -67.404 -67.866 -68.301 -68.711 -69.1 -69.471 -69.833 -70.188 -70.542 -70.899 -71.262 -71.633 -72.014 -72.407 -72.814 -73.235 -73.672 -74.122 -74.587 -75.064 -75.55 -76.041 -76.529 -77.006 -77.459 -77.877 -78.247 -78.564 -78.832 -79.06 -79.259 -79.441 -79.615 -79.79 -79.973 -80.167 -80.378 -80.608 -80.861 -81.137 -81.437 -81.763 -82.113 -82.486 -82.88 -83.291 -83.711 -84.133 -84.542 -84.923 -85.259 -85.535 -85.744 -85.893 -85.994 -86.065 -86.121 -86.173 -86.232 -86.305 -86.399 -86.516 -86.661 -86.835 -87.041 -87.279 -87.548 -87.849 -88.179 -88.535 -88.912 -89.303 -89.697 -90.077 -90.426 -90.722 -90.948 -91.097 -91.177 -91.204 -91.199 -91.179)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.484 -25.376 -24.245 -23.123 -22.072 -21.203 -20.67 -20.6 -21.012 -21.793 -22.786 -23.866 -24.959 -26.026 -27.052 -28.033 -28.97 -29.866 -30.725 -31.549 -32.341 -33.104 -33.838 -34.545 -35.224 -35.877 -36.501 -37.098 -37.665 -38.203 -38.71 -39.187 -39.632 -40.044 -40.425 -40.772 -41.086 -41.367 -41.612 -41.819 -41.985 -42.107 -42.179 -42.197 -42.16 -42.072 -41.944 -41.791 -41.625 -41.455 -41.291 -41.141 -41.016 -40.931 -40.9 -40.939 -41.061 -41.27 -41.568 -41.945 -42.392 -42.893 -43.434 -44.004 -44.591 -45.186 -45.78 -46.366 -46.937 -47.486 -48.01 -48.509 -48.985 -49.443 -49.887 -50.322 -50.752 -51.18 -51.611 -52.047 -52.492 -52.948 -53.417 -53.902 -54.402 -54.919 -55.451 -55.997 -56.554 -57.12 -57.689 -58.257 -58.816 -59.358 -59.877 -60.368 -60.833 -61.277 -61.706 -62.129 -62.551 -62.977 -63.409 -63.852 -64.307 -64.776 -65.26 -65.759 -66.275 -66.806 -67.351 -67.91 -68.479 -69.055 -69.633 -70.205 -70.763 -71.294 -71.783 -72.218 -72.59 -72.903 -73.169 -73.401 -73.613 -73.818 -74.024 -74.238 -74.464 -74.706 -74.966 -75.246 -75.548 -75.873 -76.22 -76.587 -76.973 -77.373 -77.783 -78.195 -78.599 -78.982 -79.328 -79.617 -79.834 -79.969 -80.028 -80.027 -79.983 -79.912 -79.824 -79.728 -79.626 -79.519 -79.405 -79.281 -79.138 -78.966 -78.752 -78.475 -78.114 -77.642 -77.034 -76.295 -75.511 -74.948 -74.983 -75.698 -76.775 -77.894 -78.908 -79.78 -80.518 -81.144 -81.683 -82.156 -82.583 -82.979 -83.357 -83.726 -84.094 -84.47 -84.856 -85.259 -85.68 -86.121 -86.583 -87.065 -87.564 -88.075 -88.59 -89.095 -89.571 -89.995 -90.342 -90.6 -90.77 -90.87 -90.921 -90.945)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.649 -25.428 -24.14 -22.794 -21.435 -20.179 -19.257 -18.959 -19.405 -20.412 -21.685 -23.02 -24.318 -25.545 -26.694 -27.771 -28.782 -29.736 -30.638 -31.495 -32.311 -33.087 -33.827 -34.529 -35.196 -35.826 -36.418 -36.973 -37.488 -37.965 -38.402 -38.802 -39.165 -39.495 -39.794 -40.065 -40.311 -40.534 -40.737 -40.919 -41.078 -41.209 -41.305 -41.358 -41.357 -41.301 -41.198 -41.065 -40.916 -40.761 -40.611 -40.477 -40.376 -40.323 -40.34 -40.441 -40.64 -40.938 -41.329 -41.802 -42.34 -42.928 -43.551 -44.197 -44.856 -45.519 -46.178 -46.826 -47.454 -48.054 -48.619 -49.146 -49.64 -50.106 -50.55 -50.978 -51.393 -51.8 -52.203 -52.607 -53.015 -53.43 -53.856 -54.294 -54.744 -55.208 -55.683 -56.168 -56.66 -57.155 -57.647 -58.132 -58.601 -59.048 -59.463 -59.84 -60.183 -60.499 -60.798 -61.09 -61.38 -61.673 -61.974 -62.285 -62.61 -62.948 -63.303 -63.675 -64.064 -64.472 -64.897 -65.34 -65.797 -66.268 -66.749 -67.235 -67.722 -68.201 -68.66 -69.088 -69.475 -69.821 -70.135 -70.43 -70.717 -71.002 -71.293 -71.594 -71.907 -72.238 -72.586 -72.955 -73.345 -73.758 -74.194 -74.652 -75.132 -75.631 -76.148 -76.677 -77.212 -77.744 -78.259 -78.737 -79.156 -79.498 -79.762 -79.966 -80.13 -80.273 -80.41 -80.551 -80.702 -80.87 -81.06 -81.274 -81.517 -81.789 -82.092 -82.428 -82.795 -83.193 -83.621 -84.074 -84.547 -85.033 -85.517 -85.982 -86.4 -86.738 -86.973 -87.107 -87.164 -87.176 -87.17 -87.163 -87.168 -87.193 -87.245 -87.328 -87.446 -87.601 -87.795 -88.029 -88.303 -88.617 -88.97 -89.359 -89.781 -90.23 -90.695 -91.163 -91.609 -92.001 -92.299 -92.475 -92.531 -92.499 -92.419 -92.321)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.774 -25.484 -24.099 -22.611 -21.047 -19.52 -18.322 -17.909 -18.5 -19.782 -21.312 -22.838 -24.269 -25.587 -26.802 -27.924 -28.969 -29.947 -30.868 -31.737 -32.561 -33.341 -34.08 -34.779 -35.438 -36.056 -36.632 -37.167 -37.658 -38.106 -38.511 -38.876 -39.202 -39.494 -39.755 -39.99 -40.204 -40.4 -40.581 -40.747 -40.896 -41.023 -41.121 -41.177 -41.179 -41.12 -41.009 -40.868 -40.71 -40.55 -40.397 -40.265 -40.17 -40.131 -40.169 -40.3 -40.533 -40.867 -41.294 -41.801 -42.371 -42.988 -43.639 -44.312 -44.998 -45.691 -46.383 -47.068 -47.738 -48.381 -48.991 -49.564 -50.107 -50.627 -51.128 -51.616 -52.093 -52.564 -53.032 -53.499 -53.969 -54.444 -54.926 -55.417 -55.919 -56.431 -56.955 -57.488 -58.029 -58.575 -59.123 -59.667 -60.202 -60.718 -61.203 -61.649 -62.057 -62.439 -62.809 -63.176 -63.549 -63.932 -64.327 -64.739 -65.168 -65.616 -66.085 -66.575 -67.087 -67.62 -68.174 -68.749 -69.341 -69.948 -70.564 -71.185 -71.8 -72.397 -72.956 -73.451 -73.861 -74.185 -74.444 -74.665 -74.867 -75.062 -75.261 -75.47 -75.694 -75.936 -76.199 -76.486 -76.799 -77.137 -77.502 -77.892 -78.306 -78.74 -79.19 -79.648 -80.105 -80.546 -80.953 -81.297 -81.543 -81.664 -81.665 -81.58 -81.445 -81.283 -81.107 -80.925 -80.741 -80.554 -80.363 -80.164 -79.95 -79.714 -79.445 -79.135 -78.773 -78.356 -77.896 -77.432 -77.049 -76.872 -77.012 -77.487 -78.203 -79.027 -79.849 -80.608 -81.286 -81.89 -82.431 -82.923 -83.377 -83.807 -84.222 -84.632 -85.044 -85.465 -85.901 -86.357 -86.838 -87.345 -87.882 -88.449 -89.046 -89.67 -90.313 -90.965 -91.604 -92.195 -92.683 -93.02 -93.203 -93.271 -93.27 -93.234)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.246 -24.993 -23.657 -22.241 -20.789 -19.429 -18.444 -18.196 -18.799 -19.978 -21.379 -22.79 -24.13 -25.376 -26.531 -27.605 -28.609 -29.554 -30.448 -31.297 -32.108 -32.884 -33.627 -34.34 -35.025 -35.681 -36.308 -36.907 -37.475 -38.013 -38.518 -38.989 -39.424 -39.822 -40.181 -40.499 -40.775 -41.008 -41.196 -41.337 -41.431 -41.474 -41.463 -41.394 -41.263 -41.078 -40.856 -40.623 -40.397 -40.191 -40.015 -39.879 -39.79 -39.758 -39.788 -39.886 -40.052 -40.287 -40.583 -40.936 -41.336 -41.775 -42.247 -42.742 -43.255 -43.78 -44.312 -44.845 -45.372 -45.886 -46.382 -46.861 -47.325 -47.78 -48.229 -48.674 -49.118 -49.562 -50.007 -50.456 -50.908 -51.366 -51.828 -52.297 -52.771 -53.25 -53.734 -54.222 -54.712 -55.203 -55.691 -56.176 -56.651 -57.112 -57.552 -57.967 -58.358 -58.734 -59.101 -59.466 -59.834 -60.208 -60.59 -60.981 -61.383 -61.795 -62.22 -62.655 -63.102 -63.559 -64.025 -64.498 -64.978 -65.46 -65.942 -66.421 -66.891 -67.344 -67.772 -68.162 -68.506 -68.806 -69.074 -69.322 -69.56 -69.794 -70.032 -70.274 -70.526 -70.787 -71.06 -71.346 -71.644 -71.955 -72.278 -72.612 -72.956 -73.306 -73.66 -74.014 -74.362 -74.698 -75.012 -75.291 -75.519 -75.687 -75.797 -75.864 -75.903 -75.926 -75.937 -75.942 -75.942 -75.937 -75.926 -75.905 -75.871 -75.818 -75.738 -75.623 -75.466 -75.261 -75.015 -74.753 -74.537 -74.462 -74.616 -75.011 -75.574 -76.205 -76.823 -77.39 -77.897 -78.35 -78.758 -79.134 -79.485 -79.82 -80.146 -80.468 -80.792 -81.12 -81.456 -81.801 -82.158 -82.526 -82.906 -83.296 -83.696 -84.101 -84.507 -84.908 -85.291 -85.64 -85.935 -86.161 -86.32 -86.43 -86.512 -86.578)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.788 -25.522 -24.184 -22.791 -21.407 -20.194 -19.443 -19.435 -20.175 -21.379 -22.756 -24.143 -25.473 -26.729 -27.912 -29.031 -30.097 -31.119 -32.106 -33.063 -33.997 -34.913 -35.813 -36.699 -37.574 -38.438 -39.289 -40.126 -40.946 -41.746 -42.521 -43.263 -43.965 -44.62 -45.217 -45.748 -46.203 -46.575 -46.855 -47.04 -47.125 -47.11 -46.992 -46.772 -46.458 -46.076 -45.666 -45.263 -44.892 -44.568 -44.296 -44.081 -43.923 -43.826 -43.787 -43.808 -43.885 -44.018 -44.203 -44.435 -44.712 -45.029 -45.38 -45.761 -46.168 -46.594 -47.034 -47.48 -47.926 -48.363 -48.786 -49.196 -49.598 -49.995 -50.391 -50.788 -51.188 -51.593 -52.004 -52.424 -52.852 -53.291 -53.741 -54.204 -54.679 -55.166 -55.666 -56.177 -56.699 -57.229 -57.766 -58.305 -58.841 -59.368 -59.875 -60.36 -60.824 -61.274 -61.717 -62.161 -62.608 -63.063 -63.527 -64.003 -64.491 -64.994 -65.511 -66.043 -66.589 -67.149 -67.721 -68.305 -68.898 -69.497 -70.099 -70.697 -71.284 -71.848 -72.373 -72.84 -73.239 -73.576 -73.867 -74.13 -74.379 -74.624 -74.872 -75.13 -75.4 -75.686 -75.99 -76.312 -76.654 -77.016 -77.397 -77.795 -78.208 -78.632 -79.062 -79.491 -79.91 -80.306 -80.659 -80.947 -81.142 -81.235 -81.238 -81.178 -81.078 -80.955 -80.819 -80.676 -80.529 -80.375 -80.214 -80.039 -79.844 -79.622 -79.361 -79.052 -78.686 -78.259 -77.785 -77.301 -76.893 -76.686 -76.79 -77.227 -77.904 -78.692 -79.484 -80.225 -80.897 -81.502 -82.05 -82.552 -83.019 -83.462 -83.891 -84.313 -84.735 -85.163 -85.602 -86.054 -86.522 -87.007 -87.511 -88.031 -88.567 -89.112 -89.66 -90.196 -90.7 -91.14 -91.481 -91.703 -91.817 -91.855 -91.846 -91.815)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.273 -25.188 -24.105 -23.069 -22.16 -21.499 -21.214 -21.374 -21.937 -22.784 -23.786 -24.851 -25.926 -26.982 -28.011 -29.008 -29.976 -30.917 -31.835 -32.734 -33.617 -34.486 -35.342 -36.188 -37.022 -37.846 -38.658 -39.456 -40.236 -40.996 -41.73 -42.433 -43.098 -43.718 -44.286 -44.793 -45.233 -45.599 -45.885 -46.087 -46.202 -46.229 -46.169 -46.029 -45.823 -45.573 -45.305 -45.043 -44.802 -44.594 -44.425 -44.298 -44.215 -44.175 -44.18 -44.227 -44.316 -44.445 -44.613 -44.817 -45.054 -45.321 -45.616 -45.935 -46.273 -46.626 -46.989 -47.357 -47.723 -48.084 -48.437 -48.782 -49.121 -49.458 -49.794 -50.13 -50.469 -50.811 -51.16 -51.516 -51.882 -52.258 -52.649 -53.053 -53.474 -53.912 -54.366 -54.836 -55.321 -55.818 -56.326 -56.84 -57.355 -57.865 -58.367 -58.857 -59.337 -59.81 -60.279 -60.748 -61.22 -61.696 -62.179 -62.669 -63.169 -63.679 -64.198 -64.729 -65.269 -65.819 -66.378 -66.944 -67.514 -68.086 -68.655 -69.215 -69.759 -70.277 -70.759 -71.195 -71.583 -71.928 -72.239 -72.526 -72.798 -73.064 -73.33 -73.6 -73.879 -74.169 -74.472 -74.79 -75.123 -75.472 -75.837 -76.215 -76.604 -77.001 -77.401 -77.797 -78.18 -78.539 -78.858 -79.124 -79.326 -79.46 -79.536 -79.566 -79.563 -79.538 -79.499 -79.45 -79.394 -79.33 -79.257 -79.169 -79.06 -78.921 -78.74 -78.503 -78.193 -77.796 -77.306 -76.75 -76.222 -75.91 -76.015 -76.565 -77.383 -78.271 -79.114 -79.867 -80.526 -81.102 -81.61 -82.068 -82.488 -82.883 -83.263 -83.636 -84.008 -84.384 -84.769 -85.166 -85.575 -85.998 -86.434 -86.88 -87.335 -87.79 -88.237 -88.663 -89.05 -89.38 -89.637 -89.818 -89.932 -89.994 -90.023 -90.033)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-25.367 -24.511 -23.698 -22.964 -22.361 -21.949 -21.78 -21.878 -22.227 -22.777 -23.467 -24.244 -25.065 -25.903 -26.742 -27.572 -28.39 -29.192 -29.979 -30.751 -31.509 -32.253 -32.983 -33.7 -34.403 -35.092 -35.764 -36.42 -37.056 -37.67 -38.258 -38.817 -39.342 -39.83 -40.275 -40.673 -41.018 -41.307 -41.535 -41.698 -41.795 -41.825 -41.79 -41.695 -41.55 -41.367 -41.16 -40.945 -40.736 -40.545 -40.383 -40.259 -40.182 -40.16 -40.195 -40.291 -40.445 -40.654 -40.911 -41.208 -41.538 -41.893 -42.266 -42.651 -43.042 -43.433 -43.821 -44.199 -44.566 -44.919 -45.256 -45.578 -45.886 -46.183 -46.469 -46.747 -47.019 -47.287 -47.553 -47.819 -48.087 -48.359 -48.637 -48.923 -49.218 -49.521 -49.834 -50.155 -50.482 -50.813 -51.146 -51.479 -51.808 -52.132 -52.449 -52.759 -53.063 -53.362 -53.658 -53.953 -54.249 -54.547 -54.847 -55.15 -55.457 -55.767 -56.08 -56.397 -56.716 -57.037 -57.358 -57.678 -57.997 -58.311 -58.62 -58.921 -59.212 -59.491 -59.757 -60.008 -60.245 -60.47 -60.685 -60.893 -61.096 -61.298 -61.5 -61.703 -61.909 -62.119 -62.332 -62.55 -62.772 -62.998 -63.228 -63.46 -63.694 -63.929 -64.162 -64.392 -64.617 -64.834 -65.041 -65.236 -65.418 -65.587 -65.744 -65.89 -66.028 -66.16 -66.287 -66.411 -66.531 -66.65 -66.765 -66.876 -66.981 -67.078 -67.163 -67.232 -67.28 -67.303 -67.297 -67.271 -67.251 -67.292 -67.446 -67.719 -68.064 -68.425 -68.77 -69.088 -69.377 -69.642 -69.887 -70.118 -70.339 -70.553 -70.762 -70.969 -71.176 -71.383 -71.592 -71.802 -72.015 -72.229 -72.444 -72.659 -72.873 -73.085 -73.292 -73.493 -73.685 -73.866 -74.034 -74.191 -74.337 -74.474 -74.605 -74.731)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.115 -25.044 -23.969 -22.926 -21.984 -21.251 -20.853 -20.88 -21.322 -22.076 -23.013 -24.031 -25.065 -26.082 -27.066 -28.011 -28.918 -29.786 -30.619 -31.418 -32.185 -32.921 -33.626 -34.301 -34.945 -35.557 -36.137 -36.683 -37.195 -37.673 -38.115 -38.522 -38.895 -39.234 -39.54 -39.816 -40.061 -40.276 -40.463 -40.619 -40.745 -40.838 -40.896 -40.917 -40.904 -40.864 -40.809 -40.752 -40.707 -40.683 -40.688 -40.73 -40.815 -40.948 -41.131 -41.366 -41.654 -41.991 -42.376 -42.803 -43.267 -43.763 -44.286 -44.829 -45.388 -45.956 -46.527 -47.095 -47.651 -48.19 -48.707 -49.202 -49.676 -50.131 -50.57 -50.996 -51.411 -51.819 -52.221 -52.621 -53.022 -53.428 -53.84 -54.262 -54.695 -55.142 -55.602 -56.075 -56.561 -57.057 -57.56 -58.067 -58.573 -59.07 -59.555 -60.025 -60.48 -60.925 -61.364 -61.803 -62.246 -62.695 -63.153 -63.623 -64.105 -64.602 -65.113 -65.639 -66.18 -66.734 -67.302 -67.881 -68.468 -69.058 -69.648 -70.229 -70.793 -71.329 -71.823 -72.265 -72.649 -72.979 -73.265 -73.52 -73.757 -73.985 -74.213 -74.447 -74.693 -74.953 -75.231 -75.529 -75.847 -76.187 -76.547 -76.926 -77.321 -77.728 -78.142 -78.555 -78.956 -79.334 -79.671 -79.95 -80.158 -80.29 -80.352 -80.359 -80.328 -80.273 -80.204 -80.127 -80.048 -79.966 -79.882 -79.792 -79.69 -79.571 -79.425 -79.242 -79.012 -78.73 -78.402 -78.057 -77.765 -77.634 -77.765 -78.177 -78.789 -79.489 -80.185 -80.831 -81.409 -81.922 -82.38 -82.796 -83.181 -83.546 -83.902 -84.255 -84.613 -84.982 -85.365 -85.766 -86.187 -86.629 -87.092 -87.574 -88.072 -88.578 -89.084 -89.575 -90.031 -90.43 -90.752 -90.985 -91.136 -91.222 -91.264 -91.282)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.269 -25.106 -23.91 -22.714 -21.591 -20.681 -20.172 -20.209 -20.778 -21.711 -22.823 -23.985 -25.13 -26.228 -27.27 -28.257 -29.191 -30.076 -30.916 -31.715 -32.475 -33.196 -33.881 -34.528 -35.139 -35.713 -36.248 -36.746 -37.206 -37.629 -38.016 -38.369 -38.692 -38.987 -39.257 -39.506 -39.737 -39.952 -40.15 -40.332 -40.496 -40.637 -40.751 -40.833 -40.882 -40.902 -40.906 -40.909 -40.921 -40.954 -41.015 -41.108 -41.24 -41.414 -41.633 -41.897 -42.206 -42.56 -42.954 -43.387 -43.854 -44.35 -44.87 -45.411 -45.966 -46.53 -47.098 -47.662 -48.213 -48.746 -49.256 -49.741 -50.206 -50.654 -51.088 -51.511 -51.927 -52.337 -52.744 -53.15 -53.558 -53.97 -54.388 -54.814 -55.249 -55.693 -56.147 -56.612 -57.085 -57.566 -58.053 -58.541 -59.025 -59.5 -59.959 -60.399 -60.822 -61.234 -61.641 -62.048 -62.459 -62.879 -63.308 -63.749 -64.204 -64.673 -65.157 -65.657 -66.172 -66.701 -67.245 -67.8 -68.366 -68.938 -69.513 -70.083 -70.642 -71.177 -71.675 -72.121 -72.51 -72.845 -73.138 -73.403 -73.65 -73.891 -74.131 -74.378 -74.634 -74.905 -75.191 -75.496 -75.82 -76.163 -76.524 -76.904 -77.299 -77.706 -78.119 -78.533 -78.937 -79.32 -79.664 -79.949 -80.158 -80.285 -80.338 -80.334 -80.293 -80.228 -80.151 -80.066 -79.979 -79.89 -79.799 -79.706 -79.607 -79.498 -79.377 -79.241 -79.088 -78.925 -78.764 -78.629 -78.555 -78.585 -78.747 -79.046 -79.458 -79.937 -80.439 -80.931 -81.4 -81.841 -82.255 -82.647 -83.023 -83.389 -83.753 -84.118 -84.491 -84.875 -85.275 -85.694 -86.132 -86.593 -87.075 -87.577 -88.098 -88.631 -89.167 -89.693 -90.188 -90.625 -90.977 -91.231 -91.393 -91.486 -91.532 -91.554)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.057 -24.966 -23.869 -22.807 -21.858 -21.142 -20.796 -20.905 -21.435 -22.262 -23.248 -24.293 -25.339 -26.358 -27.336 -28.272 -29.166 -30.019 -30.836 -31.619 -32.37 -33.09 -33.781 -34.444 -35.079 -35.686 -36.266 -36.819 -37.343 -37.84 -38.308 -38.748 -39.16 -39.544 -39.9 -40.226 -40.523 -40.789 -41.021 -41.219 -41.377 -41.491 -41.559 -41.576 -41.546 -41.478 -41.384 -41.282 -41.187 -41.111 -41.07 -41.075 -41.139 -41.271 -41.478 -41.761 -42.114 -42.533 -43.005 -43.523 -44.075 -44.654 -45.252 -45.862 -46.478 -47.094 -47.705 -48.303 -48.881 -49.434 -49.958 -50.455 -50.926 -51.376 -51.809 -52.228 -52.635 -53.035 -53.428 -53.818 -54.207 -54.597 -54.99 -55.387 -55.791 -56.201 -56.619 -57.042 -57.471 -57.904 -58.338 -58.769 -59.194 -59.608 -60.006 -60.39 -60.762 -61.128 -61.494 -61.865 -62.245 -62.635 -63.04 -63.459 -63.894 -64.346 -64.814 -65.299 -65.799 -66.315 -66.843 -67.382 -67.929 -68.479 -69.028 -69.568 -70.091 -70.587 -71.044 -71.453 -71.812 -72.125 -72.404 -72.658 -72.9 -73.137 -73.376 -73.622 -73.879 -74.15 -74.437 -74.741 -75.063 -75.402 -75.759 -76.131 -76.516 -76.909 -77.305 -77.696 -78.074 -78.426 -78.739 -78.997 -79.189 -79.314 -79.38 -79.4 -79.39 -79.362 -79.324 -79.282 -79.238 -79.195 -79.152 -79.108 -79.059 -79.003 -78.935 -78.853 -78.756 -78.646 -78.535 -78.443 -78.403 -78.45 -78.612 -78.893 -79.271 -79.705 -80.158 -80.602 -81.024 -81.421 -81.794 -82.148 -82.489 -82.824 -83.158 -83.495 -83.84 -84.198 -84.57 -84.959 -85.366 -85.792 -86.234 -86.692 -87.161 -87.635 -88.104 -88.555 -88.97 -89.33 -89.617 -89.827 -89.967 -90.055 -90.108 -90.144)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-25.575 -24.652 -23.774 -22.987 -22.357 -21.959 -21.851 -22.05 -22.518 -23.186 -23.977 -24.833 -25.713 -26.592 -27.457 -28.3 -29.12 -29.916 -30.687 -31.435 -32.16 -32.863 -33.545 -34.204 -34.841 -35.456 -36.048 -36.615 -37.157 -37.672 -38.158 -38.615 -39.041 -39.433 -39.792 -40.114 -40.399 -40.644 -40.849 -41.012 -41.132 -41.208 -41.242 -41.238 -41.203 -41.148 -41.086 -41.028 -40.985 -40.964 -40.974 -41.018 -41.101 -41.225 -41.393 -41.604 -41.858 -42.153 -42.487 -42.856 -43.255 -43.683 -44.132 -44.6 -45.081 -45.571 -46.063 -46.553 -47.035 -47.507 -47.966 -48.411 -48.845 -49.267 -49.68 -50.084 -50.481 -50.872 -51.259 -51.641 -52.02 -52.398 -52.775 -53.153 -53.531 -53.912 -54.295 -54.68 -55.066 -55.451 -55.834 -56.212 -56.581 -56.94 -57.286 -57.62 -57.944 -58.261 -58.574 -58.886 -59.2 -59.517 -59.84 -60.169 -60.507 -60.853 -61.21 -61.576 -61.953 -62.341 -62.739 -63.146 -63.56 -63.98 -64.403 -64.826 -65.243 -65.65 -66.043 -66.418 -66.776 -67.117 -67.447 -67.769 -68.087 -68.406 -68.727 -69.054 -69.389 -69.734 -70.089 -70.456 -70.835 -71.225 -71.626 -72.038 -72.456 -72.881 -73.306 -73.728 -74.141 -74.538 -74.911 -75.252 -75.558 -75.829 -76.068 -76.283 -76.482 -76.671 -76.857 -77.045 -77.24 -77.445 -77.662 -77.894 -78.142 -78.407 -78.688 -78.985 -79.297 -79.621 -79.953 -80.291 -80.627 -80.956 -81.266 -81.551 -81.8 -82.01 -82.181 -82.319 -82.433 -82.532 -82.626 -82.72 -82.822 -82.936 -83.065 -83.211 -83.377 -83.564 -83.772 -84.0 -84.248 -84.513 -84.794 -85.087 -85.386 -85.686 -85.977 -86.25 -86.494 -86.701 -86.864 -86.985 -87.072 -87.133 -87.18 -87.222)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-25.294 -24.399 -23.563 -22.837 -22.286 -21.981 -21.966 -22.241 -22.761 -23.453 -24.252 -25.104 -25.974 -26.843 -27.698 -28.534 -29.349 -30.142 -30.913 -31.664 -32.395 -33.107 -33.799 -34.472 -35.126 -35.759 -36.371 -36.96 -37.525 -38.064 -38.575 -39.056 -39.504 -39.916 -40.291 -40.626 -40.918 -41.164 -41.363 -41.512 -41.609 -41.654 -41.65 -41.602 -41.518 -41.412 -41.297 -41.185 -41.088 -41.014 -40.974 -40.973 -41.017 -41.111 -41.258 -41.459 -41.711 -42.012 -42.359 -42.745 -43.166 -43.615 -44.086 -44.575 -45.075 -45.581 -46.087 -46.589 -47.082 -47.563 -48.03 -48.485 -48.929 -49.363 -49.788 -50.207 -50.62 -51.029 -51.434 -51.836 -52.237 -52.636 -53.034 -53.432 -53.828 -54.224 -54.618 -55.009 -55.396 -55.777 -56.149 -56.51 -56.857 -57.188 -57.503 -57.804 -58.093 -58.373 -58.649 -58.923 -59.197 -59.473 -59.754 -60.039 -60.331 -60.631 -60.939 -61.256 -61.584 -61.924 -62.276 -62.641 -63.018 -63.406 -63.802 -64.203 -64.604 -65.001 -65.389 -65.765 -66.128 -66.481 -66.825 -67.165 -67.502 -67.841 -68.184 -68.532 -68.888 -69.253 -69.627 -70.012 -70.408 -70.814 -71.229 -71.652 -72.081 -72.512 -72.942 -73.366 -73.778 -74.169 -74.534 -74.866 -75.161 -75.423 -75.655 -75.864 -76.059 -76.244 -76.428 -76.614 -76.807 -77.01 -77.226 -77.456 -77.702 -77.964 -78.242 -78.534 -78.841 -79.158 -79.483 -79.81 -80.134 -80.448 -80.742 -81.008 -81.24 -81.434 -81.594 -81.725 -81.836 -81.935 -82.03 -82.129 -82.235 -82.354 -82.487 -82.638 -82.808 -82.998 -83.207 -83.436 -83.683 -83.946 -84.223 -84.509 -84.798 -85.086 -85.362 -85.619 -85.845 -86.035 -86.184 -86.296 -86.378 -86.44 -86.491 -86.54)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-25.604 -24.502 -23.415 -22.404 -21.575 -21.066 -20.994 -21.375 -22.109 -23.055 -24.093 -25.15 -26.187 -27.188 -28.146 -29.062 -29.937 -30.775 -31.578 -32.349 -33.089 -33.799 -34.482 -35.136 -35.762 -36.36 -36.929 -37.469 -37.98 -38.46 -38.909 -39.327 -39.714 -40.07 -40.393 -40.684 -40.941 -41.165 -41.352 -41.502 -41.611 -41.676 -41.695 -41.669 -41.605 -41.515 -41.414 -41.315 -41.23 -41.169 -41.138 -41.146 -41.2 -41.305 -41.465 -41.683 -41.958 -42.287 -42.666 -43.09 -43.553 -44.048 -44.569 -45.109 -45.664 -46.226 -46.79 -47.348 -47.895 -48.426 -48.94 -49.439 -49.924 -50.399 -50.866 -51.325 -51.78 -52.23 -52.677 -53.121 -53.564 -54.006 -54.447 -54.886 -55.325 -55.762 -56.195 -56.625 -57.048 -57.462 -57.864 -58.249 -58.614 -58.954 -59.268 -59.558 -59.829 -60.086 -60.334 -60.578 -60.82 -61.061 -61.304 -61.548 -61.795 -62.044 -62.299 -62.559 -62.829 -63.111 -63.41 -63.729 -64.073 -64.442 -64.837 -65.253 -65.684 -66.122 -66.556 -66.979 -67.388 -67.785 -68.171 -68.551 -68.928 -69.305 -69.686 -70.072 -70.466 -70.869 -71.283 -71.71 -72.15 -72.602 -73.068 -73.546 -74.033 -74.528 -75.026 -75.522 -76.007 -76.47 -76.901 -77.285 -77.617 -77.897 -78.133 -78.338 -78.521 -78.693 -78.862 -79.034 -79.215 -79.409 -79.619 -79.849 -80.099 -80.372 -80.667 -80.984 -81.322 -81.678 -82.049 -82.43 -82.813 -83.188 -83.542 -83.86 -84.126 -84.333 -84.485 -84.592 -84.67 -84.734 -84.794 -84.859 -84.937 -85.031 -85.146 -85.284 -85.448 -85.638 -85.856 -86.101 -86.373 -86.669 -86.987 -87.323 -87.67 -88.021 -88.364 -88.684 -88.963 -89.184 -89.339 -89.432 -89.478 -89.493 -89.495 -89.496)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.042 -24.79 -23.5 -22.227 -21.097 -20.326 -20.151 -20.631 -21.591 -22.783 -24.035 -25.259 -26.42 -27.512 -28.535 -29.495 -30.399 -31.252 -32.059 -32.822 -33.546 -34.231 -34.878 -35.489 -36.063 -36.602 -37.105 -37.573 -38.007 -38.408 -38.779 -39.122 -39.438 -39.731 -40.002 -40.254 -40.487 -40.702 -40.897 -41.07 -41.218 -41.333 -41.41 -41.444 -41.436 -41.398 -41.344 -41.289 -41.243 -41.216 -41.215 -41.249 -41.325 -41.452 -41.634 -41.876 -42.177 -42.537 -42.951 -43.413 -43.917 -44.456 -45.024 -45.613 -46.217 -46.83 -47.444 -48.051 -48.642 -49.211 -49.755 -50.276 -50.778 -51.263 -51.734 -52.192 -52.639 -53.076 -53.506 -53.93 -54.35 -54.768 -55.186 -55.605 -56.027 -56.453 -56.884 -57.318 -57.754 -58.192 -58.626 -59.052 -59.463 -59.852 -60.214 -60.549 -60.864 -61.165 -61.456 -61.741 -62.021 -62.299 -62.573 -62.844 -63.112 -63.376 -63.638 -63.898 -64.161 -64.432 -64.72 -65.035 -65.386 -65.78 -66.219 -66.699 -67.21 -67.736 -68.26 -68.767 -69.249 -69.708 -70.146 -70.57 -70.985 -71.395 -71.803 -72.215 -72.633 -73.062 -73.503 -73.959 -74.432 -74.924 -75.435 -75.964 -76.511 -77.073 -77.645 -78.222 -78.794 -79.345 -79.855 -80.301 -80.667 -80.951 -81.168 -81.338 -81.479 -81.604 -81.724 -81.849 -81.986 -82.14 -82.317 -82.52 -82.754 -83.018 -83.316 -83.646 -84.008 -84.4 -84.818 -85.256 -85.706 -86.156 -86.585 -86.969 -87.278 -87.493 -87.618 -87.675 -87.691 -87.687 -87.681 -87.684 -87.703 -87.746 -87.817 -87.92 -88.058 -88.232 -88.443 -88.692 -88.979 -89.303 -89.659 -90.046 -90.456 -90.879 -91.302 -91.704 -92.053 -92.318 -92.477 -92.537 -92.522 -92.466 -92.394 -92.322)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.274 -25.06 -23.822 -22.618 -21.569 -20.873 -20.728 -21.178 -22.071 -23.189 -24.373 -25.54 -26.654 -27.703 -28.688 -29.612 -30.482 -31.301 -32.074 -32.804 -33.495 -34.147 -34.763 -35.345 -35.892 -36.406 -36.889 -37.34 -37.763 -38.158 -38.527 -38.873 -39.196 -39.499 -39.783 -40.048 -40.296 -40.524 -40.732 -40.916 -41.072 -41.194 -41.275 -41.312 -41.307 -41.268 -41.209 -41.144 -41.083 -41.036 -41.015 -41.031 -41.096 -41.22 -41.414 -41.681 -42.02 -42.428 -42.896 -43.415 -43.975 -44.566 -45.182 -45.813 -46.453 -47.095 -47.733 -48.357 -48.961 -49.537 -50.084 -50.603 -51.098 -51.571 -52.023 -52.458 -52.876 -53.279 -53.67 -54.05 -54.423 -54.791 -55.157 -55.526 -55.9 -56.281 -56.67 -57.069 -57.476 -57.889 -58.304 -58.715 -59.116 -59.498 -59.859 -60.197 -60.516 -60.823 -61.121 -61.414 -61.704 -61.992 -62.28 -62.569 -62.86 -63.153 -63.451 -63.755 -64.066 -64.388 -64.722 -65.071 -65.436 -65.819 -66.218 -66.632 -67.054 -67.477 -67.892 -68.292 -68.675 -69.045 -69.407 -69.766 -70.126 -70.491 -70.864 -71.246 -71.64 -72.049 -72.474 -72.915 -73.376 -73.855 -74.352 -74.868 -75.4 -75.945 -76.499 -77.055 -77.605 -78.135 -78.629 -79.067 -79.437 -79.739 -79.985 -80.19 -80.369 -80.533 -80.691 -80.853 -81.024 -81.208 -81.412 -81.637 -81.887 -82.163 -82.466 -82.797 -83.155 -83.537 -83.94 -84.358 -84.784 -85.205 -85.605 -85.962 -86.254 -86.466 -86.602 -86.68 -86.722 -86.746 -86.768 -86.797 -86.84 -86.905 -86.994 -87.111 -87.259 -87.439 -87.652 -87.898 -88.177 -88.488 -88.827 -89.19 -89.572 -89.963 -90.35 -90.714 -91.031 -91.274 -91.428 -91.499 -91.508 -91.48 -91.438 -91.396)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-25.98 -25.114 -24.311 -23.618 -23.099 -22.815 -22.806 -23.07 -23.56 -24.21 -24.958 -25.753 -26.562 -27.364 -28.148 -28.908 -29.64 -30.345 -31.021 -31.67 -32.291 -32.885 -33.453 -33.994 -34.51 -34.999 -35.463 -35.9 -36.312 -36.698 -37.058 -37.392 -37.701 -37.985 -38.245 -38.48 -38.691 -38.878 -39.042 -39.182 -39.3 -39.395 -39.47 -39.527 -39.573 -39.615 -39.66 -39.714 -39.784 -39.874 -39.986 -40.123 -40.284 -40.471 -40.684 -40.922 -41.184 -41.47 -41.778 -42.106 -42.453 -42.816 -43.193 -43.581 -43.978 -44.38 -44.783 -45.185 -45.582 -45.973 -46.356 -46.733 -47.103 -47.469 -47.83 -48.188 -48.543 -48.897 -49.25 -49.604 -49.958 -50.315 -50.675 -51.039 -51.408 -51.782 -52.161 -52.544 -52.931 -53.319 -53.708 -54.094 -54.474 -54.846 -55.209 -55.562 -55.904 -56.238 -56.565 -56.884 -57.196 -57.503 -57.804 -58.099 -58.388 -58.672 -58.952 -59.228 -59.503 -59.779 -60.059 -60.346 -60.644 -60.956 -61.283 -61.624 -61.979 -62.343 -62.713 -63.085 -63.457 -63.827 -64.196 -64.563 -64.93 -65.297 -65.666 -66.037 -66.411 -66.789 -67.171 -67.557 -67.949 -68.345 -68.745 -69.149 -69.554 -69.959 -70.362 -70.759 -71.147 -71.52 -71.874 -72.205 -72.511 -72.792 -73.052 -73.293 -73.521 -73.74 -73.952 -74.163 -74.374 -74.588 -74.808 -75.034 -75.269 -75.512 -75.765 -76.026 -76.295 -76.571 -76.852 -77.134 -77.414 -77.688 -77.95 -78.195 -78.418 -78.619 -78.797 -78.957 -79.104 -79.242 -79.376 -79.51 -79.647 -79.791 -79.942 -80.103 -80.275 -80.458 -80.654 -80.86 -81.078 -81.306 -81.542 -81.784 -82.028 -82.27 -82.506 -82.729 -82.934 -83.116 -83.274 -83.409 -83.525 -83.628 -83.723 -83.816)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.448 -25.808 -25.265 -24.854 -24.608 -24.547 -24.675 -24.972 -25.405 -25.937 -26.533 -27.164 -27.809 -28.454 -29.09 -29.71 -30.311 -30.89 -31.447 -31.98 -32.49 -32.976 -33.437 -33.875 -34.289 -34.679 -35.046 -35.39 -35.712 -36.012 -36.29 -36.549 -36.788 -37.009 -37.212 -37.398 -37.569 -37.725 -37.867 -37.996 -38.114 -38.221 -38.32 -38.415 -38.509 -38.607 -38.713 -38.829 -38.958 -39.103 -39.264 -39.442 -39.636 -39.847 -40.075 -40.319 -40.578 -40.851 -41.138 -41.437 -41.747 -42.068 -42.397 -42.733 -43.075 -43.42 -43.768 -44.116 -44.465 -44.813 -45.162 -45.511 -45.861 -46.212 -46.566 -46.923 -47.281 -47.643 -48.007 -48.373 -48.741 -49.111 -49.481 -49.852 -50.222 -50.591 -50.956 -51.318 -51.674 -52.023 -52.363 -52.692 -53.01 -53.315 -53.607 -53.887 -54.155 -54.412 -54.66 -54.898 -55.129 -55.352 -55.57 -55.782 -55.991 -56.196 -56.4 -56.605 -56.812 -57.022 -57.239 -57.464 -57.698 -57.942 -58.197 -58.462 -58.736 -59.018 -59.307 -59.601 -59.9 -60.202 -60.508 -60.818 -61.13 -61.445 -61.763 -62.083 -62.406 -62.731 -63.059 -63.388 -63.718 -64.05 -64.381 -64.712 -65.041 -65.367 -65.689 -66.004 -66.311 -66.609 -66.895 -67.168 -67.43 -67.68 -67.92 -68.151 -68.375 -68.594 -68.809 -69.021 -69.233 -69.444 -69.657 -69.87 -70.086 -70.305 -70.525 -70.748 -70.972 -71.196 -71.421 -71.643 -71.862 -72.076 -72.282 -72.481 -72.67 -72.85 -73.022 -73.187 -73.348 -73.505 -73.661 -73.817 -73.974 -74.133 -74.296 -74.462 -74.632 -74.807 -74.986 -75.168 -75.355 -75.545 -75.736 -75.928 -76.12 -76.308 -76.492 -76.669 -76.839 -77.0 -77.152 -77.297 -77.436 -77.57 -77.703 -77.835)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-25.91 -25.449 -25.078 -24.815 -24.672 -24.655 -24.763 -24.986 -25.31 -25.714 -26.18 -26.691 -27.232 -27.791 -28.359 -28.928 -29.493 -30.05 -30.595 -31.126 -31.641 -32.137 -32.614 -33.07 -33.504 -33.915 -34.302 -34.665 -35.003 -35.316 -35.605 -35.869 -36.109 -36.325 -36.517 -36.688 -36.837 -36.965 -37.074 -37.166 -37.242 -37.305 -37.358 -37.405 -37.45 -37.494 -37.544 -37.599 -37.664 -37.74 -37.826 -37.925 -38.035 -38.158 -38.292 -38.437 -38.595 -38.764 -38.947 -39.145 -39.358 -39.591 -39.844 -40.12 -40.42 -40.746 -41.098 -41.474 -41.875 -42.298 -42.741 -43.203 -43.682 -44.175 -44.682 -45.201 -45.73 -46.268 -46.814 -47.366 -47.924 -48.486 -49.052 -49.619 -50.185 -50.75 -51.31 -51.864 -52.408 -52.94 -53.457 -53.956 -54.434 -54.889 -55.32 -55.725 -56.104 -56.458 -56.788 -57.094 -57.379 -57.645 -57.895 -58.131 -58.359 -58.58 -58.799 -59.02 -59.248 -59.485 -59.735 -60.0 -60.281 -60.58 -60.894 -61.223 -61.564 -61.915 -62.274 -62.638 -63.006 -63.377 -63.749 -64.123 -64.498 -64.874 -65.252 -65.631 -66.013 -66.396 -66.783 -67.172 -67.563 -67.957 -68.353 -68.748 -69.143 -69.535 -69.922 -70.3 -70.668 -71.023 -71.362 -71.684 -71.989 -72.277 -72.55 -72.81 -73.058 -73.298 -73.532 -73.763 -73.992 -74.223 -74.456 -74.693 -74.936 -75.184 -75.437 -75.696 -75.96 -76.225 -76.492 -76.756 -77.016 -77.267 -77.508 -77.735 -77.949 -78.149 -78.336 -78.512 -78.679 -78.84 -78.997 -79.154 -79.312 -79.473 -79.64 -79.813 -79.994 -80.183 -80.381 -80.587 -80.799 -81.018 -81.24 -81.463 -81.685 -81.902 -82.11 -82.307 -82.49 -82.66 -82.815 -82.956 -83.088 -83.211 -83.33 -83.446)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-25.247 -24.518 -23.847 -23.259 -22.784 -22.456 -22.298 -22.325 -22.529 -22.888 -23.37 -23.94 -24.567 -25.228 -25.904 -26.583 -27.255 -27.914 -28.557 -29.18 -29.783 -30.363 -30.92 -31.453 -31.962 -32.448 -32.911 -33.352 -33.771 -34.17 -34.551 -34.914 -35.26 -35.591 -35.906 -36.204 -36.485 -36.747 -36.988 -37.206 -37.4 -37.567 -37.709 -37.826 -37.92 -37.998 -38.065 -38.125 -38.186 -38.253 -38.327 -38.413 -38.511 -38.622 -38.746 -38.881 -39.028 -39.186 -39.356 -39.54 -39.741 -39.962 -40.21 -40.489 -40.804 -41.158 -41.551 -41.983 -42.449 -42.945 -43.467 -44.009 -44.569 -45.142 -45.728 -46.323 -46.927 -47.54 -48.159 -48.784 -49.415 -50.051 -50.69 -51.333 -51.976 -52.619 -53.258 -53.892 -54.516 -55.128 -55.722 -56.293 -56.836 -57.348 -57.822 -58.259 -58.656 -59.015 -59.339 -59.633 -59.9 -60.146 -60.377 -60.597 -60.813 -61.03 -61.251 -61.482 -61.725 -61.982 -62.256 -62.547 -62.855 -63.179 -63.517 -63.867 -64.225 -64.588 -64.952 -65.314 -65.671 -66.024 -66.371 -66.714 -67.054 -67.395 -67.736 -68.081 -68.431 -68.787 -69.152 -69.526 -69.911 -70.306 -70.712 -71.128 -71.553 -71.984 -72.419 -72.854 -73.284 -73.703 -74.105 -74.484 -74.836 -75.158 -75.452 -75.719 -75.964 -76.192 -76.409 -76.62 -76.829 -77.042 -77.261 -77.49 -77.731 -77.986 -78.257 -78.543 -78.844 -79.158 -79.483 -79.815 -80.148 -80.478 -80.795 -81.094 -81.367 -81.61 -81.82 -81.999 -82.151 -82.282 -82.399 -82.51 -82.619 -82.734 -82.857 -82.993 -83.146 -83.316 -83.507 -83.717 -83.948 -84.198 -84.464 -84.744 -85.033 -85.324 -85.612 -85.887 -86.142 -86.368 -86.56 -86.717 -86.84 -86.935 -87.009 -87.071)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-25.965 -24.835 -23.663 -22.465 -21.285 -20.217 -19.423 -19.093 -19.326 -20.036 -21.032 -22.142 -23.26 -24.337 -25.353 -26.304 -27.191 -28.019 -28.792 -29.514 -30.19 -30.822 -31.413 -31.967 -32.486 -32.972 -33.427 -33.855 -34.257 -34.637 -34.997 -35.338 -35.663 -35.974 -36.271 -36.555 -36.825 -37.082 -37.323 -37.547 -37.751 -37.934 -38.091 -38.219 -38.316 -38.383 -38.426 -38.459 -38.49 -38.528 -38.578 -38.643 -38.723 -38.819 -38.931 -39.058 -39.2 -39.358 -39.531 -39.721 -39.929 -40.159 -40.413 -40.692 -41.0 -41.336 -41.701 -42.091 -42.502 -42.93 -43.369 -43.815 -44.267 -44.725 -45.188 -45.656 -46.128 -46.604 -47.083 -47.565 -48.05 -48.538 -49.029 -49.524 -50.023 -50.527 -51.035 -51.549 -52.068 -52.591 -53.118 -53.647 -54.174 -54.696 -55.208 -55.706 -56.187 -56.653 -57.107 -57.553 -57.993 -58.431 -58.868 -59.305 -59.746 -60.191 -60.642 -61.1 -61.566 -62.04 -62.524 -63.017 -63.518 -64.026 -64.539 -65.055 -65.569 -66.075 -66.566 -67.03 -67.461 -67.855 -68.216 -68.549 -68.864 -69.164 -69.457 -69.745 -70.032 -70.323 -70.618 -70.922 -71.236 -71.561 -71.899 -72.25 -72.615 -72.992 -73.38 -73.777 -74.18 -74.581 -74.974 -75.347 -75.687 -75.984 -76.234 -76.445 -76.628 -76.794 -76.95 -77.105 -77.263 -77.428 -77.604 -77.793 -77.997 -78.219 -78.459 -78.718 -78.996 -79.292 -79.607 -79.936 -80.278 -80.627 -80.977 -81.317 -81.634 -81.912 -82.139 -82.313 -82.442 -82.541 -82.623 -82.699 -82.776 -82.861 -82.958 -83.07 -83.2 -83.35 -83.522 -83.716 -83.932 -84.171 -84.433 -84.714 -85.013 -85.327 -85.649 -85.973 -86.286 -86.573 -86.816 -87.002 -87.128 -87.206 -87.251 -87.28)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.764 -25.581 -24.33 -23.01 -21.643 -20.303 -19.164 -18.513 -18.596 -19.367 -20.534 -21.831 -23.11 -24.314 -25.426 -26.449 -27.389 -28.255 -29.054 -29.793 -30.477 -31.11 -31.697 -32.241 -32.744 -33.21 -33.643 -34.044 -34.419 -34.77 -35.1 -35.414 -35.715 -36.004 -36.284 -36.557 -36.822 -37.081 -37.332 -37.574 -37.805 -38.022 -38.222 -38.399 -38.549 -38.667 -38.757 -38.832 -38.903 -38.979 -39.065 -39.164 -39.277 -39.404 -39.546 -39.701 -39.872 -40.057 -40.259 -40.479 -40.719 -40.982 -41.268 -41.581 -41.92 -42.286 -42.677 -43.091 -43.521 -43.963 -44.409 -44.856 -45.301 -45.747 -46.193 -46.641 -47.09 -47.539 -47.988 -48.438 -48.888 -49.339 -49.791 -50.245 -50.702 -51.164 -51.631 -52.105 -52.587 -53.076 -53.573 -54.077 -54.586 -55.094 -55.598 -56.089 -56.565 -57.026 -57.477 -57.922 -58.363 -58.802 -59.243 -59.686 -60.134 -60.587 -61.047 -61.515 -61.992 -62.479 -62.975 -63.482 -63.998 -64.522 -65.053 -65.588 -66.124 -66.654 -67.17 -67.662 -68.115 -68.524 -68.892 -69.226 -69.537 -69.832 -70.115 -70.393 -70.67 -70.948 -71.232 -71.524 -71.826 -72.14 -72.469 -72.812 -73.169 -73.542 -73.928 -74.326 -74.733 -75.144 -75.55 -75.942 -76.302 -76.616 -76.874 -77.084 -77.26 -77.415 -77.56 -77.701 -77.846 -77.997 -78.159 -78.335 -78.526 -78.736 -78.964 -79.213 -79.482 -79.772 -80.081 -80.408 -80.751 -81.106 -81.466 -81.822 -82.162 -82.465 -82.713 -82.897 -83.027 -83.119 -83.192 -83.256 -83.321 -83.394 -83.478 -83.577 -83.695 -83.833 -83.993 -84.176 -84.383 -84.613 -84.868 -85.144 -85.442 -85.757 -86.085 -86.42 -86.752 -87.064 -87.336 -87.546 -87.686 -87.765 -87.804 -87.823)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-27.012 -25.948 -24.854 -23.742 -22.651 -21.657 -20.884 -20.487 -20.563 -21.082 -21.906 -22.882 -23.902 -24.905 -25.863 -26.765 -27.61 -28.4 -29.138 -29.827 -30.472 -31.075 -31.641 -32.171 -32.668 -33.136 -33.577 -33.993 -34.387 -34.762 -35.12 -35.465 -35.799 -36.124 -36.442 -36.755 -37.064 -37.37 -37.672 -37.971 -38.264 -38.55 -38.824 -39.084 -39.324 -39.544 -39.746 -39.938 -40.126 -40.319 -40.521 -40.734 -40.959 -41.197 -41.448 -41.71 -41.984 -42.267 -42.56 -42.862 -43.17 -43.484 -43.802 -44.123 -44.444 -44.765 -45.082 -45.393 -45.695 -45.983 -46.256 -46.513 -46.756 -46.989 -47.215 -47.435 -47.654 -47.871 -48.089 -48.307 -48.529 -48.753 -48.982 -49.216 -49.458 -49.707 -49.966 -50.234 -50.514 -50.806 -51.109 -51.422 -51.745 -52.074 -52.407 -52.74 -53.073 -53.405 -53.737 -54.072 -54.41 -54.751 -55.096 -55.447 -55.801 -56.161 -56.525 -56.894 -57.267 -57.645 -58.026 -58.41 -58.797 -59.185 -59.573 -59.959 -60.342 -60.719 -61.086 -61.439 -61.775 -62.093 -62.393 -62.679 -62.954 -63.222 -63.483 -63.742 -63.999 -64.256 -64.514 -64.774 -65.037 -65.305 -65.576 -65.851 -66.131 -66.415 -66.701 -66.99 -67.279 -67.566 -67.849 -68.123 -68.383 -68.628 -68.854 -69.065 -69.263 -69.452 -69.636 -69.818 -70.0 -70.184 -70.37 -70.56 -70.756 -70.957 -71.164 -71.377 -71.596 -71.822 -72.053 -72.288 -72.527 -72.767 -73.006 -73.24 -73.467 -73.68 -73.876 -74.054 -74.215 -74.364 -74.506 -74.643 -74.779 -74.917 -75.058 -75.203 -75.353 -75.511 -75.675 -75.846 -76.025 -76.211 -76.405 -76.605 -76.81 -77.019 -77.23 -77.441 -77.648 -77.847 -78.032 -78.199 -78.348 -78.48 -78.6 -78.712)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-27.071 -26.235 -25.437 -24.706 -24.082 -23.613 -23.348 -23.316 -23.518 -23.924 -24.485 -25.149 -25.872 -26.625 -27.384 -28.137 -28.876 -29.597 -30.297 -30.977 -31.636 -32.274 -32.891 -33.487 -34.064 -34.62 -35.157 -35.673 -36.169 -36.645 -37.1 -37.534 -37.946 -38.335 -38.701 -39.042 -39.356 -39.643 -39.9 -40.125 -40.317 -40.473 -40.592 -40.674 -40.722 -40.74 -40.734 -40.713 -40.684 -40.653 -40.627 -40.612 -40.612 -40.634 -40.682 -40.761 -40.877 -41.032 -41.229 -41.469 -41.751 -42.073 -42.433 -42.825 -43.245 -43.688 -44.147 -44.617 -45.094 -45.571 -46.047 -46.518 -46.983 -47.441 -47.893 -48.337 -48.774 -49.204 -49.627 -50.043 -50.452 -50.855 -51.252 -51.644 -52.034 -52.421 -52.809 -53.198 -53.59 -53.984 -54.382 -54.78 -55.178 -55.573 -55.962 -56.344 -56.719 -57.086 -57.447 -57.802 -58.155 -58.507 -58.858 -59.21 -59.563 -59.92 -60.279 -60.641 -61.007 -61.376 -61.748 -62.122 -62.498 -62.874 -63.249 -63.622 -63.989 -64.349 -64.698 -65.036 -65.361 -65.673 -65.975 -66.27 -66.561 -66.85 -67.141 -67.436 -67.738 -68.048 -68.368 -68.699 -69.042 -69.396 -69.763 -70.141 -70.529 -70.927 -71.33 -71.736 -72.14 -72.539 -72.925 -73.293 -73.638 -73.957 -74.25 -74.518 -74.765 -74.996 -75.216 -75.429 -75.64 -75.851 -76.067 -76.289 -76.521 -76.763 -77.016 -77.282 -77.559 -77.847 -78.144 -78.448 -78.754 -79.059 -79.356 -79.64 -79.903 -80.14 -80.35 -80.532 -80.69 -80.83 -80.957 -81.076 -81.195 -81.316 -81.444 -81.582 -81.732 -81.896 -82.076 -82.271 -82.482 -82.708 -82.947 -83.199 -83.458 -83.722 -83.985 -84.24 -84.481 -84.7 -84.892 -85.055 -85.189 -85.298 -85.389 -85.468)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.508 -25.578 -24.643 -23.739 -22.933 -22.321 -22.012 -22.072 -22.489 -23.172 -24.015 -24.93 -25.861 -26.778 -27.666 -28.522 -29.344 -30.134 -30.895 -31.628 -32.337 -33.022 -33.686 -34.329 -34.951 -35.552 -36.132 -36.689 -37.222 -37.729 -38.207 -38.656 -39.072 -39.452 -39.794 -40.096 -40.356 -40.571 -40.739 -40.861 -40.933 -40.956 -40.93 -40.857 -40.743 -40.596 -40.428 -40.252 -40.077 -39.911 -39.761 -39.63 -39.522 -39.441 -39.388 -39.366 -39.376 -39.416 -39.488 -39.587 -39.712 -39.858 -40.023 -40.202 -40.392 -40.587 -40.784 -40.98 -41.171 -41.354 -41.529 -41.694 -41.85 -41.998 -42.139 -42.274 -42.401 -42.522 -42.637 -42.747 -42.85 -42.949 -43.043 -43.133 -43.219 -43.302 -43.382 -43.46 -43.536 -43.61 -43.683 -43.754 -43.823 -43.888 -43.951 -44.01 -44.066 -44.121 -44.173 -44.224 -44.274 -44.324 -44.372 -44.421 -44.468 -44.515 -44.561 -44.607 -44.652 -44.695 -44.738 -44.78 -44.821 -44.86 -44.899 -44.937 -44.973 -45.008 -45.042 -45.074 -45.105 -45.134 -45.162 -45.19 -45.218 -45.245 -45.272 -45.3 -45.327 -45.355 -45.382 -45.41 -45.438 -45.466 -45.494 -45.522 -45.549 -45.577 -45.604 -45.63 -45.656 -45.681 -45.705 -45.727 -45.749 -45.768 -45.787 -45.805 -45.822 -45.838 -45.855 -45.871 -45.887 -45.904 -45.921 -45.938 -45.955 -45.973 -45.991 -46.009 -46.027 -46.046 -46.065 -46.084 -46.103 -46.122 -46.14 -46.159 -46.177 -46.194 -46.211 -46.227 -46.243 -46.259 -46.275 -46.291 -46.307 -46.323 -46.339 -46.356 -46.373 -46.391 -46.408 -46.427 -46.445 -46.464 -46.482 -46.501 -46.521 -46.54 -46.559 -46.578 -46.597 -46.616 -46.635 -46.653 -46.671 -46.688 -46.706 -46.723)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-27.365 -26.119 -24.801 -23.418 -22.02 -20.735 -19.821 -19.59 -20.144 -21.254 -22.606 -24.001 -25.35 -26.626 -27.828 -28.963 -30.042 -31.075 -32.069 -33.033 -33.973 -34.894 -35.799 -36.691 -37.572 -38.443 -39.305 -40.156 -40.995 -41.819 -42.623 -43.404 -44.155 -44.868 -45.537 -46.151 -46.702 -47.182 -47.581 -47.894 -48.114 -48.234 -48.251 -48.159 -47.96 -47.671 -47.331 -46.983 -46.659 -46.375 -46.139 -45.956 -45.826 -45.749 -45.726 -45.756 -45.836 -45.966 -46.143 -46.366 -46.63 -46.933 -47.273 -47.644 -48.043 -48.466 -48.907 -49.36 -49.815 -50.264 -50.699 -51.118 -51.525 -51.924 -52.319 -52.709 -53.097 -53.481 -53.862 -54.237 -54.609 -54.975 -55.337 -55.694 -56.049 -56.402 -56.754 -57.108 -57.464 -57.825 -58.191 -58.561 -58.932 -59.299 -59.656 -59.998 -60.325 -60.643 -60.958 -61.276 -61.598 -61.925 -62.259 -62.6 -62.947 -63.3 -63.658 -64.022 -64.39 -64.763 -65.139 -65.52 -65.906 -66.296 -66.693 -67.094 -67.501 -67.908 -68.311 -68.699 -69.066 -69.413 -69.747 -70.076 -70.407 -70.744 -71.088 -71.443 -71.809 -72.188 -72.581 -72.989 -73.413 -73.853 -74.31 -74.784 -75.275 -75.782 -76.303 -76.835 -77.373 -77.911 -78.436 -78.931 -79.374 -79.747 -80.05 -80.297 -80.507 -80.694 -80.87 -81.042 -81.218 -81.401 -81.595 -81.804 -82.031 -82.277 -82.544 -82.834 -83.145 -83.479 -83.833 -84.206 -84.594 -84.99 -85.386 -85.765 -86.105 -86.379 -86.567 -86.674 -86.723 -86.74 -86.746 -86.752 -86.769 -86.802 -86.856 -86.933 -87.035 -87.164 -87.321 -87.506 -87.719 -87.96 -88.226 -88.517 -88.828 -89.156 -89.494 -89.831 -90.15 -90.429 -90.637 -90.757 -90.794 -90.774 -90.725 -90.667)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 40.0 80.0 120.0 160.0 200.0 240.0 280.0 320.0 360.0 400.0 440.0 480.0 520.0 560.0 600.0 640.0 680.0 720.0 760.0 800.0 840.0 880.0 920.0 960.0 1000.0 1040.0 1080.0 1120.0 1160.0 1200.0 1240.0 1280.0 1320.0 1360.0 1400.0 1440.0 1480.0 1520.0 1560.0 1600.0 1640.0 1680.0 1720.0 1760.0 1800.0 1840.0 1880.0 1920.0 1960.0 2000.0 2040.0 2080.0 2120.0 2160.0 2200.0 2240.0 2280.0 2320.0 2360.0 2400.0 2440.0 2480.0 2520.0 2560.0 2600.0 2640.0 2680.0 2720.0 2760.0 2800.0 2840.0 2880.0 2920.0 2960.0 3000.0 3040.0 3080.0 3120.0 3160.0 3200.0 3240.0 3280.0 3320.0 3360.0 3400.0 3440.0 3480.0 3520.0 3560.0 3600.0 3640.0 3680.0 3720.0 3760.0 3800.0 3840.0 3880.0 3920.0 3960.0 4000.0 4040.0 4080.0 4120.0 4160.0 4200.0 4240.0 4280.0 4320.0 4360.0 4400.0 4440.0 4480.0 4520.0 4560.0 4600.0 4640.0 4680.0 4720.0 4760.0 4800.0 4840.0 4880.0 4920.0 4960.0 5000.0 5040.0 5080.0 5120.0 5160.0 5200.0 5240.0 5280.0 5320.0 5360.0 5400.0 5440.0 5480.0 5520.0 5560.0 5600.0 5640.0 5680.0 5720.0 5760.0 5800.0 5840.0 5880.0 5920.0 5960.0 6000.0 6040.0 6080.0 6120.0 6160.0 6200.0 6240.0 6280.0 6320.0 6360.0 6400.0 6440.0 6480.0 6520.0 6560.0 6600.0 6640.0 6680.0 6720.0 6760.0 6800.0 6840.0 6880.0 6920.0 6960.0 7000.0 7040.0 7080.0 7120.0 7160.0 7200.0 7240.0 7280.0 7320.0 7360.0 7400.0 7440.0 7480.0 7520.0 7560.0 7600.0 7640.0 7680.0 7720.0 7760.0 7800.0 7840.0 7880.0 7920.0 7960.0)) (quote (-26.091 -24.978 -23.799 -22.566 -21.326 -20.193 -19.381 -19.139 -19.562 -20.487 -21.658 -22.89 -24.092 -25.23 -26.297 -27.298 -28.239 -29.129 -29.974 -30.781 -31.555 -32.299 -33.017 -33.71 -34.38 -35.028 -35.654 -36.256 -36.835 -37.388 -37.913 -38.41 -38.874 -39.303 -39.696 -40.05 -40.362 -40.63 -40.853 -41.029 -41.157 -41.236 -41.263 -41.236 -41.155 -41.027 -40.868 -40.695 -40.526 -40.37 -40.234 -40.122 -40.036 -39.978 -39.949 -39.95 -39.98 -40.04 -40.129 -40.244 -40.385 -40.549 -40.733 -40.934 -41.15 -41.377 -41.611 -41.849 -42.087 -42.32 -42.545 -42.763 -42.973 -43.179 -43.382 -43.582 -43.779 -43.974 -44.166 -44.357 -44.544 -44.73 -44.913 -45.095 -45.275 -45.453 -45.63 -45.806 -45.982 -46.156 -46.329 -46.501 -46.671 -46.837 -46.998 -47.154 -47.304 -47.451 -47.596 -47.741 -47.885 -48.03 -48.176 -48.323 -48.472 -48.621 -48.772 -48.923 -49.076 -49.229 -49.383 -49.537 -49.692 -49.847 -50.002 -50.157 -50.311 -50.464 -50.615 -50.763 -50.906 -51.046 -51.183 -51.319 -51.454 -51.59 -51.726 -51.862 -52.0 -52.139 -52.278 -52.419 -52.562 -52.705 -52.849 -52.994 -53.139 -53.285 -53.431 -53.577 -53.722 -53.866 -54.008 -54.147 -54.282 -54.413 -54.54 -54.663 -54.784 -54.904 -55.024 -55.143 -55.262 -55.381 -55.502 -55.623 -55.745 -55.867 -55.991 -56.116 -56.242 -56.368 -56.496 -56.623 -56.751 -56.879 -57.006 -57.132 -57.257 -57.378 -57.496 -57.611 -57.723 -57.834 -57.945 -58.054 -58.165 -58.275 -58.386 -58.498 -58.61 -58.724 -58.839 -58.954 -59.071 -59.188 -59.306 -59.425 -59.544 -59.663 -59.783 -59.902 -60.02 -60.136 -60.25 -60.36 -60.468 -60.574 -60.678 -60.782)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj)) :from-file t)) nil nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 790 672) (om-make-point 10 40) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 230 48) (quote "Get fields 0, 1, 2 (freq, amp, bw) $From 1RES matrices") "" (om-make-point 636 404) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 258 60) (quote "Formant analysis.$See online reference [d] for complete description and additional parameters.") "" (om-make-point 493 202) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "MAPCAR" (quote mapcar) (quote ((om-load-inputfun (quote input-funbox) "FUNCTION" "FUNCTION" nil) (om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 371 516) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 499 367) (om-make-point 53 30) (list 0 1 2) "(0 1 2)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 467 341) (om-make-point 54 30) "1RES" "\"1RES\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 435 367) (om-make-point 54 30) "1REB" "\"1REB\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "GETSDIFDATA" (quote getsdifdata) (quote ((om-load-inputfun (quote input-funbox) "sdif file" "SELF" nil) (om-load-inputfun (quote input-funbox) "stream number (int)" "SID" 0) (om-load-inputfun (quote input-funbox) "frame type (string)" "FRAMETYPE" "") (om-load-inputfun (quote input-funbox) "matrix type (string)" "MATTYPE" "") (om-load-inputfun (quote input-funbox) "field number (int or list)" "CNUM" 0) (om-load-inputfun (quote input-funbox) "min row" "RMIN" nil) (om-load-inputfun (quote input-funbox) "max row" "RMAX" nil) (om-load-inputfun (quote input-funbox) "min time (s)" "TMIN" 0.1) (om-load-inputfun (quote input-funbox) "max time (s)" "TMAX" 0.4))) (om-make-point 404 402) (om-make-point 224 55) nil nil nil 2))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 484 157) (om-make-point 21 30) 5 "5" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FORMANT-ANALYSIS" (quote formant-analysis) (quote ((om-load-inputfun (quote input-funbox) "" "INFILE" nil) (om-load-inputkeyword (quote input-keyword) "" "analysis-mode" (quote :analysis-mode) (quote lpc) (list (list "LPC" (quote lpc)) (list "Discrete Spectrum" (quote ds)))) (om-load-inputkeyword (quote input-keyword) "" "max-n-formants" (quote :max-n-formants) 45 nil))) (om-make-point 378 201) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment1" (om-make-point 301 32) (quote "FORMANTS ANALYSIS") "" (om-make-point 104 44) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 150 29) (quote "SDIF analysis file") "" (om-make-point 468 287) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "formants.sdif" (quote sdiffile) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil))) (om-make-point 393 280) (om-make-point 70 50) (let ((newobj (load-sdif-file (om-make-pathname :directory (quote (:relative "out-files")) :device :unspecific :host :unspecific :name "formants" :type "sdif")))) (when newobj) newobj) nil nil (pairlis (quote (show-stems obj-mode palette-mode winpos winsize deltapict outport inport zoom cmnpref notechancolor? grillestep mode)) (list (quote t) 0 0 (om-make-point 40 23) (om-make-point 370 280) (om-make-point 0 0) 0 0 1 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux2" (quote t) (quote nil) (om-make-point 382 157) (om-make-point 99 30) "formants.sdif" "\"formants.sdif\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "SOUND" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "TRACKNUM" 1) (om-load-inputfun (quote input-funbox) "no documentation" "MARKERS" nil))) (om-make-point 215 126) (om-make-point 162 66) (let ((newobj (let ((thesound (load-sound (om-make-pathname :directory (quote (:relative "in-files")) :device :unspecific :host :unspecific :name "PianoOriginal" :type "aiff") 1 1.0 0))) (when thesound (setf (markers thesound) (quote nil))) thesound))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "PianoOriginal.aiff") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (player approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems microplay scale)) (list (quote :midishare) 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0 1 nil 1000 0 (om-make-point 370 280) (om-make-point 40 10) 0 1 (quote t) nil nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((5 0 2 1 nil 0) (0 0 5 0 nil 0) (9 0 5 1 nil 0) (14 0 9 0 nil 0) (8 0 9 2 nil 0) (7 0 9 3 nil 0) (6 0 9 4 nil 0) (16 0 11 0 nil 0) (15 0 11 1 nil 0) (10 0 11 2 nil 0) (11 0 14 0 nil 0))) (list (let ((newpict (make-instance (quote patch-picture) :name "superVP" :source (quote |OM-SuperVP|) :pict-pathname (restore-pict-path (restore-path nil)) :thepict (om-get-picture "superVP" (quote |OM-SuperVP|)) :storemode :external :draw-params (quote (p 0 0 100 100)) :extraobjs nil))) (setf (pict-pos newpict) (om-make-point 29 49)) (setf (pict-size newpict) (om-make-point 66 57)) newpict)) 6.1501))