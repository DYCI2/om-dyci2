
(:patch
 (:om-version 0.05)
 (:name "01-fft")
 (:doc "")
 (:info
  (:created "2019/10/29 17:47:44")
  (:modified "2019/10/29 20:49:53"))
 (:window (:size (607 677)) (:position (1112 270)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "aux1")
   (:x 132)
   (:y 176)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1.0)
   (:id 0))
  (:box
   (:library "OM-SuperVP")
   (:type :function)
   (:reference fft)
   (:group-id nil)
   (:name "fft")
   (:x 92)
   (:y 207)
   (:w 202)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "IN")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "begin-time")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "end-time")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "windowsize")
     (:value 4096)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "fftsize")
     (:value 4096)
     (:reactive nil))
    (:input (:type :key) (:name "step") (:value 256) (:reactive nil))
    (:input
     (:type :key)
     (:name "windowtype")
     (:value "hanning")
     (:reactive nil))
    (:input (:type :key) (:name "gabarit") (:value 1) (:reactive nil))
    (:input
     (:type :key)
     (:name "out")
     (:value "fft.sdif")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:comment
   (:x 304)
   (:y 447)
   (:w 150)
   (:h 29)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text "Collect as a BPF list")
   (:id 2))
  (:comment
   (:x 382)
   (:y 369)
   (:w 119)
   (:h 23)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text "Extract SDIF data")
   (:id 3))
  (:comment
   (:x 259)
   (:y 258)
   (:w 82)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "analysis file
(SDIF)")
   (:id 4))
  (:comment
   (:x 352)
   (:y 52)
   (:w 188)
   (:h 143)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "FFT box parameters :
- Begin time of analysis (s)
- End time of analysis (s)
- Size of the analysis window
- FFT size
- Analysis step
- Analysis window type
- Output format
- Output file")
   (:id 5))
  (:comment
   (:x 55)
   (:y 18)
   (:w 183)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :bold)))
   (:align nil)
   (:text "FFT ANALYSIS")
   (:id 6))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux3")
   (:x 194)
   (:y 334)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 7))
  (:box
   (:type :object)
   (:reference collection)
   (:group-id nil)
   (:name "BPF-LIB")
   (:x 90)
   (:y 508)
   (:w 275)
   (:h 107)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value
      (:list
       (:object
        (:class bpf)
        (:slots
         ((:onset 0)
          (:duration 10)
          (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
          (:action nil)
          (:color (:color 0 0 0 1.0))
          (:decimals 0)
          (:x-points (:list 0 10))
          (:y-points (:list 0 100))))
        (:add-slots ((:name nil))))))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size (585 500)) (:position (359 368)))
   (:edition-params)
   (:value (:object (:class collection) (:slots ((:obj-list nil)))))
   (:id 8))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:om-version 0.05)
     (:name "OMLOOP")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (299 455)) (:position (317 322)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "input0")
         (:doc "no documentation")))
       (:group-id nil)
       (:name "input0")
       (:x 145)
       (:y 36)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "input1")
         (:doc "no documentation")))
       (:group-id nil)
       (:name "input1")
       (:x 53)
       (:y 36)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 165)
       (:y 340)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 110)
       (:y 256)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 3))
      (:box
       (:type :object)
       (:reference bpf)
       (:group-id nil)
       (:name "BPF")
       (:x 87)
       (:y 183)
       (:w 70)
       (:h 49)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X-POINTS")
         (:value (:list 0 10))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y-POINTS")
         (:value (:list 0 100))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "decimals")
         (:value 2)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "X-POINTS") (:reactive nil))
        (:output (:name "Y-POINTS") (:reactive nil))
        (:output (:name "decimals") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class bpf)
         (:slots
          ((:onset 0)
           (:duration 100)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:action nil)
           (:color (:color 0 0 0 1.0))
           (:decimals 0)
           (:x-points (:list 0 100))
           (:y-points (:list 0 100))))
         (:add-slots ((:name "BPF")))))
       (:id 4))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 52)
       (:y 329)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 5))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 49)
       (:y 103)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 6))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 141)
       (:y 103)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 7)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 7 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 6 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 5 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 1))
       (:to (:box 2 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 3 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 4 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 4 :in 2))
       (:attributes (:color nil :style nil :modif nil))))))
   (:group-id nil)
   (:name "OMLOOP")
   (:x 244)
   (:y 435)
   (:w 83)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input0")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 9))
  (:box
   (:type :value)
   (:reference simple-base-string)
   (:group-id nil)
   (:name "aux2")
   (:x 254)
   (:y 314)
   (:w 51)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "1GB1")
   (:id 10))
  (:box
   (:type :function)
   (:reference getsdifdata)
   (:group-id nil)
   (:name "getsdifdata")
   (:x 172)
   (:y 364)
   (:w 207)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :eval-once)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "SID") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "FRAMETYPE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MATTYPE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CNUM")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RMIN")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RMAX")
     (:value 100)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TMIN")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TMAX")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 11))
  (:box
   (:type :object)
   (:reference sdiffile)
   (:group-id nil)
   (:name "SDIFFILE")
   (:x 124)
   (:y 259)
   (:w 129)
   (:h 59)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size (1019 500)) (:position (338 345)))
   (:edition-params)
   (:value
    (:object
     (:class sdiffile)
     (:add-slots ((:file-map nil) (:file-pathname nil)))))
   (:id 12))
  (:box
   (:type :value)
   (:reference simple-base-string)
   (:group-id nil)
   (:name "aux")
   (:x 240)
   (:y 154)
   (:w 58)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "fft.sdif")
   (:id 13))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name "SOUND1")
   (:x 31)
   (:y 61)
   (:w 212)
   (:h 74)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 2491.9048)
       (:n-samples 109893)
       (:n-channels 1)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname
        (:pathname
         (:directory (:relative :up :up "resources" "sound"))
         (:device :unspecific)
         (:host :unspecific)
         (:name "PianoOriginal")
         (:type "aiff")))))))
   (:id 14)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 1 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 12 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 11 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 8 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 11 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 11 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 9 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 1))
   (:to (:box 9 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 11 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 1 :in 8))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 1 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))