
(:patch
 (:name "dyci2_Loop_ScenarioSegmentDurations")
 (:doc "")
 (:info
  (:created "2022/09/16 17:52:24")
  (:modified "2022/09/16 18:01:08")
  (:by "om-sharp")
  (:version 1.06))
 (:window (:size (952 733)) (:position (379 126)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 1) (:name "lab_files") (:doc "")))
   (:group-id nil)
   (:name "lab_files")
   (:x 305)
   (:y 40)
   (:w 66)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "internal input value")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :io)
   (:reference
    (:out
     (:type omout)
     (:name "Scenario_Labels")
     (:index 1)
     (:doc "")))
   (:group-id nil)
   (:name "Scenario_Labels")
   (:x 226)
   (:y 471)
   (:w 106)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "out-value")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 1))
  (:box
   (:type :io)
   (:reference
    (:in
     (:type omin)
     (:index 2)
     (:name "list_activation_labels")
     (:doc "")))
   (:group-id nil)
   (:name "list_activation_labels")
   (:x 612)
   (:y 181)
   (:w 141)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :io)
   (:reference
    (:in
     (:type omin)
     (:index 3)
     (:name "function_process_labels")
     (:doc "")))
   (:group-id nil)
   (:name "function_process_labels")
   (:x 81)
   (:y 242)
   (:w 161)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :io)
   (:reference
    (:out (:type omout) (:name "before_lambda") (:index 2) (:doc "")))
   (:group-id nil)
   (:name "before_lambda")
   (:x 445)
   (:y 453)
   (:w 102)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "out-value")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 4))
  (:box
   (:type :io)
   (:reference
    (:out (:type omout) (:name "Durations") (:index 3) (:doc "")))
   (:group-id nil)
   (:name "Durations")
   (:x 678)
   (:y 478)
   (:w 102)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "out-value")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 5))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name "TEXTBUFFER")
   (:x 301)
   (:y 148)
   (:w 148)
   (:h 82)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :mini-view)
   (:showname t)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:read-mode :lines-cols))
   (:value
    (:object
     (:class textbuffer)
     (:slots ((:contents nil)))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 6))
  (:box
   (:type :special)
   (:reference iterate)
   (:group-id nil)
   (:name "iterate")
   (:x 168)
   (:y 552)
   (:w 500)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 7))
  (:box
   (:type :special)
   (:reference collect)
   (:group-id nil)
   (:name "collect")
   (:x 158)
   (:y 388)
   (:w 200)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "data-in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "push")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "init")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "collect") (:reactive nil))
    (:output (:name "data-out") (:reactive nil))
    (:output (:name "init") (:reactive nil)))
   (:id 8))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 230)
   (:y 433)
   (:w 55)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 161)
   (:y 352)
   (:w 78)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value box)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value name)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "select-labels")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (lines list_activation_labels)"
       "  (loop for line in lines "
       "        collect (append "
       "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
       "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
       "                 (list (- (sec->ms (second line)) (sec->ms (first line))))"
       "                 ;(list (- (second line) (first line)))"
       "                 (loop for i from 1 to (- (length list_activation_labels) 1)"
       "                       ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
       "                       collect (nth (+ i 1) line)"
       "                       )"
       "                 )"
       "        into labels"
       "        finally return labels"
       "        )"
       "  )"
       ""))))
   (:group-id nil)
   (:name "select-labels")
   (:x 229)
   (:y 303)
   (:w 115)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock :eval-once)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LINES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST_ACTIVATION_LABELS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 306)
   (:y 89)
   (:w 68)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 12))
  (:box
   (:type :special)
   (:reference collect)
   (:group-id nil)
   (:name "collect")
   (:x 393)
   (:y 390)
   (:w 206)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "data-in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "push")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "init")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "collect") (:reactive nil))
    (:output (:name "data-out") (:reactive nil))
    (:output (:name "init") (:reactive nil)))
   (:id 13))
  (:box
   (:type :special)
   (:reference collect)
   (:group-id nil)
   (:name "collect")
   (:x 627)
   (:y 390)
   (:w 208)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "data-in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "push")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "init")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "collect") (:reactive nil))
    (:output (:name "data-out") (:reactive nil))
    (:output (:name "init") (:reactive nil)))
   (:id 14))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "durations")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (lines list_activation_labels)"
       "  (loop for line in lines "
       "        collect (append "
       "                 ;(list (if (> (nth 0 list_activation_labels) 0) (round (/ (- (sec->ms (second line)) (sec->ms (first line))) (nth 0 list_activation_labels))) -1))"
       "                 ;(list (if (> (nth 0 list_activation_labels) 0) (- (sec->ms (second line)) (sec->ms (first line)))  -1))"
       "                 ;(list "
       "                  (- (sec->ms (second line)) (sec->ms (first line)))"
       "                  ;)"
       "                 ;(list (- (second line) (first line)))"
       "                 ;(loop for i from 1 to (- (length list_activation_labels) 1)"
       "                 ;      ;collect (if (> (nth i list_activation_labels) 0) (nth (+ i 1) line) -1)"
       "                 ;      collect (nth (+ i 1) line)"
       "                       )"
       "                 )"
       "        ;into labels"
       "        ;finally return labels"
       "        )"
       ""))))
   (:group-id nil)
   (:name "durations")
   (:x 607)
   (:y 355)
   (:w 115)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock :eval-once)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LINES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST_ACTIVATION_LABELS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 702)
   (:y 436)
   (:w 55)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 11 :in 1)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 15 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 6 :out 1)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 6 :out 1)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 8 :out 1)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 10 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 6 :in 0)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 7 :in 1))
   (:attributes (:color nil :style nil :modif (0 12/71))))
  (:connection (:from (:box 13 :out 1)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 7 :in 2)))
  (:connection (:from (:box 14 :out 1)) (:to (:box 16 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 5 :in 0)))))