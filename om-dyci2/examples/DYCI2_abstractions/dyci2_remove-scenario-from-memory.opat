
(:patch
 (:name "dyci2_remove-scenario-from-memory")
 (:doc "")
 (:info
  (:created "2022/09/16 16:17:05")
  (:modified "2022/09/16 16:19:47")
  (:by "om-sharp")
  (:version 1.06))
 (:window (:size (624 485)) (:position (58 83)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 1) (:name "mem-directory") (:doc "")))
   (:group-id nil)
   (:name "mem-directory")
   (:x 208)
   (:y 219)
   (:w 103)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 2) (:name "scenario-file") (:doc "")))
   (:group-id nil)
   (:name "scenario-file")
   (:x 214)
   (:y 59)
   (:w 90)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :io)
   (:reference
    (:out (:type omout) (:name "mem-corpus") (:index 1) (:doc "")))
   (:group-id nil)
   (:name "mem-corpus")
   (:x 226)
   (:y 349)
   (:w 91)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "out-value")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 2))
  (:box
   (:type :io)
   (:reference
    (:in
     (:type omin)
     (:index 3)
     (:name "remove-scen-file-from-memory")
     (:doc "")))
   (:group-id nil)
   (:name "remove-scen-file-from-memory")
   (:x 306)
   (:y 220)
   (:w 197)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 4) (:name "root_dir") (:doc "")))
   (:group-id nil)
   (:name "root_dir")
   (:x 62)
   (:y 75)
   (:w 87)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "remove-scen-file")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (scenario-file memory-directory remove-scen-file) "
       "  (if remove-scen-file"
       "      (remove scenario-file memory-directory :test (lambda (x y) (string-equal (namestring x) (namestring y))))"
       "    memory-directory) "
       "  )"
       ""))))
   (:group-id nil)
   (:name "remove-scen-file")
   (:x 174)
   (:y 288)
   (:w 200)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SCENARIO-FILE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY-DIRECTORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "REMOVE-SCEN-FILE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :function)
   (:reference (:symbol "OM-MAKE-PATHNAME" "OM-API"))
   (:group-id nil)
   (:name "om-make-pathname")
   (:x 54)
   (:y 180)
   (:w 319)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :eval-once)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :key)
     (:name "directory")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "name") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "type") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :function)
   (:reference pathname-name)
   (:group-id nil)
   (:name "pathname-name")
   (:x 133)
   (:y 136)
   (:w 127)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "P")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :function)
   (:reference pathname-type)
   (:group-id nil)
   (:name "pathname-type")
   (:x 264)
   (:y 135)
   (:w 121)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "P")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 5 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 7 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 2)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 0)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 2 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 1)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 2)))))