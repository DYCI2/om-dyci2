
(:patch
 (:name "dyci2_loop_interpretations_scenarios_on_dataset")
 (:doc "")
 (:info
  (:created "2021/07/07 16:05:44")
  (:modified "2022/09/17 16:51:29")
  (:by "om-sharp")
  (:version 1.06))
 (:window (:size (881 801)) (:position (0 25)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :io)
   (:reference (:out (:type omout) (:name "out") (:index 1) (:doc "")))
   (:group-id nil)
   (:name "out")
   (:x 430)
   (:y 620)
   (:w 40)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "out-value")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 0))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 1) (:name "scen-gen") (:doc "")))
   (:group-id nil)
   (:name "scen-gen")
   (:x 82)
   (:y 137)
   (:w 72)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 1) (:name "max-lbl-ct") (:doc "")))
   (:group-id nil)
   (:name "max-lbl-ct")
   (:x 236)
   (:y 88)
   (:w 81)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 1) (:name "max-vc-ct") (:doc "")))
   (:group-id nil)
   (:name "max-vc-ct")
   (:x 331)
   (:y 255)
   (:w 79)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :io)
   (:reference (:in (:type omin) (:index 1) (:name "len") (:doc "")))
   (:group-id nil)
   (:name "len")
   (:x 243)
   (:y 220)
   (:w 40)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :io)
   (:reference (:in (:type omin) (:index 1) (:name "xf") (:doc "")))
   (:group-id nil)
   (:name "xf")
   (:x 475)
   (:y 255)
   (:w 40)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 1) (:name "vc-gen") (:doc "")))
   (:group-id nil)
   (:name "vc-gen")
   (:x 517)
   (:y 255)
   (:w 60)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :io)
   (:reference (:in (:type omin) (:index 1) (:name "dtset") (:doc "")))
   (:group-id nil)
   (:name "dtset")
   (:x 578)
   (:y 255)
   (:w 49)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 1) (:name "out-dir") (:doc "")))
   (:group-id nil)
   (:name "out-dir")
   (:x 412)
   (:y 255)
   (:w 61)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 242)
   (:y 138)
   (:w 68)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 9))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative))
      (:device :unspecific)
      (:host :unspecific)
      (:name "generate_scenario")
      (:type "opat"))))
   (:group-id nil)
   (:name "generate_scenario")
   (:x 144)
   (:y 294)
   (:w 137)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock :eval-once)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "scenario_generator")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "max_cont_scen")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "length_scenario")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "print") (:reactive nil))
    (:output (:name "generated_scenario") (:reactive nil)))
   (:id 10))
  (:box
   (:type :special)
   (:reference iterate)
   (:group-id nil)
   (:name "iterate")
   (:x 280)
   (:y 584)
   (:w 57)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "action")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 11))
  (:box
   (:type :special)
   (:reference collect)
   (:group-id nil)
   (:name "collect")
   (:x 413)
   (:y 455)
   (:w 57)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "data-in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "push")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "init")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "collect") (:reactive nil))
    (:output (:name "data-out") (:reactive nil))
    (:output (:name "init") (:reactive nil)))
   (:id 12))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 423)
   (:y 583)
   (:w 55)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative))
      (:device :unspecific)
      (:host :unspecific)
      (:name "dyci2_generate-scenario-interpretations")
      (:type "opat"))))
   (:group-id nil)
   (:name "dyci2_generate-scenario-interpretations")
   (:x 303)
   (:y 370)
   (:w 255)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock :eval-once)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "len_scen")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "scen_max_cont")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "voice_max_cont_list")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "path_output_directory")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "xfade")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "scenario")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "voice_generator")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "snd_database")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14)))
 (:connections
  (:connection (:from (:box 1 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 14 :in 2)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 10 :in 2)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 14 :in 4)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 14 :in 6)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 14 :in 7)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 14 :in 3)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 10 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif (0 -3/7))))
  (:connection (:from (:box 9 :out 0)) (:to (:box 14 :in 1)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 11 :in 0))
   (:attributes (:color nil :style nil :modif (0 391/893))))
  (:connection (:from (:box 10 :out 1)) (:to (:box 14 :in 5)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 11 :in 1)))
  (:connection (:from (:box 12 :out 1)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 0 :in 0)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 12 :in 0)))))