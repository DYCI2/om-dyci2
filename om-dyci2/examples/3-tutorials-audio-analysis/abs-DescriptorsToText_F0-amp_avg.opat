
(:patch
 (:name "abs-DescriptorsToText_F0-amp_avg")
 (:doc "")
 (:info
  (:created "2021/11/08 3:00:35")
  (:modified "2021/11/25 19:52:57")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1231 948)) (:position (238 23)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :io)
   (:reference (:in (:type omin) (:index 1) (:name "sound") (:doc "")))
   (:group-id nil)
   (:name "sound")
   (:x 136)
   (:y 185)
   (:w 64)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :io)
   (:reference
    (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
   (:group-id nil)
   (:name "output 1")
   (:x 622)
   (:y 840)
   (:w 81)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "out-value")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 1))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 2) (:name "liste_segments") (:doc "")))
   (:group-id nil)
   (:name "liste_segments")
   (:x 73)
   (:y 19)
   (:w 123)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 3) (:name "freq_range_F0") (:doc "")))
   (:group-id nil)
   (:name "freq_range_F0")
   (:x 636)
   (:y 424)
   (:w 119)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 4) (:name "fund_min_freq") (:doc "")))
   (:group-id nil)
   (:name "fund_min_freq")
   (:x 196)
   (:y 184)
   (:w 108)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 5) (:name "fund_max_freq") (:doc "")))
   (:group-id nil)
   (:name "fund_max_freq")
   (:x 302)
   (:y 184)
   (:w 108)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :io)
   (:reference
    (:in
     (:type omin)
     (:index 6)
     (:name "spectrum_max_freq")
     (:doc "")))
   (:group-id nil)
   (:name "spectrum_max_freq")
   (:x 401)
   (:y 184)
   (:w 128)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 7) (:name "Noise_Thresh") (:doc "")))
   (:group-id nil)
   (:name "Noise_Thresh")
   (:x 519)
   (:y 184)
   (:w 128)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :io)
   (:reference
    (:in (:type omin) (:index 8) (:name "Smooth_Order") (:doc "")))
   (:group-id nil)
   (:name "Smooth_Order")
   (:x 617)
   (:y 184)
   (:w 128)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :io)
   (:reference (:in (:type omin) (:index 9) (:name "Sizes") (:doc "")))
   (:group-id nil)
   (:name "Sizes")
   (:x 727)
   (:y 183)
   (:w 128)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:type :io)
   (:reference (:in (:type omin) (:index 10) (:name "Step") (:doc "")))
   (:group-id nil)
   (:name "Step")
   (:x 812)
   (:y 183)
   (:w 128)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 560)
   (:y 614)
   (:w 108)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:type :function)
   (:reference f->mc)
   (:group-id nil)
   (:name "f->mc")
   (:x 628)
   (:y 533)
   (:w 83)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FREQ")
     (:value 440)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 1085)
   (:y 545)
   (:w 32)
   (:h 33)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 13))
  (:box
   (:type :special)
   (:reference if)
   (:group-id nil)
   (:name "if")
   (:x 852)
   (:y 580)
   (:w 303)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TEST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "THEN")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "else")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 966)
   (:y 642)
   (:w 108)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil))
    (:input
     (:type :optional)
     (:name "decimals")
     (:value 4)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :function)
   (:reference om-mean)
   (:group-id nil)
   (:name "om-mean")
   (:x 954)
   (:y 549)
   (:w 91)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value (:list 1))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name "SOUND 2")
   (:x 904)
   (:y 375)
   (:w 80)
   (:h 50)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "markers")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "markers") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:n-samples nil)
       (:n-channels nil)
       (:sample-rate nil)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname nil)))))
   (:id 17))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 12")
   (:x 711)
   (:y 532)
   (:w 40)
   (:h 33)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 18))
  (:box
   (:type :special)
   (:reference if)
   (:group-id nil)
   (:name "if")
   (:x 602)
   (:y 565)
   (:w 128)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TEST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "THEN")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "else")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:type :function)
   (:reference om-mean)
   (:group-id nil)
   (:name "om-mean")
   (:x 618)
   (:y 502)
   (:w 105)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value (:list 1))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:type :function)
   (:reference second)
   (:group-id nil)
   (:name "second")
   (:x 503)
   (:y 651)
   (:w 86)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:type :function)
   (:reference first)
   (:group-id nil)
   (:name "first")
   (:x 394)
   (:y 651)
   (:w 65)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:type :special)
   (:reference collect)
   (:group-id nil)
   (:name "collect")
   (:x 594)
   (:y 788)
   (:w 66)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data-in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "push")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "init")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "collect") (:reactive nil))
    (:output (:name "data-out") (:reactive nil))
    (:output (:name "init") (:reactive nil)))
   (:id 23))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 361)
   (:y 685)
   (:w 500)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 11")
   (:x 986)
   (:y 388)
   (:w 36)
   (:h 33)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 33)
   (:id 25))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "aux 2")
   (:x 952)
   (:y 275)
   (:w 139)
   (:h 33)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "temp_sound.aiff")
   (:id 26))
  (:box
   (:type :function)
   (:reference outfile)
   (:group-id nil)
   (:name "outfile")
   (:x 972)
   (:y 309)
   (:w 82)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NAME")
     (:value "")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 27))
  (:box
   (:type :function)
   (:reference save-sound)
   (:group-id nil)
   (:name "save-sound")
   (:x 870)
   (:y 344)
   (:w 118)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FILENAME")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 28))
  (:box
   (:type :function)
   (:reference sound-cut)
   (:group-id nil)
   (:name "sound-cut")
   (:x 857)
   (:y 308)
   (:w 109)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "S") (:value nil) (:reactive nil))
    (:input (:type :standard) (:name "BEG") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "END")
     (:value 1000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 29))
  (:box
   (:type :function)
   (:reference sound-points)
   (:group-id nil)
   (:name "sound-points")
   (:x 894)
   (:y 430)
   (:w 131)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "NUM")
     (:value 1000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 30))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "central_third")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (657 614)) (:position (42 69)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 217)
       (:y 448)
       (:w 67)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 311)
       (:y 33)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 2") (:index 2) (:doc nil)))
       (:group-id nil)
       (:name "output 2")
       (:x 301)
       (:y 451)
       (:w 81)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :value)
       (:reference single-float)
       (:group-id nil)
       (:name "aux")
       (:x 402)
       (:y 220)
       (:w 38)
       (:h 33)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2.0)
       (:id 3))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 384)
       (:y 77)
       (:w 65)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference second)
       (:group-id nil)
       (:name "second")
       (:x 286)
       (:y 114)
       (:w 86)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference om-)
       (:group-id nil)
       (:name "om-")
       (:x 298)
       (:y 155)
       (:w 108)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference om/)
       (:group-id nil)
       (:name "om/")
       (:x 330)
       (:y 250)
       (:w 115)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 3.0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 244)
       (:y 286)
       (:w 71)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 307)
       (:y 372)
       (:w 71)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "central_third")
   (:x 1855/2)
   (:y 377/6)
   (:w 200)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "output") (:reactive nil))
    (:output (:name "output 2") (:reactive nil)))
   (:id 31))
  (:box
   (:library "OM-SuperVP")
   (:type :function)
   (:reference f0-estimate)
   (:group-id nil)
   (:name "f0-estimate")
   (:x 337)
   (:y 309)
   (:w 500)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "IN")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "begin-time")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "end-time")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "fund-minfreq")
     (:value 50.0)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "fund-maxfreq")
     (:value 1000.0)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "spectrum-maxfreq")
     (:value 4000.0)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "noise-threshold")
     (:value 50.0)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "smooth-order")
     (:value 3)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "windowsize")
     (:value 4096)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "fftsize")
     (:value 4096)
     (:reactive nil))
    (:input (:type :key) (:name "step") (:value 256) (:reactive nil))
    (:input
     (:type :key)
     (:name "windowtype")
     (:value "blackman")
     (:reactive nil))
    (:input
     (:type :key)
     (:name "out")
     (:value "f0.sdif")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 32))
  (:box
   (:type :object)
   (:reference sdiffile)
   (:group-id nil)
   (:name "f0.sdif")
   (:x 566)
   (:y 345)
   (:w 70)
   (:h 50)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:showname nil)
   (:lock :eval-once)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sdiffile)
     (:add-slots
      ((:file-map nil)
       (:file-pathname
        (:pathname
         (:directory (:relative :up :up :up :up "out-files"))
         (:device :unspecific)
         (:host :unspecific)
         (:name "f0")
         (:type "sdif")))))))
   (:id 33))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "aux 10")
   (:x 230)
   (:y 147)
   (:w 49)
   (:h 33)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 50.0)
   (:id 34))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "aux 9")
   (:x 324)
   (:y 146)
   (:w 67)
   (:h 33)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1000.0)
   (:id 35))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "aux 8")
   (:x 434)
   (:y 146)
   (:w 67)
   (:h 33)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4000.0)
   (:id 36))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "aux 7")
   (:x 594)
   (:y 145)
   (:w 49)
   (:h 33)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 50.0)
   (:id 37))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 6")
   (:x 668)
   (:y 145)
   (:w 32)
   (:h 33)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 38))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 5")
   (:x 765)
   (:y 144)
   (:w 53)
   (:h 33)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2048)
   (:id 39))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 4")
   (:x 852)
   (:y 146)
   (:w 45)
   (:h 33)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 256)
   (:id 40))
  (:box
   (:type :function)
   (:reference sdif->bpf)
   (:group-id nil)
   (:name "sdif->bpf")
   (:x 548)
   (:y 396)
   (:w 105)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 41))
  (:box
   (:type :function)
   (:reference y-points)
   (:group-id nil)
   (:name "y-points")
   (:x 550)
   (:y 433)
   (:w 96)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 42))
  (:box
   (:type :function)
   (:reference band-filter)
   (:group-id nil)
   (:name "band-filter")
   (:x 561)
   (:y 468)
   (:w 112)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :eval-once)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value (:list 1 2 3 4 5))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "BOUNDS")
     (:value (:list (:list 0 2) (:list 5 10)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MODE")
     (:value pass)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 43))
  (:box
   (:type :special)
   (:reference iterate)
   (:group-id nil)
   (:name "iterate")
   (:x 543)
   (:y 845)
   (:w 66)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "action")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 44))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 579)
   (:y 757)
   (:w 58)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 45))
  (:box
   (:type :function)
   (:reference om/)
   (:group-id nil)
   (:name "om/")
   (:x 636)
   (:y 646)
   (:w 61)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 46))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "value box")
   (:x 667)
   (:y 615)
   (:w 49)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100.0)
   (:id 47))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1022)
   (:y 613)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 48))
  (:box
   (:type :special)
   (:reference loop-list)
   (:group-id nil)
   (:name "list-loop")
   (:x 96)
   (:y 69)
   (:w 81)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "list")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "i") (:reactive nil)))
   (:id 49))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 622)
   (:y 720)
   (:w 55)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 50))
  (:box
   (:type :function)
   (:reference om-scale)
   (:group-id nil)
   (:name "om-scale")
   (:x 964)
   (:y 512)
   (:w 88)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MINOUT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MAXOUT")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 51))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "value box")
   (:x 983)
   (:y 478)
   (:w 42)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0.0)
   (:id 52))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "value box")
   (:x 1025)
   (:y 478)
   (:w 56)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100.0)
   (:id 53))
  (:box
   (:type :function)
   (:reference first)
   (:group-id nil)
   (:name "first")
   (:x 969)
   (:y 160)
   (:w 59)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 54))
  (:box
   (:type :function)
   (:reference second)
   (:group-id nil)
   (:name "second")
   (:x 1032)
   (:y 160)
   (:w 76)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 55)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 29 :in 0)))
  (:connection (:from (:box 0 :out 0)) (:to (:box 32 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 49 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 43 :in 1)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 32 :in 3)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 32 :in 4)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 32 :in 5)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 32 :in 6)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 32 :in 7)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 32 :in 8)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 32 :in 9)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 32 :in 10)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 46 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 19 :in 1)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 14 :in 2)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 24 :in 3)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 14 :in 1)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 30 :in 0)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 19 :in 2)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 24 :in 1)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 24 :in 0)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 44 :in 0)))
  (:connection (:from (:box 23 :out 1)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 50 :in 0)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 45 :in 0)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 30 :in 1)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 27 :in 0)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 28 :in 1)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 17 :in 0)))
  (:connection (:from (:box 29 :out 0)) (:to (:box 28 :in 0)))
  (:connection (:from (:box 30 :out 0)) (:to (:box 51 :in 0)))
  (:connection (:from (:box 32 :out 0)) (:to (:box 33 :in 0)))
  (:connection (:from (:box 33 :out 0)) (:to (:box 41 :in 0)))
  (:connection (:from (:box 41 :out 0)) (:to (:box 42 :in 0)))
  (:connection (:from (:box 42 :out 0)) (:to (:box 43 :in 0)))
  (:connection (:from (:box 43 :out 0)) (:to (:box 19 :in 0)))
  (:connection (:from (:box 43 :out 0)) (:to (:box 20 :in 0)))
  (:connection (:from (:box 45 :out 0)) (:to (:box 23 :in 0)))
  (:connection (:from (:box 46 :out 0)) (:to (:box 24 :in 2)))
  (:connection (:from (:box 47 :out 0)) (:to (:box 46 :in 1)))
  (:connection (:from (:box 48 :out 0)) (:to (:box 15 :in 1)))
  (:connection (:from (:box 49 :out 0)) (:to (:box 21 :in 0)))
  (:connection (:from (:box 49 :out 0)) (:to (:box 22 :in 0)))
  (:connection (:from (:box 49 :out 0)) (:to (:box 31 :in 0)))
  (:connection (:from (:box 49 :out 0)) (:to (:box 54 :in 0)))
  (:connection (:from (:box 49 :out 0)) (:to (:box 55 :in 0)))
  (:connection (:from (:box 51 :out 0)) (:to (:box 16 :in 0)))
  (:connection (:from (:box 51 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 52 :out 0)) (:to (:box 51 :in 1)))
  (:connection (:from (:box 53 :out 0)) (:to (:box 51 :in 2)))
  (:connection (:from (:box 54 :out 0)) (:to (:box 29 :in 1)))
  (:connection (:from (:box 54 :out 0)) (:to (:box 32 :in 1)))
  (:connection (:from (:box 55 :out 0)) (:to (:box 29 :in 2)))
  (:connection (:from (:box 55 :out 0)) (:to (:box 32 :in 2)))))