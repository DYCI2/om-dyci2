
(:patch
 (:name "dyci2_01-Init_audio")
 (:doc "")
 (:info
  (:created "2018/06/17 2:59:29")
  (:modified "2022/08/19 18:12:14")
  (:by "om-sharp")
  (:version 1.06))
 (:window (:size (1126 940)) (:position (279 124)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name "DYCI2GENERATOR")
   (:x 197)
   (:y 470)
   (:w 313)
   (:h 57)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(0 1166.6666)"
         "(1166.6666 2333.3333)"
         "(2333.3333 3500.0)"
         "(3500.0 4666.6665)"
         "(4666.6665 5833.333)"
         "(5833.333 6999.9995)"
         "(6999.9995 8166.666)"
         "(8166.666 9333.333)"
         "(9333.333 10500.0)"
         "(10500.0 11666.667)"
         "(11666.667 12833.334)"))
       (:labls
        (:list "A" "C" "C" "C" "C" "D" "B" "A" "C" "D" "B" "D"))))))
   (:id 0))
  (:box
   (:library "om-dyci2")
   (:type :function)
   (:reference (:symbol "DYCI2QUERY" "DYCI2"))
   (:group-id nil)
   (:name "dyci2query")
   (:x 247)
   (:y 651)
   (:w 97)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "QUERY")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 161)
   (:y 330)
   (:w 349)
   (:h 55)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "markers")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "markers") (:reactive nil)))
   (:window (:size (939 221)) (:position (471 294)))
   (:edition-params (:show-timeline nil))
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 14000.0)
       (:n-samples 672000)
       (:n-channels 2)
       (:sample-rate 48000)
       (:smpl-type :float)
       (:sample-size 24)))
     (:add-slots
      ((:markers
        (:list
         (:list 0 "A")
         (:list 1166.6666 "C")
         (:list 2333.3333 "C")
         (:list 3500.0 "C")
         (:list 4666.6665 "C")
         (:list 5833.333 "D")
         (:list 6999.9995 "B")
         (:list 8166.666 "A")
         (:list 9333.333 "C")
         (:list 10500.0 "D")
         (:list 11666.667 "B")
         (:list 12833.334 "D")))
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname
        (:pathname
         (:directory (:relative :up "Samples"))
         (:device nil)
         (:host nil)
         (:name "Burghos_Among")
         (:type "aif")))))))
   (:id 2))
  (:box
   (:type :function)
   (:reference file-chooser)
   (:group-id nil)
   (:name "file-chooser")
   (:x 222)
   (:y 131)
   (:w 103)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :locked)
   (:lambda nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :value)
   (:reference pathname)
   (:group-id nil)
   (:name "value box")
   (:x 99)
   (:y 209)
   (:w 300)
   (:h 72)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:pathname
     (:directory
      (:absolute
       "Users"
       "dpapanikolaou"
       "Documents"
       "GitHub"
       "om-dyci2"
       "om-dyci2"
       "examples"
       "DYCI2_Complete-Tutorials"
       "Samples"))
     (:device :unspecific)
     (:host :unspecific)
     (:name "Burghos_Among")
     (:type "aif")))
   (:id 4))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 237)
   (:y 701)
   (:w 78)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :function)
   (:reference read-from-string)
   (:group-id nil)
   (:name "read-from-string")
   (:x 106)
   (:y 650)
   (:w 131)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "STRING")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "remix")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (528 694)) (:position (389 112)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "SEGMENTS") (:doc "")))
       (:group-id nil)
       (:name "SEGMENTS")
       (:x 154)
       (:y 59)
       (:w 89)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 268)
       (:y 569)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "SOUND") (:doc "")))
       (:group-id nil)
       (:name "SOUND")
       (:x 91)
       (:y 206)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "CROSSFADE") (:doc "")))
       (:group-id nil)
       (:name "CROSSFADE")
       (:x 320)
       (:y 144)
       (:w 97)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 134)
       (:y 380)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 166)
       (:y 116)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 5))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 273)
       (:y 332)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference split)
       (:group-id nil)
       (:name "split")
       (:x 170)
       (:y 169)
       (:w 61)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference sound-cut)
       (:group-id nil)
       (:name "sound-cut")
       (:x 153)
       (:y 264)
       (:w 94)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "S")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "BEG")
         (:value 0.0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 1.0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference sound-seq)
       (:group-id nil)
       (:name "sound-seq")
       (:x 194)
       (:y 430)
       (:w 96)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda :lambda)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "S1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "S2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "crossfade")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference reduce)
       (:group-id nil)
       (:name "reduce")
       (:x 257)
       (:y 474)
       (:w 75)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 242)
       (:y 225)
       (:w 64)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :function)
       (:reference om-)
       (:group-id nil)
       (:name "om-")
       (:x 168)
       (:y 224)
       (:w 61)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :function)
       (:reference sound-fade)
       (:group-id nil)
       (:name "sound-fade")
       (:x 291)
       (:y 517)
       (:w 100)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "S")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "IN")
         (:value 0.1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "OUT")
         (:value 0.1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 9 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 6 :out 1)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 7 :out 1)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 8 :in 2)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 1 :in 0))))))
   (:group-id nil)
   (:name "remix")
   (:x 382)
   (:y 748)
   (:w 69)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEGMENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CROSSFADE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 144)
   (:y 782)
   (:w 543)
   (:h 112)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size (966 385)) (:position (42 68)))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 1690.0)
       (:n-samples 81120)
       (:n-channels 2)
       (:sample-rate 48000)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname nil)))))
   (:id 8))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name nil)
   (:x 408)
   (:y 536)
   (:w 123)
   (:h 70)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock :locked)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :text-list)
     (:reactive t)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "output-mode") (:reactive nil)))
   (:window (:size (453 118)) (:position (105 137)))
   (:edition-params (:output-mode :text-list) (:read-mode :list))
   (:value
    (:object
     (:class textbuffer)
     (:slots ((:contents (:list "D" "A" "B"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 9))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 283)
   (:y 612)
   (:w 77)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 427)
   (:y 708)
   (:w 36)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 10)
   (:id 11))
  (:comment
   (:x 104)
   (:y 704)
   (:w 134)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font-or-nil (:font nil) (:t-or-nil nil)))
   (:align nil)
   (:text "get-segments (t1 t2)")
   (:id 12))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "auto-markers+labels_generator")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (667 638)) (:position (41 279)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 157)
       (:y 501)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "Sound") (:doc "")))
       (:group-id nil)
       (:name "Sound")
       (:x 141)
       (:y 14)
       (:w 69)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "Markers") (:doc "")))
       (:group-id nil)
       (:name "Markers")
       (:x 225)
       (:y 93)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference arithm-ser)
       (:group-id nil)
       (:name "arithm-ser")
       (:x 119)
       (:y 181)
       (:w 135)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "BEGIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 5)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "STEP")
         (:value 0.2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference nth-random)
       (:group-id nil)
       (:name "nth-random")
       (:x 174)
       (:y 318)
       (:w 103)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 203)
       (:y 356)
       (:w 91)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:reactive nil)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 5))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 362)
       (:y 305)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 10)
       (:id 6))
      (:comment
       (:x 253)
       (:y 185)
       (:w 132)
       (:h 23)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "list onsets (markers)")
       (:id 7))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 181)
       (:y 414)
       (:w 54)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference mat-trans)
       (:group-id nil)
       (:name "mat-trans")
       (:x 157)
       (:y 447)
       (:w 93)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "MATRIX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:comment
       (:x 297)
       (:y 348)
       (:w 154)
       (:h 53)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "Create a random matrix combining markers with labels")
       (:id 10))
      (:comment
       (:x 248)
       (:y 450)
       (:w 311)
       (:h 23)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "list of markers onsets (ms) + list of labels (symbol)")
       (:id 11))
      (:comment
       (:x 395)
       (:y 308)
       (:w 128)
       (:h 23)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "length of marker list")
       (:id 12))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 338)
       (:y 264)
       (:w 72)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :function)
       (:reference sound-dur)
       (:group-id nil)
       (:name "sound-dur")
       (:x 127)
       (:y 62)
       (:w 96)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SOUND")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 125)
       (:y 145)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 15))
      (:box
       (:type :function)
       (:reference /)
       (:group-id nil)
       (:name "/")
       (:x 190)
       (:y 147)
       (:w 81)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "args")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :function)
       (:reference *)
       (:group-id nil)
       (:name "*")
       (:x 164)
       (:y 101)
       (:w 43)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "args")
         (:value 1000)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "args")
         (:value 1000)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "Labels") (:doc "")))
       (:group-id nil)
       (:name "Labels")
       (:x 202)
       (:y 262)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:comment
       (:x 91)
       (:y 67)
       (:w 38)
       (:h 23)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "secs")
       (:id 19))
      (:comment
       (:x 120)
       (:y 104)
       (:w 44)
       (:h 23)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "msecs")
       (:id 20)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 16 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 0 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 5 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 3 :in 2)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 4 :in 0))))))
   (:group-id nil)
   (:name "auto-markers+labels_generator")
   (:x 411)
   (:y 241)
   (:w 200)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "Sound")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Markers")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Labels")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 13))
  (:comment
   (:x 615)
   (:y 231)
   (:w 472)
   (:h 53)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "This subpatch is generating an equidistant list of onsets (markers) associated to the provided by the rightmost inlet list of labels. Note that in this case the length of labels is automatically adjusted to the number of markers.")
   (:id 14))
  (:comment
   (:x 617)
   (:y 279)
   (:w 396)
   (:h 24)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "i.e. : ((100 \"A\") (300 \"B\") (500 \"B\") (700 \"A\") (900 \"C\") (1100 \"D\")...)")
   (:id 15))
  (:comment
   (:x 327)
   (:y 112)
   (:w 89)
   (:h 68)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "1) Unlock
2) Validate
3) Choose file
4) Lock")
   (:id 16))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "Generate_Segments")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (498 573)) (:position (58 83)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 174)
       (:y 45)
       (:w 60)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "Segments") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "Segments")
       (:x 126)
       (:y 431)
       (:w 74)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "Labels") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "Labels")
       (:x 251)
       (:y 190)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 126)
       (:y 377)
       (:w 78)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference cdr)
       (:group-id nil)
       (:name "cdr")
       (:x 186)
       (:y 192)
       (:w 55)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference butlast)
       (:group-id nil)
       (:name "butlast")
       (:x 106)
       (:y 193)
       (:w 75)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference mat-trans)
       (:group-id nil)
       (:name "mat-trans")
       (:x 129)
       (:y 270)
       (:w 92)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "MATRIX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 136)
       (:y 233)
       (:w 83)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference mat-trans)
       (:group-id nil)
       (:name "mat-trans")
       (:x 174)
       (:y 95)
       (:w 92)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "MATRIX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference split)
       (:group-id nil)
       (:name "split")
       (:x 157)
       (:y 131)
       (:w 126)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 9))
      (:comment
       (:x 102)
       (:y 133)
       (:w 43)
       (:h 25)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font-or-nil
         (:font (:font (:face "Calibri") (:size 14) (:style :italic)))
         (:t-or-nil t)))
       (:align nil)
       (:text "times")
       (:id 10))
      (:comment
       (:x 285)
       (:y 134)
       (:w 45)
       (:h 25)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font-or-nil
         (:font (:font (:face "Calibri") (:size 14) (:style :italic)))
         (:t-or-nil t)))
       (:align nil)
       (:text "labels")
       (:id 11))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 50)
       (:y 338)
       (:w 119)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda :lambda)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 8 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 0)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 3 :in 1))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 4 :in 0)))
      (:connection
       (:from (:box 9 :out 1))
       (:to (:box 2 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 3 :in 0))))))
   (:group-id nil)
   (:name "Generate_Segments")
   (:x 341)
   (:y 400)
   (:w 143)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "Segments") (:reactive nil))
    (:output (:name "Labels") (:reactive nil)))
   (:id 17))
  (:comment
   (:x 485)
   (:y 403)
   (:w 494)
   (:h 53)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "This subpatch generates time segments (onset-offset couples) based on the list of markers coming from the right outlet of the sound box object (in this example generated in auto-markers+labels_generator) ")
   (:id 18))
  (:comment
   (:x 508)
   (:y 345)
   (:w 180)
   (:h 28)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Embed markers in sound file ")
   (:id 19))
  (:comment
   (:x 511)
   (:y 472)
   (:w 257)
   (:h 53)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "In this implementation the DYCI2GENERATOR assigns a label to each segment (onset - offset) of the sound file")
   (:id 20))
  (:box
   (:type :function)
   (:reference string)
   (:group-id nil)
   (:name "string")
   (:x 268)
   (:y 572)
   (:w 69)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OBJ")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 407)
   (:y 189)
   (:w 81)
   (:h 40)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :hidden)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "markers")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "markers") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:show-timeline nil))
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 14000.0)
       (:n-samples 672000)
       (:n-channels 2)
       (:sample-rate 48000)
       (:smpl-type :float)
       (:sample-size 24)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname
        (:pathname
         (:directory (:relative :up "Samples"))
         (:device nil)
         (:host nil)
         (:name "Burghos_Among")
         (:type "aif")))))))
   (:id 22))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 495)
   (:y 168)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 12)
   (:id 23))
  (:comment
   (:x 527)
   (:y 170)
   (:w 123)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Number of markers")
   (:id 24))
  (:comment
   (:x 461)
   (:y 712)
   (:w 123)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Crossfade (ms)")
   (:id 25))
  (:comment
   (:x 617)
   (:y 300)
   (:w 278)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "* In this patch we are using generative labels")
   (:id 26))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 525)
   (:y 199)
   (:w 98)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list "A" "B" "C" "D"))
   (:id 27))
  (:comment
   (:x 621)
   (:y 202)
   (:w 69)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "LABELS *")
   (:id 28))
  (:comment
   (:x 531)
   (:y 559)
   (:w 164)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Query for new scenario")
   (:id 29))
  (:comment
   (:x 300)
   (:y 10)
   (:w 313)
   (:h 29)
   (:fgcolor
    (:color-or-nil (:color (:color 0.0 0.0 0.0 1.0)) (:t-or-nil t)))
   (:bgcolor
    (:color-or-nil
     (:color
      (:color 1.0D0 0.9990978240966797D0 0.994353175163269D0 0.0))
     (:t-or-nil t)))
   (:border (:number-or-nil (:number 0.0) (:t-or-nil t)))
   (:roundness (:number-or-nil (:number 0) (:t-or-nil t)))
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Lucida Grande") (:size 18) (:style :bold)))
     (:t-or-nil t)))
   (:align :left)
   (:text "DYCI2 Tutorial patches")
   (:id 30))
  (:comment
   (:x 301)
   (:y 40)
   (:w 247)
   (:h 25)
   (:fgcolor
    (:color-or-nil (:color (:color 0.0 0.0 0.0 1.0)) (:t-or-nil t)))
   (:bgcolor
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border (:number-or-nil (:number 0.0) (:t-or-nil t)))
   (:roundness (:number-or-nil (:number 0) (:t-or-nil t)))
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Lucida Grande") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align :left)
   (:text "A. introduction ")
   (:id 31))
  (:comment
   (:x 301)
   (:y 64)
   (:w 357)
   (:h 25)
   (:fgcolor
    (:color-or-nil (:color (:color 0.0 0.0 0.0 1.0)) (:t-or-nil t)))
   (:bgcolor
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border (:number-or-nil (:number 0.0) (:t-or-nil t)))
   (:roundness (:number-or-nil (:number 0) (:t-or-nil t)))
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Lucida Grande") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align :left)
   (:text "2. Main principles of audio quering")
   (:id 32)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 1)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 7 :in 1))
   (:attributes (:color nil :style nil :modif (0 -0.45))))
  (:connection
   (:from (:box 2 :out 1))
   (:to (:box 17 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 22 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 9 :out 1)) (:to (:box 10 :in 1)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 7 :in 2)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 2 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 0 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 1))
   (:to (:box 0 :in 2))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 13 :in 1)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 13 :in 2)))))