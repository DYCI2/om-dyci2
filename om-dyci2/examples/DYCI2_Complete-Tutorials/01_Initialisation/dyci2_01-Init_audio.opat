
(:patch
 (:name "dyci2_01-Init_audio")
 (:doc "")
 (:info
  (:created "2018/06/17 2:59:29")
  (:modified "2022/07/13 15:43:21")
  (:by "om-sharp")
  (:version 1.06))
 (:window (:size (1131 1005)) (:position (645 -1055)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name "DYCI2GENERATOR")
   (:x 128)
   (:y 431)
   (:w 278)
   (:h 57)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(0 200.0)"
         "(200.0 400.0)"
         "(400.0 600.0)"
         "(600.0 800.0)"
         "(800.0 1000.0)"
         "(1000.0 1200.0)"
         "(1200.0 1400.0)"
         "(1400.0 1600.0)"
         "(1600.0 1800.0)"
         "(1800.0 2000.0)"
         "(2000.0 2200.0)"
         "(2200.0 2400.0)"
         "(2400.0 2600.0)"
         "(2600.0 2800.0)"
         "(2800.0 3000.0)"
         "(3000.0 3200.0)"
         "(3200.0 3400.0)"
         "(3400.0 3600.0)"
         "(3600.0 3800.0)"
         "(3800.0 4000.0)"))
       (:labls
        (:list
         "pizz"
         "st"
         "sp"
         "st"
         "ord"
         "ord"
         "pizz"
         "pizz"
         "ord"
         "pizz"
         "pizz"
         "st"
         "pizz"
         "st"
         "sp"
         "pizz"
         "sp"
         "st"
         "pizz"
         "ord"
         "pizz"))))))
   (:id 0))
  (:box
   (:library "om-dyci2")
   (:type :function)
   (:reference (:symbol "DYCI2QUERY" "DYCI2"))
   (:group-id nil)
   (:name "dyci2query")
   (:x 346)
   (:y 694)
   (:w 97)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "QUERY")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 146)
   (:y 276)
   (:w 242)
   (:h 64)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "markers")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "markers") (:reactive nil)))
   (:window (:size (939 221)) (:position (471 294)))
   (:edition-params (:show-timeline nil))
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 4000.0)
       (:n-samples 192000)
       (:n-channels 2)
       (:sample-rate 48000)
       (:smpl-type :float)
       (:sample-size 24)))
     (:add-slots
      ((:markers
        (:list
         (:list 0 "pizz")
         (:list 200.0 "st")
         (:list 400.0 "sp")
         (:list 600.0 "st")
         (:list 800.0 "ord")
         (:list 1000.0 "ord")
         (:list 1200.0 "pizz")
         (:list 1400.0 "pizz")
         (:list 1600.0 "ord")
         (:list 1800.0 "pizz")
         (:list 2000.0 "pizz")
         (:list 2200.0 "st")
         (:list 2400.0 "pizz")
         (:list 2600.0 "st")
         (:list 2800.0 "sp")
         (:list 3000.0 "pizz")
         (:list 3200.0 "sp")
         (:list 3400.0 "st")
         (:list 3600.0 "pizz")
         (:list 3800.0 "ord")
         (:list 4000.0 "pizz")))
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname
        (:pathname
         (:directory
          (:relative
           :up
           :up
           :up
           :up
           :up
           :up
           :up
           "Nextcloud"
           "STAUD"
           "JMS_Voice"))
         (:device :unspecific)
         (:host :unspecific)
         (:name "JMS-Burghos_Aaa_GLissUpDown_01")
         (:type "aiff")))))))
   (:id 2))
  (:box
   (:type :function)
   (:reference file-chooser)
   (:group-id nil)
   (:name "file-chooser")
   (:x 158)
   (:y 111)
   (:w 103)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :locked)
   (:lambda nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :value)
   (:reference pathname)
   (:group-id nil)
   (:name "value box")
   (:x 25)
   (:y 168)
   (:w 372)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:pathname
     (:directory
      (:absolute
       "Users"
       "dpapanikolaou"
       "Nextcloud"
       "STAUD"
       "JMS_Voice"))
     (:device :unspecific)
     (:host :unspecific)
     (:name "JMS-Burghos_Aaa_GLissUpDown_01")
     (:type "aiff")))
   (:id 4))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 280)
   (:y 746)
   (:w 78)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :function)
   (:reference read-from-string)
   (:group-id nil)
   (:name "read-from-string")
   (:x 185)
   (:y 699)
   (:w 131)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "STRING")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "remix")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (528 694)) (:position (389 112)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "SEGMENTS") (:doc "")))
       (:group-id nil)
       (:name "SEGMENTS")
       (:x 154)
       (:y 59)
       (:w 89)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 268)
       (:y 569)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "SOUND") (:doc "")))
       (:group-id nil)
       (:name "SOUND")
       (:x 91)
       (:y 206)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "CROSSFADE") (:doc "")))
       (:group-id nil)
       (:name "CROSSFADE")
       (:x 320)
       (:y 144)
       (:w 97)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 134)
       (:y 380)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 166)
       (:y 116)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 5))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 273)
       (:y 332)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference split)
       (:group-id nil)
       (:name "split")
       (:x 170)
       (:y 169)
       (:w 61)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference sound-cut)
       (:group-id nil)
       (:name "sound-cut")
       (:x 153)
       (:y 264)
       (:w 94)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "S")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "BEG")
         (:value 0.0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 1.0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference sound-seq)
       (:group-id nil)
       (:name "sound-seq")
       (:x 194)
       (:y 430)
       (:w 96)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda :lambda)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "S1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "S2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "crossfade")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference reduce)
       (:group-id nil)
       (:name "reduce")
       (:x 257)
       (:y 474)
       (:w 75)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 242)
       (:y 225)
       (:w 64)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :function)
       (:reference om-)
       (:group-id nil)
       (:name "om-")
       (:x 168)
       (:y 224)
       (:w 61)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :function)
       (:reference sound-fade)
       (:group-id nil)
       (:name "sound-fade")
       (:x 291)
       (:y 517)
       (:w 100)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "S")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "IN")
         (:value 0.1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "OUT")
         (:value 0.1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 9 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 6 :out 1)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 7 :out 1)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 8 :in 2)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 1 :in 0))))))
   (:group-id nil)
   (:name "remix")
   (:x 423)
   (:y 796)
   (:w 69)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEGMENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CROSSFADE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 155)
   (:y 837)
   (:w 603)
   (:h 85)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size (966 385)) (:position (42 68)))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 1690.0)
       (:n-samples 81120)
       (:n-channels 2)
       (:sample-rate 48000)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname nil)))))
   (:id 8))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name nil)
   (:x 520)
   (:y 504)
   (:w 106)
   (:h 125)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock :locked)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :text-list)
     (:reactive t)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "output-mode") (:reactive nil)))
   (:window (:size (453 118)) (:position (105 137)))
   (:edition-params (:output-mode :text-list) (:read-mode :list))
   (:value
    (:object
     (:class textbuffer)
     (:slots ((:contents (:list "pizz " "ord" "sp"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 9))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 462)
   (:y 649)
   (:w 78)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 471)
   (:y 734)
   (:w 36)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 10)
   (:id 11))
  (:comment
   (:x 120)
   (:y 745)
   (:w 134)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font-or-nil (:font nil) (:t-or-nil nil)))
   (:align nil)
   (:text "get-segments (t1 t2)")
   (:id 12))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "auto-markers+labels_generator")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (876 637)) (:position (513 223)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference arithm-ser)
       (:group-id nil)
       (:name "arithm-ser")
       (:x 119)
       (:y 181)
       (:w 135)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "BEGIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 5)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "STEP")
         (:value 0.2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 153)
       (:y 283)
       (:w 133)
       (:h 31)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list "pizz" "sp" "st" "ord"))
       (:id 1))
      (:box
       (:type :function)
       (:reference nth-random)
       (:group-id nil)
       (:name "nth-random")
       (:x 174)
       (:y 318)
       (:w 103)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 203)
       (:y 356)
       (:w 91)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:reactive nil)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 3))
      (:comment
       (:x 157)
       (:y 264)
       (:w 90)
       (:h 23)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "dummy labels")
       (:id 4))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 362)
       (:y 305)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 10)
       (:id 5))
      (:comment
       (:x 253)
       (:y 185)
       (:w 132)
       (:h 23)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "list onsets (markers)")
       (:id 6))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 162)
       (:y 391)
       (:w 54)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference mat-trans)
       (:group-id nil)
       (:name "mat-trans")
       (:x 138)
       (:y 424)
       (:w 93)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "MATRIX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:comment
       (:x 297)
       (:y 348)
       (:w 154)
       (:h 53)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "Create a random matrix combining markers with labels")
       (:id 9))
      (:comment
       (:x 229)
       (:y 427)
       (:w 311)
       (:h 23)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "list of markers onsets (ms) + list of labels (symbol)")
       (:id 10))
      (:comment
       (:x 395)
       (:y 308)
       (:w 128)
       (:h 23)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "length of marker list")
       (:id 11))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 138)
       (:y 478)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 12))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 143)
       (:y 8)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 328)
       (:y 275)
       (:w 72)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 268)
       (:y 78)
       (:w 35)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 20)
       (:id 15))
      (:box
       (:type :function)
       (:reference sound-dur)
       (:group-id nil)
       (:name "sound-dur")
       (:x 119)
       (:y 61)
       (:w 96)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SOUND")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 127)
       (:y 146)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 17))
      (:box
       (:type :function)
       (:reference /)
       (:group-id nil)
       (:name "/")
       (:x 198)
       (:y 142)
       (:w 59)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "args")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:type :function)
       (:reference *)
       (:group-id nil)
       (:name "*")
       (:x 161)
       (:y 103)
       (:w 43)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "args")
         (:value 1000)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "args")
         (:value 1000)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 258)
       (:y 28)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 0 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 12 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 0 :in 2)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 15 :in 0))))))
   (:group-id nil)
   (:name "auto-markers+labels_generator")
   (:x 218)
   (:y 202)
   (:w 200)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 13))
  (:comment
   (:x 417)
   (:y 208)
   (:w 200)
   (:h 53)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "This subpatch is generating a \"dummy\" list of onsets (markers) with a random list of labels ")
   (:id 14))
  (:comment
   (:x 613)
   (:y 208)
   (:w 233)
   (:h 53)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "i.e. : ((100 \"ord\") (300 \"sp\") (500 \"sp\") (700 \"ord\") (900 \"st\") (1100 \"ord\")...)
")
   (:id 15))
  (:comment
   (:x 169)
   (:y 45)
   (:w 89)
   (:h 68)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "1) Unlock
2) Validate
3) Choose file
4) Lock")
   (:id 16))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "Generate_Segments")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (498 573)) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 126)
       (:y 377)
       (:w 78)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :function)
       (:reference cdr)
       (:group-id nil)
       (:name "cdr")
       (:x 186)
       (:y 192)
       (:w 55)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference butlast)
       (:group-id nil)
       (:name "butlast")
       (:x 106)
       (:y 193)
       (:w 75)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference mat-trans)
       (:group-id nil)
       (:name "mat-trans")
       (:x 129)
       (:y 270)
       (:w 92)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "MATRIX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 136)
       (:y 233)
       (:w 83)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference mat-trans)
       (:group-id nil)
       (:name "mat-trans")
       (:x 233)
       (:y 100)
       (:w 92)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "MATRIX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference split)
       (:group-id nil)
       (:name "split")
       (:x 216)
       (:y 136)
       (:w 126)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 6))
      (:comment
       (:x 177)
       (:y 141)
       (:w 43)
       (:h 25)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font-or-nil
         (:font (:font (:face "Calibri") (:size 14) (:style :italic)))
         (:t-or-nil t)))
       (:align nil)
       (:text "times")
       (:id 7))
      (:comment
       (:x 353)
       (:y 142)
       (:w 45)
       (:h 25)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font-or-nil
         (:font (:font (:face "Calibri") (:size 14) (:style :italic)))
         (:t-or-nil t)))
       (:align nil)
       (:text "labels")
       (:id 8))
      (:box
       (:type :function)
       (:reference write-to-string)
       (:group-id nil)
       (:name "write-to-string")
       (:x 50)
       (:y 338)
       (:w 119)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda :lambda)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJECT")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 233)
       (:y 50)
       (:w 60)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 126)
       (:y 431)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 11))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 2") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "output 2")
       (:x 251)
       (:y 190)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 12)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 11 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 0 :in 1))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 1 :in 0)))
      (:connection
       (:from (:box 6 :out 1))
       (:to (:box 12 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 0 :in 0)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 5 :in 0))
       (:attributes
        (:color
         (:color 0.2 0.4 0.5 1.0)
         :style
         :curved
         :modif
         nil))))))
   (:group-id nil)
   (:name "Generate_Segments")
   (:x 242)
   (:y 354)
   (:w 143)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "output 1") (:reactive nil))
    (:output (:name "output 2") (:reactive nil)))
   (:id 17))
  (:comment
   (:x 384)
   (:y 359)
   (:w 389)
   (:h 53)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "This subpatch generates time tegments based on the list of markers coming from the right outlet of the sound box object (in this example generated in auto-markers+labels_generator) ")
   (:id 18))
  (:comment
   (:x 387)
   (:y 293)
   (:w 180)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Embed markers in sound file ")
   (:id 19))
  (:comment
   (:x 407)
   (:y 433)
   (:w 257)
   (:h 53)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "In this implementation the DYCI2GENERATOR assigns a label to each segment (onset - offset) of the sound file")
   (:id 20))
  (:box
   (:type :function)
   (:reference string)
   (:group-id nil)
   (:name "string")
   (:x 414)
   (:y 590)
   (:w 69)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OBJ")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 280)
   (:y 123)
   (:w 157)
   (:h 45)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "markers")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "markers") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:show-timeline nil))
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 4000.0)
       (:n-samples 192000)
       (:n-channels 2)
       (:sample-rate 48000)
       (:smpl-type :float)
       (:sample-size 24)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname
        (:pathname
         (:directory
          (:relative
           :up
           :up
           :up
           :up
           :up
           :up
           :up
           "Nextcloud"
           "STAUD"
           "JMS_Voice"))
         (:device :unspecific)
         (:host :unspecific)
         (:name "JMS-Burghos_Aaa_GLissUpDown_01")
         (:type "aiff")))))))
   (:id 22))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 452)
   (:y 165)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 20)
   (:id 23))
  (:comment
   (:x 484)
   (:y 167)
   (:w 123)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Number of markers")
   (:id 24)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 1)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 7 :in 1))
   (:attributes (:color nil :style nil :modif (0 -0.45))))
  (:connection
   (:from (:box 2 :out 1))
   (:to (:box 17 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 22 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 9 :out 1)) (:to (:box 10 :in 1)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 7 :in 2)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 2 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 0 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 1))
   (:to (:box 0 :in 2))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 13 :in 1)))))