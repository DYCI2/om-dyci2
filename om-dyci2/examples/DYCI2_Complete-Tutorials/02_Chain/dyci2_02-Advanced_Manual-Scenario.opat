
(:patch
 (:name "dyci2_02-Advanced_Manual-Scenario")
 (:doc "")
 (:info
  (:created "2018/10/12 13:57:27")
  (:modified "2022/08/22 0:57:48")
  (:by "om-sharp")
  (:version 1.06))
 (:window (:size (1303 998)) (:position (233 61)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 520)
   (:y 612)
   (:w 38)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.9999961853027344D0
       0.9999390840530396D0
       0.0410333052277565D0
       0.5529412))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 40)
   (:id 0))
  (:comment
   (:x 630)
   (:y 81)
   (:w 119)
   (:h 22)
   (:fgcolor
    (:color-or-nil
     (:color
      (:color
       0.9904156923294067D0
       0.5002691149711609D0
       0.032865822315216064D0
       1.0))
     (:t-or-nil t)))
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "1) Choose dataset")
   (:id 1))
  (:comment
   (:x 383)
   (:y 492)
   (:w 228)
   (:h 36)
   (:fgcolor
    (:color-or-nil
     (:color
      (:color
       0.9904156923294067D0
       0.5002691149711609D0
       0.032865822315216064D0
       1.0))
     (:t-or-nil t)))
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "6) Set max successive label continuity on the scenario provided in 3.***")
   (:id 2))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 382)
   (:y 524)
   (:w 173)
   (:h 31)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.9999961853027344D0
       0.9999390840530396D0
       0.0410333052277565D0
       0.5529412))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1 2 5))
   (:id 3))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 683)
   (:y 509)
   (:w 118)
   (:h 39)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.9999961853027344D0
       0.9999390840530396D0
       0.0410333052277565D0
       0.5529412))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "MyManualScenario")
   (:id 4))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 165)
   (:y 413)
   (:w 322)
   (:h 48)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock :eval-once)
   (:reactive nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     "(-1 m -1 -1 -1)"
     "(-1 m -1 -1 -1)"
     "(-1 b -1 -1 -1)"
     "(-1 b -1 -1 -1)"
     "(-1 d -1 -1 -1)"
     "(-1 a -1 -1 -1)"
     "(-1 d -1 -1 -1)"
     "(-1 a -1 -1 -1)"
     "(-1 d -1 -1 -1)"
     "(-1 a -1 -1 -1)"
     "(-1 d -1 -1 -1)"
     "(-1 a -1 -1 -1)"
     "(-1 d -1 -1 -1)"
     "(-1 a -1 -1 -1)"
     "(-1 d -1 -1 -1)"
     "(-1 a -1 -1 -1)"
     "(-1 d -1 -1 -1)"
     "(-1 a -1 -1 -1)"
     "(-1 d -1 -1 -1)"))
   (:id 5))
  (:box
   (:type :function)
   (:reference length)
   (:group-id nil)
   (:name "length")
   (:x 381)
   (:y 566)
   (:w 72)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :eval-once)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 413)
   (:y 613)
   (:w 54)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 242)
   (:y 277)
   (:w 242)
   (:h 29)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.9999961853027344D0
       0.9999390840530396D0
       0.0410333052277565D0
       0.5529412))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list m m b b d a d a d a d a d a d a d a d))
   (:id 8))
  (:comment
   (:x 272)
   (:y 131)
   (:w 324)
   (:h 22)
   (:fgcolor
    (:color-or-nil
     (:color
      (:color
       0.9904156923294067D0
       0.5002691149711609D0
       0.032865822315216064D0
       1.0))
     (:t-or-nil t)))
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "4) Configure the state of the active dimensions (cf 3). **")
   (:id 9))
  (:comment
   (:x 49)
   (:y 277)
   (:w 194)
   (:h 106)
   (:fgcolor
    (:color-or-nil
     (:color
      (:color
       0.9904156923294067D0
       0.5002691149711609D0
       0.032865822315216064D0
       1.0))
     (:t-or-nil t)))
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "5) Scenario configuration. 
Set the label succession of your own scenario. 
() to let a dimension free [must be \"0\" in the list of dimensions]
within a list: -1 to let one label free")
   (:id 10))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 273)
   (:y 150)
   (:w 128)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.9999961853027344D0
       0.9999390840530396D0
       0.0410333052277565D0
       0.5529412))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 1 0 0 0 0))
   (:id 11))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 788)
   (:y 269)
   (:w 67)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.9999961853027344D0
       0.9999390840530396D0
       0.0410333052277565D0
       0.5529412))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "aiff")
   (:id 12))
  (:box
   (:library "om-dyci2")
   (:type :object)
   (:reference (:symbol "DYCI2GENERATOR" "DYCI2"))
   (:group-id nil)
   (:name nil)
   (:x 609)
   (:y 371)
   (:w 335)
   (:h 54)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.9999992847442627D0
       0.9999744296073914D0
       0.9999912977218628D0
       0.4))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEMORY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LABLS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "MEMORY") (:reactive nil))
    (:output (:name "LABLS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "DYCI2GENERATOR" "DYCI2"))
     (:slots
      ((:memory
        (:list
         "(1 42226 43201)"
         "(1 43201 44155)"
         "(1 44155 45691)"
         "(1 45691 48037)"
         "(1 48037 49466)"
         "(1 49466 49859)"
         "(1 49859 50371)"
         "(1 50371 50558)"
         "(1 50558 52458)"
         "(1 52458 54795)"
         "(1 54795 56526)"
         "(1 56526 57428)"
         "(1 57428 59084)"
         "(1 59084 59532)"
         "(1 59532 60421)"
         "(1 60421 62383)"
         "(1 62383 64905)"
         "(1 64905 65074)"
         "(1 65074 66745)"
         "(1 66745 67261)"
         "(1 67261 67850)"
         "(1 67850 68426)"
         "(1 68426 70448)"
         "(1 70448 72300)"
         "(1 72300 73089)"
         "(1 73089 74182)"
         "(1 74182 75718)"
         "(1 75718 75919)"
         "(1 75919 76588)"
         "(1 76588 78886)"
         "(1 78886 79525)"
         "(1 79525 81690)"
         "(1 81690 83183)"
         "(1 83183 83546)"
         "(1 83546 83924)"
         "(1 83924 84360)"
         "(1 84360 85772)"
         "(1 85772 86997)"
         "(1 86997 87680)"
         "(1 87680 89372)"
         "(1 89372 90071)"
         "(1 90071 92683)"
         "(1 92683 94930)"
         "(1 94930 96040)"
         "(1 96040 96139)"
         "(1 96139 97565)"
         "(1 97565 100178)"
         "(1 100178 101150)"
         "(1 101150 102458)"
         "(1 102458 104452)"
         "(1 104452 107411)"
         "(1 107411 108060)"
         "(1 108060 108695)"
         "(1 108695 110007)"
         "(2 0 1876)"
         "(2 1876 2398)"
         "(2 2398 2907)"
         "(2 2907 5108)"
         "(2 5108 6217)"
         "(2 6217 6991)"
         "(2 6991 7525)"
         "(2 7525 8164)"
         "(2 8164 9684)"
         "(2 9684 12561)"
         "(2 12561 15552)"
         "(2 15552 15791)"
         "(2 15791 15821)"
         "(2 15821 16699)"
         "(2 16699 17257)"
         "(2 17257 17894)"
         "(2 17894 18507)"
         "(2 18507 19081)"
         "(2 19081 19272)"
         "(2 19272 19330)"
         "(2 19330 19538)"
         "(2 19538 19638)"
         "(2 19638 19869)"
         "(2 19869 20169)"
         "(2 20169 20488)"
         "(2 20488 21170)"
         "(2 21170 22862)"
         "(2 22862 23504)"
         "(2 23504 25037)"
         "(2 25037 25037)"
         "(2 25037 25413)"
         "(2 25413 26853)"
         "(2 26853 28961)"
         "(2 28961 29150)"
         "(2 29150 29150)"
         "(2 29150 29150)"
         "(2 29150 29384)"
         "(2 29384 31478)"
         "(2 31478 32011)"
         "(2 32011 32650)"
         "(2 32650 34170)"
         "(2 34170 37048)"
         "(2 37048 40039)"
         "(2 40039 40308)"
         "(2 40308 41274)"
         "(2 41274 42226)"))
       (:labls
        (:list
         "(-1 c -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 b -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 b -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 x -1 -1 -1)"
         "(-1 f -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 b -1 -1 -1)"
         "(-1 m -1 -1 -1)"
         "(-1 b -1 -1 -1)"
         "(-1 d -1 -1 -1)"
         "(-1 x -1 -1 -1)"
         "(-1 m -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 x -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 f -1 -1 -1)"
         "(-1 m -1 -1 -1)"
         "(-1 x -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 f -1 -1 -1)"
         "(-1 m -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 x -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 b -1 -1 -1)"
         "(-1 x -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 m -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 m -1 -1 -1)"
         "(-1 x -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 m -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 d -1 -1 -1)"
         "(-1 x -1 -1 -1)"
         "(-1 m -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 d -1 -1 -1)"
         "(-1 x -1 -1 -1)"
         "(-1 d -1 -1 -1)"
         "(-1 x -1 -1 -1)"
         "(-1 d -1 -1 -1)"
         "(-1 d -1 -1 -1)"
         "(-1 m -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 m -1 -1 -1)"
         "(-1 x -1 -1 -1)"
         "(-1 d -1 -1 -1)"
         "(-1 m -1 -1 -1)"
         "(-1 b -1 -1 -1)"
         "(-1 d -1 -1 -1)"
         "(-1 x -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 d -1 -1 -1)"
         "(-1 m -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 c -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 a -1 -1 -1)"
         "(-1 d -1 -1 -1)"
         "(-1 m -1 -1 -1)"
         "(-1 x -1 -1 -1)"))))))
   (:id 13))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "function_process_label")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (1645 653)) (:position (87 233)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (e list_activation_labels) "
       "  (write-to-string"
       "   (append "
       "    (list (if (> (nth 0 list_activation_labels) 0) (round (/ (nth 0 e) (nth 0 list_activation_labels)))  -1))"
       "    (loop for i from 1 to (- (length e) 1)"
       "          collect (if (and (nth i list_activation_labels) (> (nth i list_activation_labels) 0)) (nth i e)  -1)"
       "          ;collect (if (and (nth i list_activation_labels) (> (nth i list_activation_labels) 0)) (round (/ (nth i e) (nth i list_activation_labels)))  -1)"
       "          )"
       "    )"
       "   )"
       ")"
       "  "
       ""))))
   (:group-id nil)
   (:name "function_process_label")
   (:x 292)
   (:y 209)
   (:w 188)
   (:h 28)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.030046656727790833D0
       0.24989540874958038D0
       0.4119427800178528D0
       0.5019608))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda :lambda)
   (:reactive nil)
   (:inputs
    (:input (:type :standard) (:name "E") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST_ACTIVATION_LABELS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 339)
   (:y 312)
   (:w 96)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value (:list nil))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value (:list nil))
     (:reactive nil))
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value (:list nil))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value (:list nil))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "gather-dimensions-query")
     (:doc "")
     (:info (:created nil) (:modified nil) (:by nil) (:version nil))
     (:window (:size (1024 671)) (:position (262 939)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (list_activation_labels list_dimensions) "
       "  (let* ("
       "         (l_dimensions (loop for l in list_dimensions collect (length l)))"
       "         (l_max (list-max l_dimensions))"
       "         )"
       "    (loop for i from 0 to (- l_max 1)"
       "          collect (loop for j from 0 to (- (length list_activation_labels) 1)"
       "                        collect (if "
       "                                    (and "
       "                                     (> (nth j list_activation_labels) 0)"
       "                                     (> (nth j l_dimensions) 0)"
       "                                     (<= i (- (nth j l_dimensions) 1))"
       "                                     )"
       "                                    (nth i (nth j list_dimensions))"
       "                                  -1)"
       "                        )"
       "          into labels"
       "          finally return labels"
       "          )"
       "    )"
       ")"))))
   (:group-id nil)
   (:name "gather-dimensions-query")
   (:x 252)
   (:y 342)
   (:w 177)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST_ACTIVATION_LABELS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST_DIMENSIONS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 262)
   (:y 382)
   (:w 139)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value box)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value name)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:comment
   (:x 73)
   (:y 707)
   (:w 248)
   (:h 22)
   (:fgcolor
    (:color-or-nil
     (:color
      (:color
       0.9904156923294067D0
       0.5002691149711609D0
       0.032865822315216064D0
       1.0))
     (:t-or-nil t)))
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "8) EVALUATE (select box then press \"v\")")
   (:id 18))
  (:comment
   (:x 302)
   (:y 8)
   (:w 476)
   (:h 30)
   (:fgcolor nil)
   (:bgcolor
    (:color-or-nil
     (:color
      (:color
       0.8902462720870972D0
       0.6694902181625366D0
       0.2833995819091797D0
       0.48235294))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 18) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "OM-DYCI2 TUTORIAL 1: Generate a manual scenario")
   (:id 19))
  (:comment
   (:x 554)
   (:y 616)
   (:w 112)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Crossfade (ms)")
   (:id 20))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 325)
   (:y 792)
   (:w 557)
   (:h 56)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive t)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size (650 200)) (:position (42 69)))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:n-samples nil)
       (:n-channels nil)
       (:sample-rate nil)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname
        (:pathname
         (:directory
          (:relative
           :up
           :up
           :up
           :up
           :up
           :up
           :up
           :up
           "jnika"
           "Documents"
           "GitHub"
           "om-dyci2"
           "om-dyci2"
           "patches"
           "1-advanced-tutorials-chaining"
           "Results"
           "MyManualScenario_(dur=0)(vocal_playing_mode=1)(size=0)_[Manual_Scen][Soprano]"))
         (:device nil)
         (:host nil)
         (:name "Scen[L19C19]_L19_C19-Gen3_C5")
         (:type "wav")))))))
   (:id 21))
  (:box
   (:type :interface)
   (:reference list-selection)
   (:group-id nil)
   (:name "list-selection")
   (:x 73)
   (:y 724)
   (:w 949)
   (:h 49)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:multiple-selection nil)
   (:cell-height 12)
   (:cell-font
    (:font (:face "Lucida Grande") (:size 11) (:style :plain)))
   (:output-mode :value)
   (:inputs
    (:input (:type :key) (:name "items") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value
    (:pathname
     (:directory
      (:absolute
       "Users"
       "jnika"
       "Documents"
       "GitHub"
       "om-dyci2"
       "om-dyci2"
       "patches"
       "1-advanced-tutorials-chaining"
       "Results"
       "MyManualScenario_(dur=0)(vocal_playing_mode=1)(size=0)_[Manual_Scen][Soprano]"))
     (:device :unspecific)
     (:host nil)
     (:name "Scen[L19C19]_L19_C19-Gen3_C5")
     (:type "wav")))
   (:items
    (:list
     (:pathname
      (:directory
       (:absolute
        "Users"
        "jnika"
        "Documents"
        "GitHub"
        "om-dyci2"
        "om-dyci2"
        "patches"
        "1-advanced-tutorials-chaining"
        "Results"
        "MyManualScenario_(dur=0)(vocal_playing_mode=1)(size=0)_[Manual_Scen][Soprano]"))
      (:device :unspecific)
      (:host nil)
      (:name "Scen[L19C19]_L19_C19-Gen1_C1")
      (:type "wav"))
     (:pathname
      (:directory
       (:absolute
        "Users"
        "jnika"
        "Documents"
        "GitHub"
        "om-dyci2"
        "om-dyci2"
        "patches"
        "1-advanced-tutorials-chaining"
        "Results"
        "MyManualScenario_(dur=0)(vocal_playing_mode=1)(size=0)_[Manual_Scen][Soprano]"))
      (:device :unspecific)
      (:host nil)
      (:name "Scen[L19C19]_L19_C19-Gen2_C2")
      (:type "wav"))
     (:pathname
      (:directory
       (:absolute
        "Users"
        "jnika"
        "Documents"
        "GitHub"
        "om-dyci2"
        "om-dyci2"
        "patches"
        "1-advanced-tutorials-chaining"
        "Results"
        "MyManualScenario_(dur=0)(vocal_playing_mode=1)(size=0)_[Manual_Scen][Soprano]"))
      (:device :unspecific)
      (:host nil)
      (:name "Scen[L19C19]_L19_C19-Gen3_C5")
      (:type "wav"))))
   (:selection (:list 2))
   (:id 22))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 271)
   (:y 73)
   (:w 333)
   (:h 30)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.9999961853027344D0
       0.9999390840530396D0
       0.0410333052277565D0
       0.5529412))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     "dur"
     "playing_mode"
     "size"
     "register"
     "vibrato"
     "intensity"))
   (:id 23))
  (:comment
   (:x 109)
   (:y 793)
   (:w 209)
   (:h 50)
   (:fgcolor
    (:color-or-nil
     (:color
      (:color
       0.9904156923294067D0
       0.5002691149711609D0
       0.032865822315216064D0
       1.0))
     (:t-or-nil t)))
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "9) WAIT FOR THE 3 GENERATION RUNS TO BE FINISHED, THEN
CMD + CLICK ON THE PATHS")
   (:id 24))
  (:comment
   (:x 42)
   (:y 127)
   (:w 207)
   (:h 134)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "Dataset: Soprano improvisation
(by courtesy of Marta Gentilucci) 
Labels: vocal playing modes
a: Tenuto
b: Ribattuto
c: Agiltà
d: Stacatto
f: Silence
m: Breathy sound")
   (:id 25))
  (:box
   (:type :function)
   (:reference (:symbol "OM-DIRECTORY" "OM-API"))
   (:group-id nil)
   (:name "om-directory")
   (:x 697)
   (:y 231)
   (:w 109)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATH")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "type") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:type :function)
   (:reference (:symbol "OM-CHOOSE-DIRECTORY-DIALOG" "OM-API"))
   (:group-id nil)
   (:name "om-choose-directory-dialog")
   (:x 632)
   (:y 99)
   (:w 192)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :locked)
   (:lambda nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 27))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 731)
   (:y 197)
   (:w 75)
   (:h 29)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.9999961853027344D0
       0.9999390840530396D0
       0.0410333052277565D0
       0.5529412))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "txt")
   (:id 28))
  (:box
   (:type :function)
   (:reference directory-namestring)
   (:group-id nil)
   (:name "directory-namestring")
   (:x 651)
   (:y 140)
   (:w 152)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "P")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 29))
  (:comment
   (:x 826)
   (:y 72)
   (:w 204)
   (:h 83)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "1. Select
2. Evaluate
3. Choose the directory (folder) containing your dataset (Corpus)
4. Lock")
   (:id 30))
  (:comment
   (:x 805)
   (:y 201)
   (:w 133)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "select only text files")
   (:id 31))
  (:comment
   (:x 797)
   (:y 517)
   (:w 133)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "New results name")
   (:id 32))
  (:comment
   (:x 854)
   (:y 272)
   (:w 371)
   (:h 23)
   (:fgcolor
    (:color-or-nil
     (:color
      (:color
       0.9862460494041443D0
       0.007120788097381592D0
       0.02743418887257576D0
       1.0))
     (:t-or-nil t)))
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "=>trouver une maniere pour charger plusieurs formats audio")
   (:id 33))
  (:comment
   (:x 872)
   (:y 572)
   (:w 171)
   (:h 23)
   (:fgcolor
    (:color-or-nil
     (:color
      (:color
       0.9862460494041443D0
       0.007120788097381592D0
       0.02743418887257576D0
       1.0))
     (:t-or-nil t)))
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Optimiser le format output")
   (:id 34))
  (:comment
   (:x 882)
   (:y 300)
   (:w 364)
   (:h 68)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Gather and output from the leftmost outlet : [audio file], from the middle outlet : [file-index onset offset] and from the rightmost outlet [active dimensions data] of all analysis files (txt) inside your directory.  ")
   (:id 35))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative :up :up "DYCI2_abstractions"))
      (:device nil)
      (:host nil)
      (:name "Loop_Process_Dataset")
      (:type "opat"))))
   (:group-id nil)
   (:name "Loop_Process_Dataset")
   (:x 724)
   (:y 312)
   (:w 158)
   (:h 37)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.5019567608833313D0
       0.9999629259109497D0
       0.031039152294397354D0
       0.5764706))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "lab_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "list_activation_labels")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "extension_audio_files")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function_process_label")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "sound") (:reactive nil))
    (:output (:name "dataset-segments") (:reactive nil))
    (:output (:name "processed-labels") (:reactive nil)))
   (:id 36))
  (:comment
   (:x 685)
   (:y 489)
   (:w 171)
   (:h 22)
   (:fgcolor
    (:color-or-nil
     (:color
      (:color
       0.9904156923294067D0
       0.5002691149711609D0
       0.032865822315216064D0
       1.0))
     (:t-or-nil t)))
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "7) Set name for new results")
   (:id 37))
  (:comment
   (:x 159)
   (:y 943)
   (:w 337)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "*** Each continuity will generate a new resulting sound")
   (:id 38))
  (:comment
   (:x 159)
   (:y 899)
   (:w 699)
   (:h 38)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "** 0=ignore dimension, 1=include dimension 
Here : ((ignore \"dur\") (include \"playing_mode\") (ignore \"size\") (ignore \"register\") (ignore \"vibrato\") (ignore \"intensity\"))")
   (:id 39))
  (:comment
   (:x 272)
   (:y 54)
   (:w 160)
   (:h 22)
   (:fgcolor
    (:color-or-nil
     (:color
      (:color
       0.9904156923294067D0
       0.5002691149711609D0
       0.032865822315216064D0
       1.0))
     (:t-or-nil t)))
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "3) Set active dimensions *")
   (:id 40))
  (:comment
   (:x 729)
   (:y 179)
   (:w 239)
   (:h 22)
   (:fgcolor
    (:color-or-nil
     (:color
      (:color
       0.9904156923294067D0
       0.5002691149711609D0
       0.032865822315216064D0
       1.0))
     (:t-or-nil t)))
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Helvetica") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "2) Configure analysis and audio file type")
   (:id 41))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative :up :up "DYCI2_abstractions"))
      (:device nil)
      (:host nil)
      (:name "Loop_Interpretations_Scenario")
      (:type "opat"))))
   (:group-id nil)
   (:name "Loop_Interpretations_Scenario")
   (:x 379)
   (:y 658)
   (:w 200)
   (:h 60)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.5019567608833313D0
       0.9999629259109497D0
       0.031039152294397354D0
       0.5764706))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "QUERY")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LENGTH")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SCEN-MAX-CONT-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE-MAX-CONT-LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE_GENERATOR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUND_DB")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "XFADE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTPUT_DIR")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 42))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative :up :up "DYCI2_abstractions"))
      (:device nil)
      (:host nil)
      (:name "Output_Folder")
      (:type "opat"))))
   (:group-id nil)
   (:name "Output_Folder")
   (:x 672)
   (:y 562)
   (:w 200)
   (:h 56)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.5019567608833313D0
       0.9999629259109497D0
       0.031039152294397354D0
       0.5764706))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "scen_dir")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "head_title")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "root_dir")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "parameters_names")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "parameters_values")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 43))
  (:comment
   (:x 160)
   (:y 874)
   (:w 663)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "* ATTENTION to adjust the length of the active dimensions set in 3 with the dimension's state list (in 4 and 5)  ")
   (:id 44))
  (:comment
   (:x 478)
   (:y 204)
   (:w 179)
   (:h 38)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "lambda function processing dimension's state")
   (:id 45)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 42 :in 6)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 42 :in 3)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 43 :in 1)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 6 :in 0))
   (:attributes (:color nil :style nil :modif (0 0.334058))))
  (:connection (:from (:box 5 :out 0)) (:to (:box 42 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 42 :in 1)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 42 :in 2)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 15 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 14 :in 1)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 16 :in 0))
   (:attributes (:color nil :style nil :modif (0 0.3906528))))
  (:connection (:from (:box 11 :out 0)) (:to (:box 36 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 43 :in 4)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 36 :in 2)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 42 :in 4)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 17 :in 0))
   (:attributes (:color nil :style nil :modif (0 0.33757558))))
  (:connection (:from (:box 14 :out 0)) (:to (:box 36 :in 3)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 16 :in 1)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 17 :in 1)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 5 :in 0)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 21 :in 0)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 43 :in 3)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 36 :in 0)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 29 :in 0)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 26 :in 1)))
  (:connection (:from (:box 29 :out 0)) (:to (:box 26 :in 0)))
  (:connection (:from (:box 29 :out 0)) (:to (:box 43 :in 2)))
  (:connection (:from (:box 36 :out 0)) (:to (:box 42 :in 5)))
  (:connection (:from (:box 36 :out 1)) (:to (:box 13 :in 1)))
  (:connection (:from (:box 36 :out 2)) (:to (:box 13 :in 2)))
  (:connection (:from (:box 42 :out 0)) (:to (:box 22 :in 0)))
  (:connection (:from (:box 43 :out 0)) (:to (:box 42 :in 7)))))